{
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "_symbol",
                    "type": "string"
                },
                {
                    "internalType": "uint256",
                    "name": "_start",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_end",
                    "type": "uint256"
                },
                {
                    "internalType": "uint8",
                    "name": "_numOfVotesPerUser",
                    "type": "uint8"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "choice",
                    "type": "string"
                }
            ],
            "name": "addChoice",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "choices",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "name": "choicesMap",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "end",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getAllChoices",
            "outputs": [
                {
                    "internalType": "string[]",
                    "name": "",
                    "type": "string[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getNumOfVotesForUser",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getResults",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "numOfVotesPerUser",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "start",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "choice",
                    "type": "string"
                },
                {
                    "internalType": "uint8",
                    "name": "numberOfVotes",
                    "type": "uint8"
                }
            ],
            "name": "vote",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "name": "votesPerChoice",
            "outputs": [
                {
                    "internalType": "uint24",
                    "name": "",
                    "type": "uint24"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "votesPerUser",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        }
    ],
    "allSourcePaths": {
        "0": "/home/lukas/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol",
        "2": "/home/lukas/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Context.sol",
        "4": "contracts/VotingSession.sol"
    },
    "ast": {
        "absolutePath": "contracts/VotingSession.sol",
        "exportedSymbols": {
            "Context": [640],
            "IERC20": [163],
            "Ownable": [619],
            "VotingHub": [85],
            "VotingSession": [515]
        },
        "id": 516,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 165,
                "literals": ["solidity", "^", "0.8", ".0"],
                "nodeType": "PragmaDirective",
                "src": "32:23:4"
            },
            {
                "absolutePath": "/home/lukas/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol",
                "file": "@openzeppelin/contracts/access/Ownable.sol",
                "id": 166,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 516,
                "sourceUnit": 620,
                "src": "57:52:4",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/home/lukas/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol",
                "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
                "id": 167,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 516,
                "sourceUnit": 164,
                "src": "110:56:4",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "contracts/VotingHub.sol",
                "file": "./VotingHub.sol",
                "id": 168,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 516,
                "sourceUnit": 86,
                "src": "168:25:4",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 169,
                            "name": "Ownable",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 619,
                            "src": "221:7:4"
                        },
                        "id": 170,
                        "nodeType": "InheritanceSpecifier",
                        "src": "221:7:4"
                    }
                ],
                "canonicalName": "VotingSession",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 515,
                "linearizedBaseContracts": [515, 619, 640],
                "name": "VotingSession",
                "nameLocation": "204:13:4",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "functionSelector": "95d89b41",
                        "id": 172,
                        "mutability": "mutable",
                        "name": "symbol",
                        "nameLocation": "249:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 515,
                        "src": "235:20:4",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string"
                        },
                        "typeName": {
                            "id": 171,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "235:6:4",
                            "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "be9a6555",
                        "id": 174,
                        "mutability": "mutable",
                        "name": "start",
                        "nameLocation": "276:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 515,
                        "src": "261:20:4",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 173,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "261:7:4",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "efbe1c1c",
                        "id": 176,
                        "mutability": "mutable",
                        "name": "end",
                        "nameLocation": "302:3:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 515,
                        "src": "287:18:4",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 175,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "287:7:4",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "bf247f79",
                        "id": 178,
                        "mutability": "mutable",
                        "name": "numOfVotesPerUser",
                        "nameLocation": "325:17:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 515,
                        "src": "312:30:4",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                        },
                        "typeName": {
                            "id": 177,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "312:5:4",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "dde06f49",
                        "id": 182,
                        "mutability": "mutable",
                        "name": "votesPerUser",
                        "nameLocation": "381:12:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 515,
                        "src": "348:45:4",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                            "typeString": "mapping(address => uint8)"
                        },
                        "typeName": {
                            "id": 181,
                            "keyType": {
                                "id": 179,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "356:7:4",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                }
                            },
                            "nodeType": "Mapping",
                            "src": "348:25:4",
                            "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                                "typeString": "mapping(address => uint8)"
                            },
                            "valueType": {
                                "id": 180,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "367:5:4",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                }
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "f6fd7fde",
                        "id": 185,
                        "mutability": "mutable",
                        "name": "choices",
                        "nameLocation": "416:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 515,
                        "src": "400:23:4",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                            "typeString": "string[]"
                        },
                        "typeName": {
                            "baseType": {
                                "id": 183,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "400:6:4",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage_ptr",
                                    "typeString": "string"
                                }
                            },
                            "id": 184,
                            "nodeType": "ArrayTypeName",
                            "src": "400:8:4",
                            "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                                "typeString": "string[]"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "22517a16",
                        "id": 189,
                        "mutability": "mutable",
                        "name": "choicesMap",
                        "nameLocation": "535:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 515,
                        "src": "504:41:4",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                            "typeString": "mapping(string => bool)"
                        },
                        "typeName": {
                            "id": 188,
                            "keyType": {
                                "id": 186,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "512:6:4",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage_ptr",
                                    "typeString": "string"
                                }
                            },
                            "nodeType": "Mapping",
                            "src": "504:23:4",
                            "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                                "typeString": "mapping(string => bool)"
                            },
                            "valueType": {
                                "id": 187,
                                "name": "bool",
                                "nodeType": "ElementaryTypeName",
                                "src": "522:4:4",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                }
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "91623640",
                        "id": 193,
                        "mutability": "mutable",
                        "name": "votesPerChoice",
                        "nameLocation": "584:14:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 515,
                        "src": "551:47:4",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint24_$",
                            "typeString": "mapping(string => uint24)"
                        },
                        "typeName": {
                            "id": 192,
                            "keyType": {
                                "id": 190,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "559:6:4",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage_ptr",
                                    "typeString": "string"
                                }
                            },
                            "nodeType": "Mapping",
                            "src": "551:25:4",
                            "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint24_$",
                                "typeString": "mapping(string => uint24)"
                            },
                            "valueType": {
                                "id": 191,
                                "name": "uint24",
                                "nodeType": "ElementaryTypeName",
                                "src": "569:6:4",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint24",
                                    "typeString": "uint24"
                                }
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 227,
                            "nodeType": "Block",
                            "src": "734:253:4",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                },
                                                "id": 207,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 205,
                                                    "name": "_numOfVotesPerUser",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 201,
                                                    "src": "765:18:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint8",
                                                        "typeString": "uint8"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": ">",
                                                "rightExpression": {
                                                    "hexValue": "30",
                                                    "id": 206,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "786:1:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    },
                                                    "value": "0"
                                                },
                                                "src": "765:22:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "4e756d626572206f6620766f746573207065722075736572206d7573742062652067726561746572207468616e20302e",
                                                "id": 208,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "801:50:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_f7ecf63be891f67af7d41e16e8bd7c32895b78a6d8b2459b8957d0903f765c4e",
                                                    "typeString": "literal_string \"Number of votes per user must be greater than 0.\""
                                                },
                                                "value": "Number of votes per user must be greater than 0."
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_f7ecf63be891f67af7d41e16e8bd7c32895b78a6d8b2459b8957d0903f765c4e",
                                                    "typeString": "literal_string \"Number of votes per user must be greater than 0.\""
                                                }
                                            ],
                                            "id": 204,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18, -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "744:7:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 209,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "744:117:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 210,
                                    "nodeType": "ExpressionStatement",
                                    "src": "744:117:4"
                                },
                                {
                                    "expression": {
                                        "id": 213,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 211,
                                            "name": "symbol",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 172,
                                            "src": "872:6:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_storage",
                                                "typeString": "string storage ref"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 212,
                                            "name": "_symbol",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 195,
                                            "src": "881:7:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                            }
                                        },
                                        "src": "872:16:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage",
                                            "typeString": "string storage ref"
                                        }
                                    },
                                    "id": 214,
                                    "nodeType": "ExpressionStatement",
                                    "src": "872:16:4"
                                },
                                {
                                    "expression": {
                                        "id": 217,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 215,
                                            "name": "start",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 174,
                                            "src": "898:5:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 216,
                                            "name": "_start",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 197,
                                            "src": "906:6:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "898:14:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 218,
                                    "nodeType": "ExpressionStatement",
                                    "src": "898:14:4"
                                },
                                {
                                    "expression": {
                                        "id": 221,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 219,
                                            "name": "end",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 176,
                                            "src": "922:3:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 220,
                                            "name": "_end",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 199,
                                            "src": "928:4:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "922:10:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 222,
                                    "nodeType": "ExpressionStatement",
                                    "src": "922:10:4"
                                },
                                {
                                    "expression": {
                                        "id": 225,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 223,
                                            "name": "numOfVotesPerUser",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 178,
                                            "src": "942:17:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 224,
                                            "name": "_numOfVotesPerUser",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 201,
                                            "src": "962:18:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "src": "942:38:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        }
                                    },
                                    "id": 226,
                                    "nodeType": "ExpressionStatement",
                                    "src": "942:38:4"
                                }
                            ]
                        },
                        "id": 228,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 202,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 195,
                                    "mutability": "mutable",
                                    "name": "_symbol",
                                    "nameLocation": "640:7:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 228,
                                    "src": "626:21:4",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 194,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "626:6:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 197,
                                    "mutability": "mutable",
                                    "name": "_start",
                                    "nameLocation": "665:6:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 228,
                                    "src": "657:14:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 196,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "657:7:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 199,
                                    "mutability": "mutable",
                                    "name": "_end",
                                    "nameLocation": "689:4:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 228,
                                    "src": "681:12:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 198,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "681:7:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 201,
                                    "mutability": "mutable",
                                    "name": "_numOfVotesPerUser",
                                    "nameLocation": "709:18:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 228,
                                    "src": "703:24:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                    },
                                    "typeName": {
                                        "id": 200,
                                        "name": "uint8",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "703:5:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "616:117:4"
                        },
                        "returnParameters": {
                            "id": 203,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "734:0:4"
                        },
                        "scope": 515,
                        "src": "605:382:4",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 238,
                            "nodeType": "Block",
                            "src": "1053:48:4",
                            "statements": [
                                {
                                    "expression": {
                                        "baseExpression": {
                                            "id": 233,
                                            "name": "votesPerUser",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 182,
                                            "src": "1070:12:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                                                "typeString": "mapping(address => uint8)"
                                            }
                                        },
                                        "id": 236,
                                        "indexExpression": {
                                            "expression": {
                                                "id": 234,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -15,
                                                "src": "1083:3:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                }
                                            },
                                            "id": 235,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "src": "1083:10:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "1070:24:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        }
                                    },
                                    "functionReturnParameters": 232,
                                    "id": 237,
                                    "nodeType": "Return",
                                    "src": "1063:31:4"
                                }
                            ]
                        },
                        "functionSelector": "2aed8692",
                        "id": 239,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getNumOfVotesForUser",
                        "nameLocation": "1002:20:4",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 229,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1022:2:4"
                        },
                        "returnParameters": {
                            "id": 232,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 231,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 239,
                                    "src": "1046:5:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                    },
                                    "typeName": {
                                        "id": 230,
                                        "name": "uint8",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1046:5:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1045:7:4"
                        },
                        "scope": 515,
                        "src": "993:108:4",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 294,
                            "nodeType": "Block",
                            "src": "1171:513:4",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 250,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 247,
                                                        "name": "block",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -4,
                                                        "src": "1189:5:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_block",
                                                            "typeString": "block"
                                                        }
                                                    },
                                                    "id": 248,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "timestamp",
                                                    "nodeType": "MemberAccess",
                                                    "src": "1189:15:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "<",
                                                "rightExpression": {
                                                    "id": 249,
                                                    "name": "end",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 176,
                                                    "src": "1207:3:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "1189:21:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "5468697320766f74696e672073657373696f6e20616c726561647920656e6465642e",
                                                "id": 251,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1212:36:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_15c34aa3c775c1f0b7df6a963282225f2fafb042029a3113269e5c291867248c",
                                                    "typeString": "literal_string \"This voting session already ended.\""
                                                },
                                                "value": "This voting session already ended."
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_15c34aa3c775c1f0b7df6a963282225f2fafb042029a3113269e5c291867248c",
                                                    "typeString": "literal_string \"This voting session already ended.\""
                                                }
                                            ],
                                            "id": 246,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18, -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "1181:7:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 252,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1181:68:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 253,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1181:68:4"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 258,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 255,
                                                        "name": "block",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -4,
                                                        "src": "1280:5:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_block",
                                                            "typeString": "block"
                                                        }
                                                    },
                                                    "id": 256,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "timestamp",
                                                    "nodeType": "MemberAccess",
                                                    "src": "1280:15:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": ">=",
                                                "rightExpression": {
                                                    "id": 257,
                                                    "name": "start",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 174,
                                                    "src": "1299:5:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "1280:24:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "5468697320766f74696e672073657373696f6e20646964206e6f74207374617274207965742e",
                                                "id": 259,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1318:40:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_364ce9b07bd0659ca3a01787bd33d1d8930f0b7727aea7f8dc3ad74903b4101b",
                                                    "typeString": "literal_string \"This voting session did not start yet.\""
                                                },
                                                "value": "This voting session did not start yet."
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_364ce9b07bd0659ca3a01787bd33d1d8930f0b7727aea7f8dc3ad74903b4101b",
                                                    "typeString": "literal_string \"This voting session did not start yet.\""
                                                }
                                            ],
                                            "id": 254,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18, -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "1259:7:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 260,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1259:109:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 261,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1259:109:4"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "baseExpression": {
                                                    "id": 263,
                                                    "name": "choicesMap",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 189,
                                                    "src": "1386:10:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                                                        "typeString": "mapping(string memory => bool)"
                                                    }
                                                },
                                                "id": 265,
                                                "indexExpression": {
                                                    "id": 264,
                                                    "name": "choice",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 241,
                                                    "src": "1397:6:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_string_memory_ptr",
                                                        "typeString": "string memory"
                                                    }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "1386:18:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "496e76616c69642063686f6963652e",
                                                "id": 266,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1406:17:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_5a2124785fde203f622faa75916b7a82099b686738338ee3cdc72f1e052a7bb4",
                                                    "typeString": "literal_string \"Invalid choice.\""
                                                },
                                                "value": "Invalid choice."
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_5a2124785fde203f622faa75916b7a82099b686738338ee3cdc72f1e052a7bb4",
                                                    "typeString": "literal_string \"Invalid choice.\""
                                                }
                                            ],
                                            "id": 262,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18, -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "1378:7:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 267,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1378:46:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 268,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1378:46:4"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                },
                                                "id": 277,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_uint8",
                                                        "typeString": "uint8"
                                                    },
                                                    "id": 275,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "baseExpression": {
                                                            "id": 270,
                                                            "name": "votesPerUser",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 182,
                                                            "src": "1455:12:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                                                                "typeString": "mapping(address => uint8)"
                                                            }
                                                        },
                                                        "id": 273,
                                                        "indexExpression": {
                                                            "expression": {
                                                                "id": 271,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": -15,
                                                                "src": "1468:3:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 272,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "src": "1468:10:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "1455:24:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint8",
                                                            "typeString": "uint8"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "+",
                                                    "rightExpression": {
                                                        "id": 274,
                                                        "name": "numberOfVotes",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 243,
                                                        "src": "1482:13:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint8",
                                                            "typeString": "uint8"
                                                        }
                                                    },
                                                    "src": "1455:40:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint8",
                                                        "typeString": "uint8"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "<=",
                                                "rightExpression": {
                                                    "id": 276,
                                                    "name": "numOfVotesPerUser",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 178,
                                                    "src": "1499:17:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint8",
                                                        "typeString": "uint8"
                                                    }
                                                },
                                                "src": "1455:61:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "4578636565646564206e756d626572206f6620766f7465732070657220757365722e",
                                                "id": 278,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1530:36:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_4feb182ef8e8b089940b2b995d1e16823f862dd8dae66dbc5f7e4d146cf20c4c",
                                                    "typeString": "literal_string \"Exceeded number of votes per user.\""
                                                },
                                                "value": "Exceeded number of votes per user."
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_4feb182ef8e8b089940b2b995d1e16823f862dd8dae66dbc5f7e4d146cf20c4c",
                                                    "typeString": "literal_string \"Exceeded number of votes per user.\""
                                                }
                                            ],
                                            "id": 269,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18, -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "1434:7:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 279,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1434:142:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 280,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1434:142:4"
                                },
                                {
                                    "expression": {
                                        "id": 286,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "baseExpression": {
                                                "id": 281,
                                                "name": "votesPerUser",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 182,
                                                "src": "1587:12:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                                                    "typeString": "mapping(address => uint8)"
                                                }
                                            },
                                            "id": 284,
                                            "indexExpression": {
                                                "expression": {
                                                    "id": 282,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -15,
                                                    "src": "1600:3:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 283,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "1600:10:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "nodeType": "IndexAccess",
                                            "src": "1587:24:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "+=",
                                        "rightHandSide": {
                                            "id": 285,
                                            "name": "numberOfVotes",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 243,
                                            "src": "1615:13:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "src": "1587:41:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        }
                                    },
                                    "id": 287,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1587:41:4"
                                },
                                {
                                    "expression": {
                                        "id": 292,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "baseExpression": {
                                                "id": 288,
                                                "name": "votesPerChoice",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 193,
                                                "src": "1638:14:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint24_$",
                                                    "typeString": "mapping(string memory => uint24)"
                                                }
                                            },
                                            "id": 290,
                                            "indexExpression": {
                                                "id": 289,
                                                "name": "choice",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 241,
                                                "src": "1653:6:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "nodeType": "IndexAccess",
                                            "src": "1638:22:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint24",
                                                "typeString": "uint24"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "+=",
                                        "rightHandSide": {
                                            "id": 291,
                                            "name": "numberOfVotes",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 243,
                                            "src": "1664:13:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "src": "1638:39:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint24",
                                            "typeString": "uint24"
                                        }
                                    },
                                    "id": 293,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1638:39:4"
                                }
                            ]
                        },
                        "functionSelector": "90ca27f3",
                        "id": 295,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "vote",
                        "nameLocation": "1116:4:4",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 244,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 241,
                                    "mutability": "mutable",
                                    "name": "choice",
                                    "nameLocation": "1135:6:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 295,
                                    "src": "1121:20:4",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 240,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1121:6:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 243,
                                    "mutability": "mutable",
                                    "name": "numberOfVotes",
                                    "nameLocation": "1149:13:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 295,
                                    "src": "1143:19:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                    },
                                    "typeName": {
                                        "id": 242,
                                        "name": "uint8",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1143:5:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1120:43:4"
                        },
                        "returnParameters": {
                            "id": 245,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1171:0:4"
                        },
                        "scope": 515,
                        "src": "1107:577:4",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 338,
                            "nodeType": "Block",
                            "src": "1748:336:4",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 306,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 303,
                                                        "name": "block",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -4,
                                                        "src": "1766:5:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_block",
                                                            "typeString": "block"
                                                        }
                                                    },
                                                    "id": 304,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "timestamp",
                                                    "nodeType": "MemberAccess",
                                                    "src": "1766:15:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "<",
                                                "rightExpression": {
                                                    "id": 305,
                                                    "name": "end",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 176,
                                                    "src": "1784:3:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "1766:21:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "5468697320766f74696e672073657373696f6e20616c726561647920656e6465642e",
                                                "id": 307,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1789:36:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_15c34aa3c775c1f0b7df6a963282225f2fafb042029a3113269e5c291867248c",
                                                    "typeString": "literal_string \"This voting session already ended.\""
                                                },
                                                "value": "This voting session already ended."
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_15c34aa3c775c1f0b7df6a963282225f2fafb042029a3113269e5c291867248c",
                                                    "typeString": "literal_string \"This voting session already ended.\""
                                                }
                                            ],
                                            "id": 302,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18, -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "1758:7:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 308,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1758:68:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 309,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1758:68:4"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 314,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 311,
                                                        "name": "block",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -4,
                                                        "src": "1857:5:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_block",
                                                            "typeString": "block"
                                                        }
                                                    },
                                                    "id": 312,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "timestamp",
                                                    "nodeType": "MemberAccess",
                                                    "src": "1857:15:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "<",
                                                "rightExpression": {
                                                    "id": 313,
                                                    "name": "start",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 174,
                                                    "src": "1875:5:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "1857:23:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "5468697320766f74696e672073657373696f6e20616c726561647920737461727465642e",
                                                "id": 315,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1894:38:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_958633d47a157f6b0a5544eb8ef17f6ab0887bf55c60a4edac4a51e5c78562fa",
                                                    "typeString": "literal_string \"This voting session already started.\""
                                                },
                                                "value": "This voting session already started."
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_958633d47a157f6b0a5544eb8ef17f6ab0887bf55c60a4edac4a51e5c78562fa",
                                                    "typeString": "literal_string \"This voting session already started.\""
                                                }
                                            ],
                                            "id": 310,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18, -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "1836:7:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 316,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1836:106:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 317,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1836:106:4"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 322,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "UnaryOperation",
                                                "operator": "!",
                                                "prefix": true,
                                                "src": "1960:19:4",
                                                "subExpression": {
                                                    "baseExpression": {
                                                        "id": 319,
                                                        "name": "choicesMap",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 189,
                                                        "src": "1961:10:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                                                            "typeString": "mapping(string memory => bool)"
                                                        }
                                                    },
                                                    "id": 321,
                                                    "indexExpression": {
                                                        "id": 320,
                                                        "name": "choice",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 297,
                                                        "src": "1972:6:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "1961:18:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "546869732063686f69636520616c7265616479206578697374732e",
                                                "id": 323,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1981:29:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_ad06cd6a7c7d5f4c0aaaf728b645300daac4b04f96be86482bd995dbfac90801",
                                                    "typeString": "literal_string \"This choice already exists.\""
                                                },
                                                "value": "This choice already exists."
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_ad06cd6a7c7d5f4c0aaaf728b645300daac4b04f96be86482bd995dbfac90801",
                                                    "typeString": "literal_string \"This choice already exists.\""
                                                }
                                            ],
                                            "id": 318,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18, -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "1952:7:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 324,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1952:59:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 325,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1952:59:4"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 329,
                                                "name": "choice",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 297,
                                                "src": "2035:6:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                }
                                            ],
                                            "expression": {
                                                "id": 326,
                                                "name": "choices",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 185,
                                                "src": "2022:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                                    "typeString": "string storage ref[] storage ref"
                                                }
                                            },
                                            "id": 328,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "push",
                                            "nodeType": "MemberAccess",
                                            "src": "2022:12:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$bound_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                                                "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                                            }
                                        },
                                        "id": 330,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2022:20:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 331,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2022:20:4"
                                },
                                {
                                    "expression": {
                                        "id": 336,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "baseExpression": {
                                                "id": 332,
                                                "name": "choicesMap",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 189,
                                                "src": "2052:10:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                                                    "typeString": "mapping(string memory => bool)"
                                                }
                                            },
                                            "id": 334,
                                            "indexExpression": {
                                                "id": 333,
                                                "name": "choice",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 297,
                                                "src": "2063:6:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "nodeType": "IndexAccess",
                                            "src": "2052:18:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "74727565",
                                            "id": 335,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "bool",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2073:4:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "value": "true"
                                        },
                                        "src": "2052:25:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 337,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2052:25:4"
                                }
                            ]
                        },
                        "functionSelector": "5fa520bb",
                        "id": 339,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 300,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 299,
                                    "name": "onlyOwner",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 562,
                                    "src": "1738:9:4"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1738:9:4"
                            }
                        ],
                        "name": "addChoice",
                        "nameLocation": "1699:9:4",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 298,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 297,
                                    "mutability": "mutable",
                                    "name": "choice",
                                    "nameLocation": "1723:6:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 339,
                                    "src": "1709:20:4",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 296,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1709:6:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1708:22:4"
                        },
                        "returnParameters": {
                            "id": 301,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1748:0:4"
                        },
                        "scope": 515,
                        "src": "1690:394:4",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 347,
                            "nodeType": "Block",
                            "src": "2153:31:4",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 345,
                                        "name": "choices",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 185,
                                        "src": "2170:7:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                            "typeString": "string storage ref[] storage ref"
                                        }
                                    },
                                    "functionReturnParameters": 344,
                                    "id": 346,
                                    "nodeType": "Return",
                                    "src": "2163:14:4"
                                }
                            ]
                        },
                        "functionSelector": "e97995dc",
                        "id": 348,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getAllChoices",
                        "nameLocation": "2099:13:4",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 340,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2112:2:4"
                        },
                        "returnParameters": {
                            "id": 344,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 343,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 348,
                                    "src": "2136:15:4",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "string[]"
                                    },
                                    "typeName": {
                                        "baseType": {
                                            "id": 341,
                                            "name": "string",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "2136:6:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_storage_ptr",
                                                "typeString": "string"
                                            }
                                        },
                                        "id": 342,
                                        "nodeType": "ArrayTypeName",
                                        "src": "2136:8:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                                            "typeString": "string[]"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2135:17:4"
                        },
                        "scope": 515,
                        "src": "2090:94:4",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 390,
                            "nodeType": "Block",
                            "src": "2248:330:4",
                            "statements": [
                                {
                                    "assignments": [354],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 354,
                                            "mutability": "mutable",
                                            "name": "results",
                                            "nameLocation": "2272:7:4",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 390,
                                            "src": "2258:21:4",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string"
                                            },
                                            "typeName": {
                                                "id": 353,
                                                "name": "string",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2258:6:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_storage_ptr",
                                                    "typeString": "string"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 356,
                                    "initialValue": {
                                        "hexValue": "",
                                        "id": 355,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2282:2:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                            "typeString": "literal_string \"\""
                                        },
                                        "value": ""
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "2258:26:4"
                                },
                                {
                                    "body": {
                                        "id": 386,
                                        "nodeType": "Block",
                                        "src": "2339:208:4",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "id": 384,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                        "id": 368,
                                                        "name": "results",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 354,
                                                        "src": "2353:7:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "=",
                                                    "rightHandSide": {
                                                        "arguments": [
                                                            {
                                                                "id": 370,
                                                                "name": "results",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 354,
                                                                "src": "2387:7:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_string_memory_ptr",
                                                                    "typeString": "string memory"
                                                                }
                                                            },
                                                            {
                                                                "baseExpression": {
                                                                    "id": 371,
                                                                    "name": "choices",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 185,
                                                                    "src": "2412:7:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                                                        "typeString": "string storage ref[] storage ref"
                                                                    }
                                                                },
                                                                "id": 373,
                                                                "indexExpression": {
                                                                    "id": 372,
                                                                    "name": "i",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 358,
                                                                    "src": "2420:1:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "nodeType": "IndexAccess",
                                                                "src": "2412:10:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_string_storage",
                                                                    "typeString": "string storage ref"
                                                                }
                                                            },
                                                            {
                                                                "hexValue": "203d3e20",
                                                                "id": 374,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "string",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "2440:6:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_stringliteral_5cf58d5f9d66442d92b0440790b6d3e64b0f1cca57acf26f75556e4031fc7668",
                                                                    "typeString": "literal_string \" => \""
                                                                },
                                                                "value": " => "
                                                            },
                                                            {
                                                                "arguments": [
                                                                    {
                                                                        "baseExpression": {
                                                                            "id": 376,
                                                                            "name": "votesPerChoice",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 193,
                                                                            "src": "2473:14:4",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint24_$",
                                                                                "typeString": "mapping(string memory => uint24)"
                                                                            }
                                                                        },
                                                                        "id": 380,
                                                                        "indexExpression": {
                                                                            "baseExpression": {
                                                                                "id": 377,
                                                                                "name": "choices",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 185,
                                                                                "src": "2488:7:4",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                                                                    "typeString": "string storage ref[] storage ref"
                                                                                }
                                                                            },
                                                                            "id": 379,
                                                                            "indexExpression": {
                                                                                "id": 378,
                                                                                "name": "i",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 358,
                                                                                "src": "2496:1:4",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_uint256",
                                                                                    "typeString": "uint256"
                                                                                }
                                                                            },
                                                                            "isConstant": false,
                                                                            "isLValue": true,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "nodeType": "IndexAccess",
                                                                            "src": "2488:10:4",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_string_storage",
                                                                                "typeString": "string storage ref"
                                                                            }
                                                                        },
                                                                        "isConstant": false,
                                                                        "isLValue": true,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "nodeType": "IndexAccess",
                                                                        "src": "2473:26:4",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint24",
                                                                            "typeString": "uint24"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_uint24",
                                                                            "typeString": "uint24"
                                                                        }
                                                                    ],
                                                                    "id": 375,
                                                                    "name": "uint2str",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 514,
                                                                    "src": "2464:8:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                                                        "typeString": "function (uint256) pure returns (string memory)"
                                                                    }
                                                                },
                                                                "id": 381,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "2464:36:4",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_string_memory_ptr",
                                                                    "typeString": "string memory"
                                                                }
                                                            },
                                                            {
                                                                "hexValue": "0a",
                                                                "id": 382,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "string",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "2518:4:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_stringliteral_0ef9d8f8804d174666011a394cab7901679a8944d24249fd148a6a36071151f8",
                                                                    "typeString": "literal_string hex\"0a\""
                                                                },
                                                                "value": "\n"
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_string_memory_ptr",
                                                                    "typeString": "string memory"
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_string_storage",
                                                                    "typeString": "string storage ref"
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_stringliteral_5cf58d5f9d66442d92b0440790b6d3e64b0f1cca57acf26f75556e4031fc7668",
                                                                    "typeString": "literal_string \" => \""
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_string_memory_ptr",
                                                                    "typeString": "string memory"
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_stringliteral_0ef9d8f8804d174666011a394cab7901679a8944d24249fd148a6a36071151f8",
                                                                    "typeString": "literal_string hex\"0a\""
                                                                }
                                                            ],
                                                            "id": 369,
                                                            "name": "append",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 419,
                                                            "src": "2363:6:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                                                                "typeString": "function (string memory,string memory,string memory,string memory,string memory) pure returns (string memory)"
                                                            }
                                                        },
                                                        "id": 383,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "2363:173:4",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        }
                                                    },
                                                    "src": "2353:183:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_string_memory_ptr",
                                                        "typeString": "string memory"
                                                    }
                                                },
                                                "id": 385,
                                                "nodeType": "ExpressionStatement",
                                                "src": "2353:183:4"
                                            }
                                        ]
                                    },
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 364,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 361,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 358,
                                            "src": "2314:1:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<",
                                        "rightExpression": {
                                            "expression": {
                                                "id": 362,
                                                "name": "choices",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 185,
                                                "src": "2318:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                                    "typeString": "string storage ref[] storage ref"
                                                }
                                            },
                                            "id": 363,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "length",
                                            "nodeType": "MemberAccess",
                                            "src": "2318:14:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "2314:18:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 387,
                                    "initializationExpression": {
                                        "assignments": [358],
                                        "declarations": [
                                            {
                                                "constant": false,
                                                "id": 358,
                                                "mutability": "mutable",
                                                "name": "i",
                                                "nameLocation": "2307:1:4",
                                                "nodeType": "VariableDeclaration",
                                                "scope": 387,
                                                "src": "2299:9:4",
                                                "stateVariable": false,
                                                "storageLocation": "default",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "typeName": {
                                                    "id": 357,
                                                    "name": "uint256",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "2299:7:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "visibility": "internal"
                                            }
                                        ],
                                        "id": 360,
                                        "initialValue": {
                                            "hexValue": "30",
                                            "id": 359,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2311:1:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                        },
                                        "nodeType": "VariableDeclarationStatement",
                                        "src": "2299:13:4"
                                    },
                                    "loopExpression": {
                                        "expression": {
                                            "id": 366,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "UnaryOperation",
                                            "operator": "++",
                                            "prefix": false,
                                            "src": "2334:3:4",
                                            "subExpression": {
                                                "id": 365,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 358,
                                                "src": "2334:1:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "id": 367,
                                        "nodeType": "ExpressionStatement",
                                        "src": "2334:3:4"
                                    },
                                    "nodeType": "ForStatement",
                                    "src": "2294:253:4"
                                },
                                {
                                    "expression": {
                                        "id": 388,
                                        "name": "results",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 354,
                                        "src": "2564:7:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    },
                                    "functionReturnParameters": 352,
                                    "id": 389,
                                    "nodeType": "Return",
                                    "src": "2557:14:4"
                                }
                            ]
                        },
                        "functionSelector": "4717f97c",
                        "id": 391,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getResults",
                        "nameLocation": "2199:10:4",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 349,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2209:2:4"
                        },
                        "returnParameters": {
                            "id": 352,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 351,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 391,
                                    "src": "2233:13:4",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 350,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2233:6:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2232:15:4"
                        },
                        "scope": 515,
                        "src": "2190:388:4",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 418,
                            "nodeType": "Block",
                            "src": "2769:63:4",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 410,
                                                        "name": "a",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 393,
                                                        "src": "2810:1:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        }
                                                    },
                                                    {
                                                        "id": 411,
                                                        "name": "b",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 395,
                                                        "src": "2813:1:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        }
                                                    },
                                                    {
                                                        "id": 412,
                                                        "name": "c",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 397,
                                                        "src": "2816:1:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        }
                                                    },
                                                    {
                                                        "id": 413,
                                                        "name": "d",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 399,
                                                        "src": "2819:1:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        }
                                                    },
                                                    {
                                                        "id": 414,
                                                        "name": "e",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 401,
                                                        "src": "2822:1:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 408,
                                                        "name": "abi",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -1,
                                                        "src": "2793:3:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_abi",
                                                            "typeString": "abi"
                                                        }
                                                    },
                                                    "id": 409,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "encodePacked",
                                                    "nodeType": "MemberAccess",
                                                    "src": "2793:16:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                        "typeString": "function () pure returns (bytes memory)"
                                                    }
                                                },
                                                "id": 415,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2793:31:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            ],
                                            "id": 407,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "2786:6:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                                "typeString": "type(string storage pointer)"
                                            },
                                            "typeName": {
                                                "id": 406,
                                                "name": "string",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2786:6:4",
                                                "typeDescriptions": {}
                                            }
                                        },
                                        "id": 416,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2786:39:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    },
                                    "functionReturnParameters": 405,
                                    "id": 417,
                                    "nodeType": "Return",
                                    "src": "2779:46:4"
                                }
                            ]
                        },
                        "id": 419,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "append",
                        "nameLocation": "2593:6:4",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 402,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 393,
                                    "mutability": "mutable",
                                    "name": "a",
                                    "nameLocation": "2623:1:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 419,
                                    "src": "2609:15:4",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 392,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2609:6:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 395,
                                    "mutability": "mutable",
                                    "name": "b",
                                    "nameLocation": "2648:1:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 419,
                                    "src": "2634:15:4",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 394,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2634:6:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 397,
                                    "mutability": "mutable",
                                    "name": "c",
                                    "nameLocation": "2673:1:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 419,
                                    "src": "2659:15:4",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 396,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2659:6:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 399,
                                    "mutability": "mutable",
                                    "name": "d",
                                    "nameLocation": "2698:1:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 419,
                                    "src": "2684:15:4",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 398,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2684:6:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 401,
                                    "mutability": "mutable",
                                    "name": "e",
                                    "nameLocation": "2723:1:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 419,
                                    "src": "2709:15:4",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 400,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2709:6:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2599:131:4"
                        },
                        "returnParameters": {
                            "id": 405,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 404,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 419,
                                    "src": "2754:13:4",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 403,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2754:6:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2753:15:4"
                        },
                        "scope": 515,
                        "src": "2584:248:4",
                        "stateMutability": "pure",
                        "virtual": false,
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 513,
                            "nodeType": "Block",
                            "src": "2948:487:4",
                            "statements": [
                                {
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 428,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 426,
                                            "name": "_i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 421,
                                            "src": "2962:2:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                            "hexValue": "30",
                                            "id": 427,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2968:1:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                        },
                                        "src": "2962:7:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 432,
                                    "nodeType": "IfStatement",
                                    "src": "2958:48:4",
                                    "trueBody": {
                                        "id": 431,
                                        "nodeType": "Block",
                                        "src": "2971:35:4",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "hexValue": "30",
                                                    "id": 429,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "string",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "2992:3:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                                                        "typeString": "literal_string \"0\""
                                                    },
                                                    "value": "0"
                                                },
                                                "functionReturnParameters": 425,
                                                "id": 430,
                                                "nodeType": "Return",
                                                "src": "2985:10:4"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "assignments": [434],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 434,
                                            "mutability": "mutable",
                                            "name": "j",
                                            "nameLocation": "3023:1:4",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 513,
                                            "src": "3015:9:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 433,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3015:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 436,
                                    "initialValue": {
                                        "id": 435,
                                        "name": "_i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 421,
                                        "src": "3027:2:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "3015:14:4"
                                },
                                {
                                    "assignments": [438],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 438,
                                            "mutability": "mutable",
                                            "name": "len",
                                            "nameLocation": "3047:3:4",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 513,
                                            "src": "3039:11:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 437,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3039:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 439,
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "3039:11:4"
                                },
                                {
                                    "body": {
                                        "id": 450,
                                        "nodeType": "Block",
                                        "src": "3075:51:4",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "id": 444,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "UnaryOperation",
                                                    "operator": "++",
                                                    "prefix": false,
                                                    "src": "3089:5:4",
                                                    "subExpression": {
                                                        "id": 443,
                                                        "name": "len",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 438,
                                                        "src": "3089:3:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "id": 445,
                                                "nodeType": "ExpressionStatement",
                                                "src": "3089:5:4"
                                            },
                                            {
                                                "expression": {
                                                    "id": 448,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                        "id": 446,
                                                        "name": "j",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 434,
                                                        "src": "3108:1:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "/=",
                                                    "rightHandSide": {
                                                        "hexValue": "3130",
                                                        "id": 447,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "3113:2:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_10_by_1",
                                                            "typeString": "int_const 10"
                                                        },
                                                        "value": "10"
                                                    },
                                                    "src": "3108:7:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "id": 449,
                                                "nodeType": "ExpressionStatement",
                                                "src": "3108:7:4"
                                            }
                                        ]
                                    },
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 442,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 440,
                                            "name": "j",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 434,
                                            "src": "3067:1:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "!=",
                                        "rightExpression": {
                                            "hexValue": "30",
                                            "id": 441,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3072:1:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                        },
                                        "src": "3067:6:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 451,
                                    "nodeType": "WhileStatement",
                                    "src": "3060:66:4"
                                },
                                {
                                    "assignments": [453],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 453,
                                            "mutability": "mutable",
                                            "name": "bstr",
                                            "nameLocation": "3148:4:4",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 513,
                                            "src": "3135:17:4",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                "typeString": "bytes"
                                            },
                                            "typeName": {
                                                "id": 452,
                                                "name": "bytes",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3135:5:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_storage_ptr",
                                                    "typeString": "bytes"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 458,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "id": 456,
                                                "name": "len",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 438,
                                                "src": "3165:3:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 455,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "NewExpression",
                                            "src": "3155:9:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                                "typeString": "function (uint256) pure returns (bytes memory)"
                                            },
                                            "typeName": {
                                                "id": 454,
                                                "name": "bytes",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3159:5:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_storage_ptr",
                                                    "typeString": "bytes"
                                                }
                                            }
                                        },
                                        "id": 457,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3155:14:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "3135:34:4"
                                },
                                {
                                    "assignments": [460],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 460,
                                            "mutability": "mutable",
                                            "name": "k",
                                            "nameLocation": "3187:1:4",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 513,
                                            "src": "3179:9:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 459,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3179:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 462,
                                    "initialValue": {
                                        "id": 461,
                                        "name": "len",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 438,
                                        "src": "3191:3:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "3179:15:4"
                                },
                                {
                                    "body": {
                                        "id": 506,
                                        "nodeType": "Block",
                                        "src": "3220:180:4",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "id": 470,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                        "id": 466,
                                                        "name": "k",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 460,
                                                        "src": "3234:1:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "=",
                                                    "rightHandSide": {
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "id": 469,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "id": 467,
                                                            "name": "k",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 460,
                                                            "src": "3238:1:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "-",
                                                        "rightExpression": {
                                                            "hexValue": "31",
                                                            "id": 468,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "3242:1:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_1_by_1",
                                                                "typeString": "int_const 1"
                                                            },
                                                            "value": "1"
                                                        },
                                                        "src": "3238:5:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "src": "3234:9:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "id": 471,
                                                "nodeType": "ExpressionStatement",
                                                "src": "3234:9:4"
                                            },
                                            {
                                                "assignments": [473],
                                                "declarations": [
                                                    {
                                                        "constant": false,
                                                        "id": 473,
                                                        "mutability": "mutable",
                                                        "name": "temp",
                                                        "nameLocation": "3263:4:4",
                                                        "nodeType": "VariableDeclaration",
                                                        "scope": 506,
                                                        "src": "3257:10:4",
                                                        "stateVariable": false,
                                                        "storageLocation": "default",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint8",
                                                            "typeString": "uint8"
                                                        },
                                                        "typeName": {
                                                            "id": 472,
                                                            "name": "uint8",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "3257:5:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint8",
                                                                "typeString": "uint8"
                                                            }
                                                        },
                                                        "visibility": "internal"
                                                    }
                                                ],
                                                "id": 488,
                                                "initialValue": {
                                                    "components": [
                                                        {
                                                            "commonType": {
                                                                "typeIdentifier": "t_uint8",
                                                                "typeString": "uint8"
                                                            },
                                                            "id": 486,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                                "hexValue": "3438",
                                                                "id": 474,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "3271:2:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_rational_48_by_1",
                                                                    "typeString": "int_const 48"
                                                                },
                                                                "value": "48"
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "+",
                                                            "rightExpression": {
                                                                "arguments": [
                                                                    {
                                                                        "commonType": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        },
                                                                        "id": 484,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "leftExpression": {
                                                                            "id": 477,
                                                                            "name": "_i",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 421,
                                                                            "src": "3282:2:4",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            }
                                                                        },
                                                                        "nodeType": "BinaryOperation",
                                                                        "operator": "-",
                                                                        "rightExpression": {
                                                                            "commonType": {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            },
                                                                            "id": 483,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "leftExpression": {
                                                                                "components": [
                                                                                    {
                                                                                        "commonType": {
                                                                                            "typeIdentifier": "t_uint256",
                                                                                            "typeString": "uint256"
                                                                                        },
                                                                                        "id": 480,
                                                                                        "isConstant": false,
                                                                                        "isLValue": false,
                                                                                        "isPure": false,
                                                                                        "lValueRequested": false,
                                                                                        "leftExpression": {
                                                                                            "id": 478,
                                                                                            "name": "_i",
                                                                                            "nodeType": "Identifier",
                                                                                            "overloadedDeclarations": [],
                                                                                            "referencedDeclaration": 421,
                                                                                            "src": "3288:2:4",
                                                                                            "typeDescriptions": {
                                                                                                "typeIdentifier": "t_uint256",
                                                                                                "typeString": "uint256"
                                                                                            }
                                                                                        },
                                                                                        "nodeType": "BinaryOperation",
                                                                                        "operator": "/",
                                                                                        "rightExpression": {
                                                                                            "hexValue": "3130",
                                                                                            "id": 479,
                                                                                            "isConstant": false,
                                                                                            "isLValue": false,
                                                                                            "isPure": true,
                                                                                            "kind": "number",
                                                                                            "lValueRequested": false,
                                                                                            "nodeType": "Literal",
                                                                                            "src": "3293:2:4",
                                                                                            "typeDescriptions": {
                                                                                                "typeIdentifier": "t_rational_10_by_1",
                                                                                                "typeString": "int_const 10"
                                                                                            },
                                                                                            "value": "10"
                                                                                        },
                                                                                        "src": "3288:7:4",
                                                                                        "typeDescriptions": {
                                                                                            "typeIdentifier": "t_uint256",
                                                                                            "typeString": "uint256"
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "id": 481,
                                                                                "isConstant": false,
                                                                                "isInlineArray": false,
                                                                                "isLValue": false,
                                                                                "isPure": false,
                                                                                "lValueRequested": false,
                                                                                "nodeType": "TupleExpression",
                                                                                "src": "3287:9:4",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_uint256",
                                                                                    "typeString": "uint256"
                                                                                }
                                                                            },
                                                                            "nodeType": "BinaryOperation",
                                                                            "operator": "*",
                                                                            "rightExpression": {
                                                                                "hexValue": "3130",
                                                                                "id": 482,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": true,
                                                                                "kind": "number",
                                                                                "lValueRequested": false,
                                                                                "nodeType": "Literal",
                                                                                "src": "3299:2:4",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_rational_10_by_1",
                                                                                    "typeString": "int_const 10"
                                                                                },
                                                                                "value": "10"
                                                                            },
                                                                            "src": "3287:14:4",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            }
                                                                        },
                                                                        "src": "3282:19:4",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    ],
                                                                    "id": 476,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "ElementaryTypeNameExpression",
                                                                    "src": "3276:5:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_type$_t_uint8_$",
                                                                        "typeString": "type(uint8)"
                                                                    },
                                                                    "typeName": {
                                                                        "id": 475,
                                                                        "name": "uint8",
                                                                        "nodeType": "ElementaryTypeName",
                                                                        "src": "3276:5:4",
                                                                        "typeDescriptions": {}
                                                                    }
                                                                },
                                                                "id": 485,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "typeConversion",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "3276:26:4",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint8",
                                                                    "typeString": "uint8"
                                                                }
                                                            },
                                                            "src": "3271:31:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint8",
                                                                "typeString": "uint8"
                                                            }
                                                        }
                                                    ],
                                                    "id": 487,
                                                    "isConstant": false,
                                                    "isInlineArray": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "TupleExpression",
                                                    "src": "3270:33:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint8",
                                                        "typeString": "uint8"
                                                    }
                                                },
                                                "nodeType": "VariableDeclarationStatement",
                                                "src": "3257:46:4"
                                            },
                                            {
                                                "assignments": [490],
                                                "declarations": [
                                                    {
                                                        "constant": false,
                                                        "id": 490,
                                                        "mutability": "mutable",
                                                        "name": "b1",
                                                        "nameLocation": "3324:2:4",
                                                        "nodeType": "VariableDeclaration",
                                                        "scope": 506,
                                                        "src": "3317:9:4",
                                                        "stateVariable": false,
                                                        "storageLocation": "default",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes1",
                                                            "typeString": "bytes1"
                                                        },
                                                        "typeName": {
                                                            "id": 489,
                                                            "name": "bytes1",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "3317:6:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes1",
                                                                "typeString": "bytes1"
                                                            }
                                                        },
                                                        "visibility": "internal"
                                                    }
                                                ],
                                                "id": 495,
                                                "initialValue": {
                                                    "arguments": [
                                                        {
                                                            "id": 493,
                                                            "name": "temp",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 473,
                                                            "src": "3336:4:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint8",
                                                                "typeString": "uint8"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_uint8",
                                                                "typeString": "uint8"
                                                            }
                                                        ],
                                                        "id": 492,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "3329:6:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_bytes1_$",
                                                            "typeString": "type(bytes1)"
                                                        },
                                                        "typeName": {
                                                            "id": 491,
                                                            "name": "bytes1",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "3329:6:4",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 494,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "3329:12:4",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes1",
                                                        "typeString": "bytes1"
                                                    }
                                                },
                                                "nodeType": "VariableDeclarationStatement",
                                                "src": "3317:24:4"
                                            },
                                            {
                                                "expression": {
                                                    "id": 500,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                        "baseExpression": {
                                                            "id": 496,
                                                            "name": "bstr",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 453,
                                                            "src": "3355:4:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                                "typeString": "bytes memory"
                                                            }
                                                        },
                                                        "id": 498,
                                                        "indexExpression": {
                                                            "id": 497,
                                                            "name": "k",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 460,
                                                            "src": "3360:1:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": true,
                                                        "nodeType": "IndexAccess",
                                                        "src": "3355:7:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes1",
                                                            "typeString": "bytes1"
                                                        }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "=",
                                                    "rightHandSide": {
                                                        "id": 499,
                                                        "name": "b1",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 490,
                                                        "src": "3365:2:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes1",
                                                            "typeString": "bytes1"
                                                        }
                                                    },
                                                    "src": "3355:12:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes1",
                                                        "typeString": "bytes1"
                                                    }
                                                },
                                                "id": 501,
                                                "nodeType": "ExpressionStatement",
                                                "src": "3355:12:4"
                                            },
                                            {
                                                "expression": {
                                                    "id": 504,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                        "id": 502,
                                                        "name": "_i",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 421,
                                                        "src": "3381:2:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "/=",
                                                    "rightHandSide": {
                                                        "hexValue": "3130",
                                                        "id": 503,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "3387:2:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_10_by_1",
                                                            "typeString": "int_const 10"
                                                        },
                                                        "value": "10"
                                                    },
                                                    "src": "3381:8:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "id": 505,
                                                "nodeType": "ExpressionStatement",
                                                "src": "3381:8:4"
                                            }
                                        ]
                                    },
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 465,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 463,
                                            "name": "_i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 421,
                                            "src": "3211:2:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "!=",
                                        "rightExpression": {
                                            "hexValue": "30",
                                            "id": 464,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3217:1:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                        },
                                        "src": "3211:7:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 507,
                                    "nodeType": "WhileStatement",
                                    "src": "3204:196:4"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 510,
                                                "name": "bstr",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 453,
                                                "src": "3423:4:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            ],
                                            "id": 509,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "3416:6:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                                "typeString": "type(string storage pointer)"
                                            },
                                            "typeName": {
                                                "id": 508,
                                                "name": "string",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3416:6:4",
                                                "typeDescriptions": {}
                                            }
                                        },
                                        "id": 511,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3416:12:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    },
                                    "functionReturnParameters": 425,
                                    "id": 512,
                                    "nodeType": "Return",
                                    "src": "3409:19:4"
                                }
                            ]
                        },
                        "id": 514,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "uint2str",
                        "nameLocation": "2847:8:4",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 422,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 421,
                                    "mutability": "mutable",
                                    "name": "_i",
                                    "nameLocation": "2864:2:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 514,
                                    "src": "2856:10:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 420,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2856:7:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2855:12:4"
                        },
                        "returnParameters": {
                            "id": 425,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 424,
                                    "mutability": "mutable",
                                    "name": "_uintAsString",
                                    "nameLocation": "2929:13:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 514,
                                    "src": "2915:27:4",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 423,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2915:6:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2914:29:4"
                        },
                        "scope": 515,
                        "src": "2838:597:4",
                        "stateMutability": "pure",
                        "virtual": false,
                        "visibility": "internal"
                    }
                ],
                "scope": 516,
                "src": "195:3242:4",
                "usedErrors": []
            }
        ],
        "src": "32:3406:4"
    },
    "bytecode": "60806040523480156200001157600080fd5b50604051620014e7380380620014e783398101604081905262000034916200020c565b6200003f33620000e9565b60008160ff1611620000b05760405162461bcd60e51b815260206004820152603060248201527f4e756d626572206f6620766f746573207065722075736572206d75737420626560448201526f1033b932b0ba32b9103a3430b710181760811b606482015260840160405180910390fd5b8351620000c590600190602087019062000139565b506002929092556003556004805460ff191660ff909216919091179055506200034e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054620001479062000311565b90600052602060002090601f0160209004810192826200016b5760008555620001b6565b82601f106200018657805160ff1916838001178555620001b6565b82800160010185558215620001b6579182015b82811115620001b657825182559160200191906001019062000199565b50620001c4929150620001c8565b5090565b5b80821115620001c45760008155600101620001c9565b634e487b7160e01b600052604160045260246000fd5b805160ff811681146200020757600080fd5b919050565b600080600080608085870312156200022357600080fd5b84516001600160401b03808211156200023b57600080fd5b818701915087601f8301126200025057600080fd5b815181811115620002655762000265620001df565b604051601f8201601f19908116603f01168101908382118183101715620002905762000290620001df565b81604052828152602093508a84848701011115620002ad57600080fd5b600091505b82821015620002d15784820184015181830185015290830190620002b2565b82821115620002e35760008484830101525b8098505050508087015194505050604085015191506200030660608601620001f5565b905092959194509250565b600181811c908216806200032657607f821691505b602082108114156200034857634e487b7160e01b600052602260045260246000fd5b50919050565b611189806200035e6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806395d89b4111610097578063e97995dc11610066578063e97995dc14610261578063efbe1c1c14610276578063f2fde38b1461027f578063f6fd7fde1461029257600080fd5b806395d89b4114610212578063be9a65551461021a578063bf247f7914610231578063dde06f491461023e57600080fd5b8063715018a6116100d3578063715018a6146101985780638da5cb5b146101a057806390ca27f3146101bb57806391623640146101ce57600080fd5b806322517a16146101055780632aed8692146101485780634717f97c1461016e5780635fa520bb14610183575b600080fd5b610133610113366004610cea565b805160208183018101805160078252928201919093012091525460ff1681565b60405190151581526020015b60405180910390f35b3360009081526005602052604090205460ff165b60405160ff909116815260200161013f565b6101766102a5565b60405161013f9190610d83565b610196610191366004610cea565b61040d565b005b6101966105a7565b6000546040516001600160a01b03909116815260200161013f565b6101966101c9366004610d9d565b6105dd565b6101fe6101dc366004610cea565b805160208183018101805160088252928201919093012091525462ffffff1681565b60405162ffffff909116815260200161013f565b6101766107d3565b61022360025481565b60405190815260200161013f565b60045461015c9060ff1681565b61015c61024c366004610df5565b60056020526000908152604090205460ff1681565b610269610861565b60405161013f9190610e1e565b61022360035481565b61019661028d366004610df5565b61093a565b6101766102a0366004610e80565b6109d5565b60408051602081019091526000808252606091905b600654811015610407576103f382600683815481106102db576102db610e99565b9060005260206000200180546102f090610eaf565b80601f016020809104026020016040519081016040528092919081815260200182805461031c90610eaf565b80156103695780601f1061033e57610100808354040283529160200191610369565b820191906000526020600020905b81548152906001019060200180831161034c57829003601f168201915b5050505050604051806040016040528060048152602001630101e9f160e51b8152506103d46008600687815481106103a3576103a3610e99565b906000526020600020016040516103ba9190610ee4565b9081526040519081900360200190205462ffffff16610a00565b604051806040016040528060018152602001600560f91b815250610b29565b9150806103ff81610f96565b9150506102ba565b50919050565b6000546001600160a01b031633146104405760405162461bcd60e51b815260040161043790610fb1565b60405180910390fd5b60035442106104615760405162461bcd60e51b815260040161043790610fe6565b60025442106104be5760405162461bcd60e51b8152602060048201526024808201527f5468697320766f74696e672073657373696f6e20616c726561647920737461726044820152633a32b21760e11b6064820152608401610437565b6007816040516104ce9190611028565b9081526040519081900360200190205460ff161561052e5760405162461bcd60e51b815260206004820152601b60248201527f546869732063686f69636520616c7265616479206578697374732e00000000006044820152606401610437565b600680546001810182556000919091528151610571917ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01906020840190610bae565b5060016007826040516105849190611028565b908152604051908190036020019020805491151560ff1990921691909117905550565b6000546001600160a01b031633146105d15760405162461bcd60e51b815260040161043790610fb1565b6105db6000610b5e565b565b60035442106105fe5760405162461bcd60e51b815260040161043790610fe6565b60025442101561065f5760405162461bcd60e51b815260206004820152602660248201527f5468697320766f74696e672073657373696f6e20646964206e6f7420737461726044820152653a103cb2ba1760d11b6064820152608401610437565b60078260405161066f9190611028565b9081526040519081900360200190205460ff166106c05760405162461bcd60e51b815260206004820152600f60248201526e24b73b30b634b21031b437b4b1b29760891b6044820152606401610437565b6004543360009081526005602052604090205460ff918216916106e591849116611044565b60ff1611156107415760405162461bcd60e51b815260206004820152602260248201527f4578636565646564206e756d626572206f6620766f7465732070657220757365604482015261391760f11b6064820152608401610437565b336000908152600560205260408120805483929061076390849060ff16611044565b92506101000a81548160ff021916908360ff1602179055508060ff1660088360405161078f9190611028565b90815260405190819003602001902080546000906107b390849062ffffff16611069565b92506101000a81548162ffffff021916908362ffffff1602179055505050565b600180546107e090610eaf565b80601f016020809104026020016040519081016040528092919081815260200182805461080c90610eaf565b80156108595780601f1061082e57610100808354040283529160200191610859565b820191906000526020600020905b81548152906001019060200180831161083c57829003601f168201915b505050505081565b60606006805480602002602001604051908101604052809291908181526020016000905b828210156109315783829060005260206000200180546108a490610eaf565b80601f01602080910402602001604051908101604052809291908181526020018280546108d090610eaf565b801561091d5780601f106108f25761010080835404028352916020019161091d565b820191906000526020600020905b81548152906001019060200180831161090057829003601f168201915b505050505081526020019060010190610885565b50505050905090565b6000546001600160a01b031633146109645760405162461bcd60e51b815260040161043790610fb1565b6001600160a01b0381166109c95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610437565b6109d281610b5e565b50565b600681815481106109e557600080fd5b9060005260206000200160009150905080546107e090610eaf565b606081610a245750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610a4e5780610a3881610f96565b9150610a479050600a83611090565b9150610a28565b60008167ffffffffffffffff811115610a6957610a69610c47565b6040519080825280601f01601f191660200182016040528015610a93576020820181803683370190505b509050815b8515610b2057610aa96001826110b2565b90506000610ab8600a88611090565b610ac390600a6110c9565b610acd90886110b2565b610ad8906030611044565b905060008160f81b905080848481518110610af557610af5610e99565b60200101906001600160f81b031916908160001a905350610b17600a89611090565b97505050610a98565b50949350505050565b60608585858585604051602001610b449594939291906110e8565b604051602081830303815290604052905095945050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054610bba90610eaf565b90600052602060002090601f016020900481019282610bdc5760008555610c22565b82601f10610bf557805160ff1916838001178555610c22565b82800160010185558215610c22579182015b82811115610c22578251825591602001919060010190610c07565b50610c2e929150610c32565b5090565b5b80821115610c2e5760008155600101610c33565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610c6e57600080fd5b813567ffffffffffffffff80821115610c8957610c89610c47565b604051601f8301601f19908116603f01168101908282118183101715610cb157610cb1610c47565b81604052838152866020858801011115610cca57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215610cfc57600080fd5b813567ffffffffffffffff811115610d1357600080fd5b610d1f84828501610c5d565b949350505050565b60005b83811015610d42578181015183820152602001610d2a565b83811115610d51576000848401525b50505050565b60008151808452610d6f816020860160208601610d27565b601f01601f19169290920160200192915050565b602081526000610d966020830184610d57565b9392505050565b60008060408385031215610db057600080fd5b823567ffffffffffffffff811115610dc757600080fd5b610dd385828601610c5d565b925050602083013560ff81168114610dea57600080fd5b809150509250929050565b600060208284031215610e0757600080fd5b81356001600160a01b0381168114610d9657600080fd5b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610e7357603f19888603018452610e61858351610d57565b94509285019290850190600101610e45565b5092979650505050505050565b600060208284031215610e9257600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680610ec357607f821691505b6020821081141561040757634e487b7160e01b600052602260045260246000fd5b600080835481600182811c915080831680610f0057607f831692505b6020808410821415610f2057634e487b7160e01b86526022600452602486fd5b818015610f345760018114610f4557610f72565b60ff19861689528489019650610f72565b60008a81526020902060005b86811015610f6a5781548b820152908501908301610f51565b505084890196505b509498975050505050505050565b634e487b7160e01b600052601160045260246000fd5b6000600019821415610faa57610faa610f80565b5060010190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526022908201527f5468697320766f74696e672073657373696f6e20616c726561647920656e6465604082015261321760f11b606082015260800190565b6000825161103a818460208701610d27565b9190910192915050565b600060ff821660ff84168060ff0382111561106157611061610f80565b019392505050565b600062ffffff80831681851680830382111561108757611087610f80565b01949350505050565b6000826110ad57634e487b7160e01b600052601260045260246000fd5b500490565b6000828210156110c4576110c4610f80565b500390565b60008160001904831182151516156110e3576110e3610f80565b500290565b600086516110fa818460208b01610d27565b86519083019061110e818360208b01610d27565b8651910190611121818360208a01610d27565b8551910190611134818360208901610d27565b8451910190611147818360208801610d27565b0197965050505050505056fea26469706673582212205dcde27b4d22bb8a776b13a461ae60994e0eb6e929db655ac3f28a06b0bf966c64736f6c634300080b0033",
    "bytecodeSha1": "a6eaedc56c8ef2bc5a230c2e614b1634f43122bd",
    "compiler": {
        "evm_version": "istanbul",
        "optimizer": {
            "enabled": true,
            "runs": 200
        },
        "version": "0.8.11+commit.d7f03943"
    },
    "contractName": "VotingSession",
    "coverageMap": {
        "branches": {
            "0": {
                "Ownable.transferOwnership": {
                    "39": [1934, 1956, true]
                }
            },
            "2": {},
            "4": {
                "VotingSession.addChoice": {
                    "31": [1766, 1787, true],
                    "32": [1857, 1880, true],
                    "33": [1960, 1979, true]
                },
                "VotingSession.uint2str": {
                    "38": [2962, 2969, false]
                },
                "VotingSession.vote": {
                    "34": [1189, 1210, true],
                    "35": [1280, 1304, true],
                    "36": [1386, 1404, true],
                    "37": [1455, 1516, true]
                }
            }
        },
        "statements": {
            "0": {
                "Ownable._setOwner": {
                    "29": [2131, 2148],
                    "30": [2158, 2203]
                },
                "Ownable.owner": {
                    "1": [1038, 1051]
                },
                "Ownable.renounceOwnership": {
                    "11": [1669, 1690]
                },
                "Ownable.transferOwnership": {
                    "19": [1926, 1999],
                    "20": [2009, 2028]
                }
            },
            "2": {
                "Context._msgSender": {
                    "5": [658, 675]
                }
            },
            "4": {
                "VotingSession.addChoice": {
                    "6": [1758, 1826],
                    "7": [1836, 1942],
                    "8": [1952, 2011],
                    "9": [2022, 2042],
                    "10": [2052, 2077]
                },
                "VotingSession.append": {
                    "28": [2779, 2825]
                },
                "VotingSession.getAllChoices": {
                    "18": [2163, 2177]
                },
                "VotingSession.getNumOfVotesForUser": {
                    "0": [1063, 1094]
                },
                "VotingSession.getResults": {
                    "2": [2353, 2536],
                    "3": [2334, 2337],
                    "4": [2557, 2571]
                },
                "VotingSession.uint2str": {
                    "21": [2985, 2995],
                    "22": [3089, 3094],
                    "23": [3108, 3115],
                    "24": [3234, 3243],
                    "25": [3355, 3367],
                    "26": [3381, 3389],
                    "27": [3409, 3428]
                },
                "VotingSession.vote": {
                    "12": [1181, 1249],
                    "13": [1259, 1368],
                    "14": [1378, 1424],
                    "15": [1434, 1576],
                    "16": [1587, 1628],
                    "17": [1638, 1677]
                }
            }
        }
    },
    "dependencies": [
        "OpenZeppelin/openzeppelin-contracts@4.2.0/Context",
        "OpenZeppelin/openzeppelin-contracts@4.2.0/Ownable"
    ],
    "deployedBytecode": "608060405234801561001057600080fd5b50600436106101005760003560e01c806395d89b4111610097578063e97995dc11610066578063e97995dc14610261578063efbe1c1c14610276578063f2fde38b1461027f578063f6fd7fde1461029257600080fd5b806395d89b4114610212578063be9a65551461021a578063bf247f7914610231578063dde06f491461023e57600080fd5b8063715018a6116100d3578063715018a6146101985780638da5cb5b146101a057806390ca27f3146101bb57806391623640146101ce57600080fd5b806322517a16146101055780632aed8692146101485780634717f97c1461016e5780635fa520bb14610183575b600080fd5b610133610113366004610cea565b805160208183018101805160078252928201919093012091525460ff1681565b60405190151581526020015b60405180910390f35b3360009081526005602052604090205460ff165b60405160ff909116815260200161013f565b6101766102a5565b60405161013f9190610d83565b610196610191366004610cea565b61040d565b005b6101966105a7565b6000546040516001600160a01b03909116815260200161013f565b6101966101c9366004610d9d565b6105dd565b6101fe6101dc366004610cea565b805160208183018101805160088252928201919093012091525462ffffff1681565b60405162ffffff909116815260200161013f565b6101766107d3565b61022360025481565b60405190815260200161013f565b60045461015c9060ff1681565b61015c61024c366004610df5565b60056020526000908152604090205460ff1681565b610269610861565b60405161013f9190610e1e565b61022360035481565b61019661028d366004610df5565b61093a565b6101766102a0366004610e80565b6109d5565b60408051602081019091526000808252606091905b600654811015610407576103f382600683815481106102db576102db610e99565b9060005260206000200180546102f090610eaf565b80601f016020809104026020016040519081016040528092919081815260200182805461031c90610eaf565b80156103695780601f1061033e57610100808354040283529160200191610369565b820191906000526020600020905b81548152906001019060200180831161034c57829003601f168201915b5050505050604051806040016040528060048152602001630101e9f160e51b8152506103d46008600687815481106103a3576103a3610e99565b906000526020600020016040516103ba9190610ee4565b9081526040519081900360200190205462ffffff16610a00565b604051806040016040528060018152602001600560f91b815250610b29565b9150806103ff81610f96565b9150506102ba565b50919050565b6000546001600160a01b031633146104405760405162461bcd60e51b815260040161043790610fb1565b60405180910390fd5b60035442106104615760405162461bcd60e51b815260040161043790610fe6565b60025442106104be5760405162461bcd60e51b8152602060048201526024808201527f5468697320766f74696e672073657373696f6e20616c726561647920737461726044820152633a32b21760e11b6064820152608401610437565b6007816040516104ce9190611028565b9081526040519081900360200190205460ff161561052e5760405162461bcd60e51b815260206004820152601b60248201527f546869732063686f69636520616c7265616479206578697374732e00000000006044820152606401610437565b600680546001810182556000919091528151610571917ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01906020840190610bae565b5060016007826040516105849190611028565b908152604051908190036020019020805491151560ff1990921691909117905550565b6000546001600160a01b031633146105d15760405162461bcd60e51b815260040161043790610fb1565b6105db6000610b5e565b565b60035442106105fe5760405162461bcd60e51b815260040161043790610fe6565b60025442101561065f5760405162461bcd60e51b815260206004820152602660248201527f5468697320766f74696e672073657373696f6e20646964206e6f7420737461726044820152653a103cb2ba1760d11b6064820152608401610437565b60078260405161066f9190611028565b9081526040519081900360200190205460ff166106c05760405162461bcd60e51b815260206004820152600f60248201526e24b73b30b634b21031b437b4b1b29760891b6044820152606401610437565b6004543360009081526005602052604090205460ff918216916106e591849116611044565b60ff1611156107415760405162461bcd60e51b815260206004820152602260248201527f4578636565646564206e756d626572206f6620766f7465732070657220757365604482015261391760f11b6064820152608401610437565b336000908152600560205260408120805483929061076390849060ff16611044565b92506101000a81548160ff021916908360ff1602179055508060ff1660088360405161078f9190611028565b90815260405190819003602001902080546000906107b390849062ffffff16611069565b92506101000a81548162ffffff021916908362ffffff1602179055505050565b600180546107e090610eaf565b80601f016020809104026020016040519081016040528092919081815260200182805461080c90610eaf565b80156108595780601f1061082e57610100808354040283529160200191610859565b820191906000526020600020905b81548152906001019060200180831161083c57829003601f168201915b505050505081565b60606006805480602002602001604051908101604052809291908181526020016000905b828210156109315783829060005260206000200180546108a490610eaf565b80601f01602080910402602001604051908101604052809291908181526020018280546108d090610eaf565b801561091d5780601f106108f25761010080835404028352916020019161091d565b820191906000526020600020905b81548152906001019060200180831161090057829003601f168201915b505050505081526020019060010190610885565b50505050905090565b6000546001600160a01b031633146109645760405162461bcd60e51b815260040161043790610fb1565b6001600160a01b0381166109c95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610437565b6109d281610b5e565b50565b600681815481106109e557600080fd5b9060005260206000200160009150905080546107e090610eaf565b606081610a245750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610a4e5780610a3881610f96565b9150610a479050600a83611090565b9150610a28565b60008167ffffffffffffffff811115610a6957610a69610c47565b6040519080825280601f01601f191660200182016040528015610a93576020820181803683370190505b509050815b8515610b2057610aa96001826110b2565b90506000610ab8600a88611090565b610ac390600a6110c9565b610acd90886110b2565b610ad8906030611044565b905060008160f81b905080848481518110610af557610af5610e99565b60200101906001600160f81b031916908160001a905350610b17600a89611090565b97505050610a98565b50949350505050565b60608585858585604051602001610b449594939291906110e8565b604051602081830303815290604052905095945050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054610bba90610eaf565b90600052602060002090601f016020900481019282610bdc5760008555610c22565b82601f10610bf557805160ff1916838001178555610c22565b82800160010185558215610c22579182015b82811115610c22578251825591602001919060010190610c07565b50610c2e929150610c32565b5090565b5b80821115610c2e5760008155600101610c33565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610c6e57600080fd5b813567ffffffffffffffff80821115610c8957610c89610c47565b604051601f8301601f19908116603f01168101908282118183101715610cb157610cb1610c47565b81604052838152866020858801011115610cca57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215610cfc57600080fd5b813567ffffffffffffffff811115610d1357600080fd5b610d1f84828501610c5d565b949350505050565b60005b83811015610d42578181015183820152602001610d2a565b83811115610d51576000848401525b50505050565b60008151808452610d6f816020860160208601610d27565b601f01601f19169290920160200192915050565b602081526000610d966020830184610d57565b9392505050565b60008060408385031215610db057600080fd5b823567ffffffffffffffff811115610dc757600080fd5b610dd385828601610c5d565b925050602083013560ff81168114610dea57600080fd5b809150509250929050565b600060208284031215610e0757600080fd5b81356001600160a01b0381168114610d9657600080fd5b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610e7357603f19888603018452610e61858351610d57565b94509285019290850190600101610e45565b5092979650505050505050565b600060208284031215610e9257600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680610ec357607f821691505b6020821081141561040757634e487b7160e01b600052602260045260246000fd5b600080835481600182811c915080831680610f0057607f831692505b6020808410821415610f2057634e487b7160e01b86526022600452602486fd5b818015610f345760018114610f4557610f72565b60ff19861689528489019650610f72565b60008a81526020902060005b86811015610f6a5781548b820152908501908301610f51565b505084890196505b509498975050505050505050565b634e487b7160e01b600052601160045260246000fd5b6000600019821415610faa57610faa610f80565b5060010190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526022908201527f5468697320766f74696e672073657373696f6e20616c726561647920656e6465604082015261321760f11b606082015260800190565b6000825161103a818460208701610d27565b9190910192915050565b600060ff821660ff84168060ff0382111561106157611061610f80565b019392505050565b600062ffffff80831681851680830382111561108757611087610f80565b01949350505050565b6000826110ad57634e487b7160e01b600052601260045260246000fd5b500490565b6000828210156110c4576110c4610f80565b500390565b60008160001904831182151516156110e3576110e3610f80565b500290565b600086516110fa818460208b01610d27565b86519083019061110e818360208b01610d27565b8651910190611121818360208a01610d27565b8551910190611134818360208901610d27565b8451910190611147818360208801610d27565b0197965050505050505056fea26469706673582212205dcde27b4d22bb8a776b13a461ae60994e0eb6e929db655ac3f28a06b0bf966c64736f6c634300080b0033",
    "deployedSourceMap": "195:3242:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;504:41;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1362:14:5;;1355:22;1337:41;;1325:2;1310:18;504:41:4;;;;;;;;993:108;1083:10;1046:5;1070:24;;;:12;:24;;;;;;;;993:108;;;1561:4:5;1549:17;;;1531:36;;1519:2;1504:18;993:108:4;1389:184:5;2190:388:4;;;:::i;:::-;;;;;;;:::i;1690:394::-;;;;;;:::i;:::-;;:::i;:::-;;1605:92:0;;;:::i;973:85::-;1019:7;1045:6;973:85;;-1:-1:-1;;;;;1045:6:0;;;2475:51:5;;2463:2;2448:18;973:85:0;2329:203:5;1107:577:4;;;;;;:::i;:::-;;:::i;551:47::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3195:8:5;3183:21;;;3165:40;;3153:2;3138:18;551:47:4;3021:190:5;235:20:4;;;:::i;261:::-;;;;;;;;;3362:25:5;;;3350:2;3335:18;261:20:4;3216:177:5;312:30:4;;;;;;;;;348:45;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2090:94;;;:::i;:::-;;;;;;;:::i;287:18::-;;;;;;1846:189:0;;;;;;:::i;:::-;;:::i;400:23:4:-;;;;;;:::i;:::-;;:::i;2190:388::-;2258:26;;;;;;;;;:21;:26;;;2233:13;;2258:26;2294:253;2318:7;:14;2314:18;;2294:253;;;2363:173;2387:7;2412;2420:1;2412:10;;;;;;;;:::i;:::-;;;;;;;;2363:173;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2363:173:4;;;2464:36;2473:14;2488:7;2496:1;2488:10;;;;;;;;:::i;:::-;;;;;;;;2473:26;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2464:8;:36::i;:::-;2363:173;;;;;;;;;;;;;-1:-1:-1;;;2363:173:4;;;:6;:173::i;:::-;2353:183;-1:-1:-1;2334:3:4;;;;:::i;:::-;;;;2294:253;;;-1:-1:-1;2564:7:4;2190:388;-1:-1:-1;2190:388:4:o;1690:394::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;;;;;;;;;1784:3:4::1;;1766:15;:21;1758:68;;;;-1:-1:-1::0;;;1758:68:4::1;;;;;;;:::i;:::-;1875:5;;1857:15;:23;1836:106;;;::::0;-1:-1:-1;;;1836:106:4;;7667:2:5;1836:106:4::1;::::0;::::1;7649:21:5::0;7706:2;7686:18;;;7679:30;7745:34;7725:18;;;7718:62;-1:-1:-1;;;7796:18:5;;;7789:34;7840:19;;1836:106:4::1;7465:400:5::0;1836:106:4::1;1961:10;1972:6;1961:18;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;::::1;;1960:19;1952:59;;;::::0;-1:-1:-1;;;1952:59:4;;8353:2:5;1952:59:4::1;::::0;::::1;8335:21:5::0;8392:2;8372:18;;;8365:30;8431:29;8411:18;;;8404:57;8478:18;;1952:59:4::1;8151:351:5::0;1952:59:4::1;2022:7;:20:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;2022:20:4;;;;;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;;2073:4;2052:10;2063:6;2052:18;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:25;;;::::1;;-1:-1:-1::0;;2052:25:4;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;1690:394:4:o;1605:92:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;1107:577:4:-;1207:3;;1189:15;:21;1181:68;;;;-1:-1:-1;;;1181:68:4;;;;;;;:::i;:::-;1299:5;;1280:15;:24;;1259:109;;;;-1:-1:-1;;;1259:109:4;;8709:2:5;1259:109:4;;;8691:21:5;8748:2;8728:18;;;8721:30;8787:34;8767:18;;;8760:62;-1:-1:-1;;;8838:18:5;;;8831:36;8884:19;;1259:109:4;8507:402:5;1259:109:4;1386:10;1397:6;1386:18;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1378:46;;;;-1:-1:-1;;;1378:46:4;;9116:2:5;1378:46:4;;;9098:21:5;9155:2;9135:18;;;9128:30;-1:-1:-1;;;9174:18:5;;;9167:45;9229:18;;1378:46:4;8914:339:5;1378:46:4;1499:17;;1468:10;1499:17;1455:24;;;:12;:24;;;;;;1499:17;;;;;1455:40;;1482:13;;1455:24;:40;:::i;:::-;:61;;;;1434:142;;;;-1:-1:-1;;;1434:142:4;;9669:2:5;1434:142:4;;;9651:21:5;9708:2;9688:18;;;9681:30;9747:34;9727:18;;;9720:62;-1:-1:-1;;;9798:18:5;;;9791:32;9840:19;;1434:142:4;9467:398:5;1434:142:4;1600:10;1587:24;;;;:12;:24;;;;;:41;;1615:13;;1587:24;:41;;1615:13;;1587:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1664:13;1638:39;;:14;1653:6;1638:22;;;;;;:::i;:::-;;;;;;;;;;;;;;:39;;:22;;:39;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1107:577;;:::o;235:20::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2090:94::-;2136:15;2170:7;2163:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2090:94;:::o;1846:189:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;10303:2:5;1926:73:0::1;::::0;::::1;10285:21:5::0;10342:2;10322:18;;;10315:30;10381:34;10361:18;;;10354:62;-1:-1:-1;;;10432:18:5;;;10425:36;10478:19;;1926:73:0::1;10101:402:5::0;1926:73:0::1;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;400:23:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2838:597::-;2915:27;2962:7;2958:48;;-1:-1:-1;;2985:10:4;;;;;;;;;;;;-1:-1:-1;;;2985:10:4;;;;;2838:597::o;2958:48::-;3027:2;3015:9;3060:66;3067:6;;3060:66;;3089:5;;;;:::i;:::-;;-1:-1:-1;3108:7:4;;-1:-1:-1;3113:2:4;3108:7;;:::i;:::-;;;3060:66;;;3135:17;3165:3;3155:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3155:14:4;-1:-1:-1;3135:34:4;-1:-1:-1;3191:3:4;3204:196;3211:7;;3204:196;;3238:5;3242:1;3238;:5;:::i;:::-;3234:9;-1:-1:-1;3257:10:4;3288:7;3293:2;3288;:7;:::i;:::-;3287:14;;3299:2;3287:14;:::i;:::-;3282:19;;:2;:19;:::i;:::-;3271:31;;:2;:31;:::i;:::-;3257:46;;3317:9;3336:4;3329:12;;3317:24;;3365:2;3355:4;3360:1;3355:7;;;;;;;;:::i;:::-;;;;:12;-1:-1:-1;;;;;3355:12:4;;;;;;;;-1:-1:-1;3381:8:4;3387:2;3381:8;;:::i;:::-;;;3220:180;;3204:196;;;-1:-1:-1;3423:4:4;2838:597;-1:-1:-1;;;;2838:597:4:o;2584:248::-;2754:13;2810:1;2813;2816;2819;2822;2793:31;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2779:46;;2584:248;;;;;;;:::o;2041:169:0:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:5;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:719;189:5;242:3;235:4;227:6;223:17;219:27;209:55;;260:1;257;250:12;209:55;296:6;283:20;322:18;359:2;355;352:10;349:36;;;365:18;;:::i;:::-;440:2;434:9;408:2;494:13;;-1:-1:-1;;490:22:5;;;514:2;486:31;482:40;470:53;;;538:18;;;558:22;;;535:46;532:72;;;584:18;;:::i;:::-;624:10;620:2;613:22;659:2;651:6;644:18;705:3;698:4;693:2;685:6;681:15;677:26;674:35;671:55;;;722:1;719;712:12;671:55;786:2;779:4;771:6;767:17;760:4;752:6;748:17;735:54;833:1;826:4;821:2;813:6;809:15;805:26;798:37;853:6;844:15;;;;;;146:719;;;;:::o;870:322::-;939:6;992:2;980:9;971:7;967:23;963:32;960:52;;;1008:1;1005;998:12;960:52;1048:9;1035:23;1081:18;1073:6;1070:30;1067:50;;;1113:1;1110;1103:12;1067:50;1136;1178:7;1169:6;1158:9;1154:22;1136:50;:::i;:::-;1126:60;870:322;-1:-1:-1;;;;870:322:5:o;1578:258::-;1650:1;1660:113;1674:6;1671:1;1668:13;1660:113;;;1750:11;;;1744:18;1731:11;;;1724:39;1696:2;1689:10;1660:113;;;1791:6;1788:1;1785:13;1782:48;;;1826:1;1817:6;1812:3;1808:16;1801:27;1782:48;;1578:258;;;:::o;1841:::-;1883:3;1921:5;1915:12;1948:6;1943:3;1936:19;1964:63;2020:6;2013:4;2008:3;2004:14;1997:4;1990:5;1986:16;1964:63;:::i;:::-;2081:2;2060:15;-1:-1:-1;;2056:29:5;2047:39;;;;2088:4;2043:50;;1841:258;-1:-1:-1;;1841:258:5:o;2104:220::-;2253:2;2242:9;2235:21;2216:4;2273:45;2314:2;2303:9;2299:18;2291:6;2273:45;:::i;:::-;2265:53;2104:220;-1:-1:-1;;;2104:220:5:o;2537:479::-;2613:6;2621;2674:2;2662:9;2653:7;2649:23;2645:32;2642:52;;;2690:1;2687;2680:12;2642:52;2730:9;2717:23;2763:18;2755:6;2752:30;2749:50;;;2795:1;2792;2785:12;2749:50;2818;2860:7;2851:6;2840:9;2836:22;2818:50;:::i;:::-;2808:60;;;2918:2;2907:9;2903:18;2890:32;2962:4;2955:5;2951:16;2944:5;2941:27;2931:55;;2982:1;2979;2972:12;2931:55;3005:5;2995:15;;;2537:479;;;;;:::o;3398:286::-;3457:6;3510:2;3498:9;3489:7;3485:23;3481:32;3478:52;;;3526:1;3523;3516:12;3478:52;3552:23;;-1:-1:-1;;;;;3604:31:5;;3594:42;;3584:70;;3650:1;3647;3640:12;3689:803;3851:4;3880:2;3920;3909:9;3905:18;3950:2;3939:9;3932:21;3973:6;4008;4002:13;4039:6;4031;4024:22;4077:2;4066:9;4062:18;4055:25;;4139:2;4129:6;4126:1;4122:14;4111:9;4107:30;4103:39;4089:53;;4177:2;4169:6;4165:15;4198:1;4208:255;4222:6;4219:1;4216:13;4208:255;;;4315:2;4311:7;4299:9;4291:6;4287:22;4283:36;4278:3;4271:49;4343:40;4376:6;4367;4361:13;4343:40;:::i;:::-;4333:50;-1:-1:-1;4441:12:5;;;;4406:15;;;;4244:1;4237:9;4208:255;;;-1:-1:-1;4480:6:5;;3689:803;-1:-1:-1;;;;;;;3689:803:5:o;4497:180::-;4556:6;4609:2;4597:9;4588:7;4584:23;4580:32;4577:52;;;4625:1;4622;4615:12;4577:52;-1:-1:-1;4648:23:5;;4497:180;-1:-1:-1;4497:180:5:o;4682:127::-;4743:10;4738:3;4734:20;4731:1;4724:31;4774:4;4771:1;4764:15;4798:4;4795:1;4788:15;4814:380;4893:1;4889:12;;;;4936;;;4957:61;;5011:4;5003:6;4999:17;4989:27;;4957:61;5064:2;5056:6;5053:14;5033:18;5030:38;5027:161;;;5110:10;5105:3;5101:20;5098:1;5091:31;5145:4;5142:1;5135:15;5173:4;5170:1;5163:15;5325:1099;5453:3;5482:1;5515:6;5509:13;5545:3;5567:1;5595:9;5591:2;5587:18;5577:28;;5655:2;5644:9;5640:18;5677;5667:61;;5721:4;5713:6;5709:17;5699:27;;5667:61;5747:2;5795;5787:6;5784:14;5764:18;5761:38;5758:165;;;-1:-1:-1;;;5822:33:5;;5878:4;5875:1;5868:15;5908:4;5829:3;5896:17;5758:165;5939:18;5966:104;;;;6084:1;6079:320;;;;5932:467;;5966:104;-1:-1:-1;;5999:24:5;;5987:37;;6044:16;;;;-1:-1:-1;5966:104:5;;6079:320;5272:1;5265:14;;;5309:4;5296:18;;6174:1;6188:165;6202:6;6199:1;6196:13;6188:165;;;6280:14;;6267:11;;;6260:35;6323:16;;;;6217:10;;6188:165;;;6192:3;;6382:6;6377:3;6373:16;6366:23;;5932:467;-1:-1:-1;6415:3:5;;5325:1099;-1:-1:-1;;;;;;;;5325:1099:5:o;6429:127::-;6490:10;6485:3;6481:20;6478:1;6471:31;6521:4;6518:1;6511:15;6545:4;6542:1;6535:15;6561:135;6600:3;-1:-1:-1;;6621:17:5;;6618:43;;;6641:18;;:::i;:::-;-1:-1:-1;6688:1:5;6677:13;;6561:135::o;6701:356::-;6903:2;6885:21;;;6922:18;;;6915:30;6981:34;6976:2;6961:18;;6954:62;7048:2;7033:18;;6701:356::o;7062:398::-;7264:2;7246:21;;;7303:2;7283:18;;;7276:30;7342:34;7337:2;7322:18;;7315:62;-1:-1:-1;;;7408:2:5;7393:18;;7386:32;7450:3;7435:19;;7062:398::o;7870:276::-;8001:3;8039:6;8033:13;8055:53;8101:6;8096:3;8089:4;8081:6;8077:17;8055:53;:::i;:::-;8124:16;;;;;7870:276;-1:-1:-1;;7870:276:5:o;9258:204::-;9296:3;9332:4;9329:1;9325:12;9364:4;9361:1;9357:12;9399:3;9393:4;9389:14;9384:3;9381:23;9378:49;;;9407:18;;:::i;:::-;9443:13;;9258:204;-1:-1:-1;;;9258:204:5:o;9870:226::-;9909:3;9937:8;9972:2;9969:1;9965:10;10002:2;9999:1;9995:10;10033:3;10029:2;10025:12;10020:3;10017:21;10014:47;;;10041:18;;:::i;:::-;10077:13;;9870:226;-1:-1:-1;;;;9870:226:5:o;10508:217::-;10548:1;10574;10564:132;;10618:10;10613:3;10609:20;10606:1;10599:31;10653:4;10650:1;10643:15;10681:4;10678:1;10671:15;10564:132;-1:-1:-1;10710:9:5;;10508:217::o;10730:125::-;10770:4;10798:1;10795;10792:8;10789:34;;;10803:18;;:::i;:::-;-1:-1:-1;10840:9:5;;10730:125::o;10860:168::-;10900:7;10966:1;10962;10958:6;10954:14;10951:1;10948:21;10943:1;10936:9;10929:17;10925:45;10922:71;;;10973:18;;:::i;:::-;-1:-1:-1;11013:9:5;;10860:168::o;11033:1052::-;11356:3;11394:6;11388:13;11410:53;11456:6;11451:3;11444:4;11436:6;11432:17;11410:53;:::i;:::-;11526:13;;11485:16;;;;11548:57;11526:13;11485:16;11582:4;11570:17;;11548:57;:::i;:::-;11672:13;;11627:20;;;11694:57;11672:13;11627:20;11728:4;11716:17;;11694:57;:::i;:::-;11818:13;;11773:20;;;11840:57;11818:13;11773:20;11874:4;11862:17;;11840:57;:::i;:::-;11964:13;;11919:20;;;11986:57;11964:13;11919:20;12020:4;12008:17;;11986:57;:::i;:::-;12059:20;;11033:1052;-1:-1:-1;;;;;;;11033:1052:5:o",
    "language": "Solidity",
    "natspec": {
        "kind": "dev",
        "methods": {
            "owner()": {
                "details": "Returns the address of the current owner."
            },
            "renounceOwnership()": {
                "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
            },
            "transferOwnership(address)": {
                "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
            }
        },
        "version": 1
    },
    "offset": [195, 3437],
    "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE97995DC GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xE97995DC EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0xEFBE1C1C EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0xF6FD7FDE EQ PUSH2 0x292 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0xBF247F79 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0xDDE06F49 EQ PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x90CA27F3 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x91623640 EQ PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x22517A16 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x2AED8692 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x4717F97C EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x5FA520BB EQ PUSH2 0x183 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x133 PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0xCEA JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x7 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13F JUMP JUMPDEST PUSH2 0x176 PUSH2 0x2A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0xD83 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x191 CALLDATASIZE PUSH1 0x4 PUSH2 0xCEA JUMP JUMPDEST PUSH2 0x40D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x196 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13F JUMP JUMPDEST PUSH2 0x196 PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0xD9D JUMP JUMPDEST PUSH2 0x5DD JUMP JUMPDEST PUSH2 0x1FE PUSH2 0x1DC CALLDATASIZE PUSH1 0x4 PUSH2 0xCEA JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x8 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD PUSH3 0xFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13F JUMP JUMPDEST PUSH2 0x176 PUSH2 0x7D3 JUMP JUMPDEST PUSH2 0x223 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13F JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x15C SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x15C PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0xDF5 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x269 PUSH2 0x861 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0xE1E JUMP JUMPDEST PUSH2 0x223 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x28D CALLDATASIZE PUSH1 0x4 PUSH2 0xDF5 JUMP JUMPDEST PUSH2 0x93A JUMP JUMPDEST PUSH2 0x176 PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0xE80 JUMP JUMPDEST PUSH2 0x9D5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x60 SWAP2 SWAP1 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x407 JUMPI PUSH2 0x3F3 DUP3 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2DB JUMPI PUSH2 0x2DB PUSH2 0xE99 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x2F0 SWAP1 PUSH2 0xEAF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x31C SWAP1 PUSH2 0xEAF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x369 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x33E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x369 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x34C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x101E9F1 PUSH1 0xE5 SHL DUP2 MSTORE POP PUSH2 0x3D4 PUSH1 0x8 PUSH1 0x6 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x3A3 JUMPI PUSH2 0x3A3 PUSH2 0xE99 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0xEE4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH3 0xFFFFFF AND PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 PUSH1 0xF9 SHL DUP2 MSTORE POP PUSH2 0xB29 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x3FF DUP2 PUSH2 0xF96 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2BA JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x440 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x437 SWAP1 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD TIMESTAMP LT PUSH2 0x461 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x437 SWAP1 PUSH2 0xFE6 JUMP JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP LT PUSH2 0x4BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x5468697320766F74696E672073657373696F6E20616C72656164792073746172 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x3A32B217 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x437 JUMP JUMPDEST PUSH1 0x7 DUP2 PUSH1 0x40 MLOAD PUSH2 0x4CE SWAP2 SWAP1 PUSH2 0x1028 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x52E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546869732063686F69636520616C7265616479206578697374732E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x437 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD PUSH2 0x571 SWAP2 PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0xBAE JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x584 SWAP2 SWAP1 PUSH2 0x1028 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x437 SWAP1 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x5DB PUSH1 0x0 PUSH2 0xB5E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 SLOAD TIMESTAMP LT PUSH2 0x5FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x437 SWAP1 PUSH2 0xFE6 JUMP JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP LT ISZERO PUSH2 0x65F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320766F74696E672073657373696F6E20646964206E6F742073746172 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x3A103CB2BA17 PUSH1 0xD1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x437 JUMP JUMPDEST PUSH1 0x7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x66F SWAP2 SWAP1 PUSH2 0x1028 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x6C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x24B73B30B634B21031B437B4B1B297 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x437 JUMP JUMPDEST PUSH1 0x4 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF SWAP2 DUP3 AND SWAP2 PUSH2 0x6E5 SWAP2 DUP5 SWAP2 AND PUSH2 0x1044 JUMP JUMPDEST PUSH1 0xFF AND GT ISZERO PUSH2 0x741 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565646564206E756D626572206F6620766F7465732070657220757365 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3917 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x437 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x763 SWAP1 DUP5 SWAP1 PUSH1 0xFF AND PUSH2 0x1044 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xFF AND PUSH1 0x8 DUP4 PUSH1 0x40 MLOAD PUSH2 0x78F SWAP2 SWAP1 PUSH2 0x1028 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x7B3 SWAP1 DUP5 SWAP1 PUSH3 0xFFFFFF AND PUSH2 0x1069 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x7E0 SWAP1 PUSH2 0xEAF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x80C SWAP1 PUSH2 0xEAF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x859 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x82E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x859 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x83C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x931 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x8A4 SWAP1 PUSH2 0xEAF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8D0 SWAP1 PUSH2 0xEAF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x91D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8F2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x91D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x900 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x885 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x964 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x437 SWAP1 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x437 JUMP JUMPDEST PUSH2 0x9D2 DUP2 PUSH2 0xB5E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x9E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x7E0 SWAP1 PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0xA24 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xA4E JUMPI DUP1 PUSH2 0xA38 DUP2 PUSH2 0xF96 JUMP JUMPDEST SWAP2 POP PUSH2 0xA47 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x1090 JUMP JUMPDEST SWAP2 POP PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA69 JUMPI PUSH2 0xA69 PUSH2 0xC47 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA93 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 JUMPDEST DUP6 ISZERO PUSH2 0xB20 JUMPI PUSH2 0xAA9 PUSH1 0x1 DUP3 PUSH2 0x10B2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xAB8 PUSH1 0xA DUP9 PUSH2 0x1090 JUMP JUMPDEST PUSH2 0xAC3 SWAP1 PUSH1 0xA PUSH2 0x10C9 JUMP JUMPDEST PUSH2 0xACD SWAP1 DUP9 PUSH2 0x10B2 JUMP JUMPDEST PUSH2 0xAD8 SWAP1 PUSH1 0x30 PUSH2 0x1044 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0xF8 SHL SWAP1 POP DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xAF5 JUMPI PUSH2 0xAF5 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xB17 PUSH1 0xA DUP10 PUSH2 0x1090 JUMP JUMPDEST SWAP8 POP POP POP PUSH2 0xA98 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB44 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xBBA SWAP1 PUSH2 0xEAF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xBDC JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xC22 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xBF5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xC22 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xC22 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xC22 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xC07 JUMP JUMPDEST POP PUSH2 0xC2E SWAP3 SWAP2 POP PUSH2 0xC32 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xC2E JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xC33 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xC89 JUMPI PUSH2 0xC89 PUSH2 0xC47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xCB1 JUMPI PUSH2 0xCB1 PUSH2 0xC47 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0xCCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD1F DUP5 DUP3 DUP6 ADD PUSH2 0xC5D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD42 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD2A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xD51 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xD6F DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xD27 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xD96 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD57 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDD3 DUP6 DUP3 DUP7 ADD PUSH2 0xC5D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xDEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xE73 JUMPI PUSH1 0x3F NOT DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0xE61 DUP6 DUP4 MLOAD PUSH2 0xD57 JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xE45 JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xEC3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x407 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD DUP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0xF00 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0xF20 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0xF34 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0xF45 JUMPI PUSH2 0xF72 JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0xF72 JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0xF6A JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0xF51 JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP SWAP5 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xFAA JUMPI PUSH2 0xFAA PUSH2 0xF80 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x5468697320766F74696E672073657373696F6E20616C726561647920656E6465 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x3217 PUSH1 0xF1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x103A DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xD27 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x1061 JUMPI PUSH2 0x1061 PUSH2 0xF80 JUMP JUMPDEST ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x1087 JUMPI PUSH2 0x1087 PUSH2 0xF80 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x10AD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x10C4 JUMPI PUSH2 0x10C4 PUSH2 0xF80 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x10E3 JUMPI PUSH2 0x10E3 PUSH2 0xF80 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP7 MLOAD PUSH2 0x10FA DUP2 DUP5 PUSH1 0x20 DUP12 ADD PUSH2 0xD27 JUMP JUMPDEST DUP7 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x110E DUP2 DUP4 PUSH1 0x20 DUP12 ADD PUSH2 0xD27 JUMP JUMPDEST DUP7 MLOAD SWAP2 ADD SWAP1 PUSH2 0x1121 DUP2 DUP4 PUSH1 0x20 DUP11 ADD PUSH2 0xD27 JUMP JUMPDEST DUP6 MLOAD SWAP2 ADD SWAP1 PUSH2 0x1134 DUP2 DUP4 PUSH1 0x20 DUP10 ADD PUSH2 0xD27 JUMP JUMPDEST DUP5 MLOAD SWAP2 ADD SWAP1 PUSH2 0x1147 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xD27 JUMP JUMPDEST ADD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D 0xCD 0xE2 PUSH28 0x4D22BB8A776B13A461AE60994E0EB6E929DB655AC3F28A06B0BF966C PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
    "pcMap": {
        "0": {
            "offset": [195, 3437],
            "op": "PUSH1",
            "path": "4",
            "value": "0x80"
        },
        "2": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "4": {
            "fn": null,
            "offset": [195, 3437],
            "op": "MSTORE",
            "path": "4"
        },
        "5": {
            "fn": null,
            "offset": [195, 3437],
            "op": "CALLVALUE",
            "path": "4"
        },
        "6": {
            "fn": null,
            "offset": [195, 3437],
            "op": "DUP1",
            "path": "4"
        },
        "7": {
            "fn": null,
            "offset": [195, 3437],
            "op": "ISZERO",
            "path": "4"
        },
        "8": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH2",
            "path": "4",
            "value": "0x10"
        },
        "11": {
            "fn": null,
            "offset": [195, 3437],
            "op": "JUMPI",
            "path": "4"
        },
        "12": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "14": {
            "fn": null,
            "offset": [195, 3437],
            "op": "DUP1",
            "path": "4"
        },
        "15": {
            "dev": "Cannot send ether to nonpayable function",
            "fn": null,
            "offset": [195, 3437],
            "op": "REVERT",
            "path": "4"
        },
        "16": {
            "fn": null,
            "offset": [195, 3437],
            "op": "JUMPDEST",
            "path": "4"
        },
        "17": {
            "fn": null,
            "offset": [195, 3437],
            "op": "POP",
            "path": "4"
        },
        "18": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "20": {
            "fn": null,
            "offset": [195, 3437],
            "op": "CALLDATASIZE",
            "path": "4"
        },
        "21": {
            "fn": null,
            "offset": [195, 3437],
            "op": "LT",
            "path": "4"
        },
        "22": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH2",
            "path": "4",
            "value": "0x100"
        },
        "25": {
            "fn": null,
            "offset": [195, 3437],
            "op": "JUMPI",
            "path": "4"
        },
        "26": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "28": {
            "fn": null,
            "offset": [195, 3437],
            "op": "CALLDATALOAD",
            "path": "4"
        },
        "29": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH1",
            "path": "4",
            "value": "0xE0"
        },
        "31": {
            "fn": null,
            "offset": [195, 3437],
            "op": "SHR",
            "path": "4"
        },
        "32": {
            "fn": null,
            "offset": [195, 3437],
            "op": "DUP1",
            "path": "4"
        },
        "33": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH4",
            "path": "4",
            "value": "0x95D89B41"
        },
        "38": {
            "fn": null,
            "offset": [195, 3437],
            "op": "GT",
            "path": "4"
        },
        "39": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH2",
            "path": "4",
            "value": "0x97"
        },
        "42": {
            "fn": null,
            "offset": [195, 3437],
            "op": "JUMPI",
            "path": "4"
        },
        "43": {
            "fn": null,
            "offset": [195, 3437],
            "op": "DUP1",
            "path": "4"
        },
        "44": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH4",
            "path": "4",
            "value": "0xE97995DC"
        },
        "49": {
            "fn": null,
            "offset": [195, 3437],
            "op": "GT",
            "path": "4"
        },
        "50": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH2",
            "path": "4",
            "value": "0x66"
        },
        "53": {
            "fn": null,
            "offset": [195, 3437],
            "op": "JUMPI",
            "path": "4"
        },
        "54": {
            "fn": null,
            "offset": [195, 3437],
            "op": "DUP1",
            "path": "4"
        },
        "55": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH4",
            "path": "4",
            "value": "0xE97995DC"
        },
        "60": {
            "fn": null,
            "offset": [195, 3437],
            "op": "EQ",
            "path": "4"
        },
        "61": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH2",
            "path": "4",
            "value": "0x261"
        },
        "64": {
            "fn": null,
            "offset": [195, 3437],
            "op": "JUMPI",
            "path": "4"
        },
        "65": {
            "fn": null,
            "offset": [195, 3437],
            "op": "DUP1",
            "path": "4"
        },
        "66": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH4",
            "path": "4",
            "value": "0xEFBE1C1C"
        },
        "71": {
            "fn": null,
            "offset": [195, 3437],
            "op": "EQ",
            "path": "4"
        },
        "72": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH2",
            "path": "4",
            "value": "0x276"
        },
        "75": {
            "fn": null,
            "offset": [195, 3437],
            "op": "JUMPI",
            "path": "4"
        },
        "76": {
            "fn": null,
            "offset": [195, 3437],
            "op": "DUP1",
            "path": "4"
        },
        "77": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH4",
            "path": "4",
            "value": "0xF2FDE38B"
        },
        "82": {
            "fn": null,
            "offset": [195, 3437],
            "op": "EQ",
            "path": "4"
        },
        "83": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH2",
            "path": "4",
            "value": "0x27F"
        },
        "86": {
            "fn": null,
            "offset": [195, 3437],
            "op": "JUMPI",
            "path": "4"
        },
        "87": {
            "fn": null,
            "offset": [195, 3437],
            "op": "DUP1",
            "path": "4"
        },
        "88": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH4",
            "path": "4",
            "value": "0xF6FD7FDE"
        },
        "93": {
            "fn": null,
            "offset": [195, 3437],
            "op": "EQ",
            "path": "4"
        },
        "94": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH2",
            "path": "4",
            "value": "0x292"
        },
        "97": {
            "fn": null,
            "offset": [195, 3437],
            "op": "JUMPI",
            "path": "4"
        },
        "98": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "100": {
            "fn": null,
            "offset": [195, 3437],
            "op": "DUP1",
            "path": "4"
        },
        "101": {
            "fn": null,
            "offset": [195, 3437],
            "op": "REVERT",
            "path": "4"
        },
        "102": {
            "fn": null,
            "offset": [195, 3437],
            "op": "JUMPDEST",
            "path": "4"
        },
        "103": {
            "fn": null,
            "offset": [195, 3437],
            "op": "DUP1",
            "path": "4"
        },
        "104": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH4",
            "path": "4",
            "value": "0x95D89B41"
        },
        "109": {
            "fn": null,
            "offset": [195, 3437],
            "op": "EQ",
            "path": "4"
        },
        "110": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH2",
            "path": "4",
            "value": "0x212"
        },
        "113": {
            "fn": null,
            "offset": [195, 3437],
            "op": "JUMPI",
            "path": "4"
        },
        "114": {
            "fn": null,
            "offset": [195, 3437],
            "op": "DUP1",
            "path": "4"
        },
        "115": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH4",
            "path": "4",
            "value": "0xBE9A6555"
        },
        "120": {
            "fn": null,
            "offset": [195, 3437],
            "op": "EQ",
            "path": "4"
        },
        "121": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH2",
            "path": "4",
            "value": "0x21A"
        },
        "124": {
            "fn": null,
            "offset": [195, 3437],
            "op": "JUMPI",
            "path": "4"
        },
        "125": {
            "fn": null,
            "offset": [195, 3437],
            "op": "DUP1",
            "path": "4"
        },
        "126": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH4",
            "path": "4",
            "value": "0xBF247F79"
        },
        "131": {
            "fn": null,
            "offset": [195, 3437],
            "op": "EQ",
            "path": "4"
        },
        "132": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH2",
            "path": "4",
            "value": "0x231"
        },
        "135": {
            "fn": null,
            "offset": [195, 3437],
            "op": "JUMPI",
            "path": "4"
        },
        "136": {
            "fn": null,
            "offset": [195, 3437],
            "op": "DUP1",
            "path": "4"
        },
        "137": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH4",
            "path": "4",
            "value": "0xDDE06F49"
        },
        "142": {
            "fn": null,
            "offset": [195, 3437],
            "op": "EQ",
            "path": "4"
        },
        "143": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH2",
            "path": "4",
            "value": "0x23E"
        },
        "146": {
            "fn": null,
            "offset": [195, 3437],
            "op": "JUMPI",
            "path": "4"
        },
        "147": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "149": {
            "fn": null,
            "offset": [195, 3437],
            "op": "DUP1",
            "path": "4"
        },
        "150": {
            "fn": null,
            "offset": [195, 3437],
            "op": "REVERT",
            "path": "4"
        },
        "151": {
            "fn": null,
            "offset": [195, 3437],
            "op": "JUMPDEST",
            "path": "4"
        },
        "152": {
            "fn": null,
            "offset": [195, 3437],
            "op": "DUP1",
            "path": "4"
        },
        "153": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH4",
            "path": "4",
            "value": "0x715018A6"
        },
        "158": {
            "fn": null,
            "offset": [195, 3437],
            "op": "GT",
            "path": "4"
        },
        "159": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH2",
            "path": "4",
            "value": "0xD3"
        },
        "162": {
            "fn": null,
            "offset": [195, 3437],
            "op": "JUMPI",
            "path": "4"
        },
        "163": {
            "fn": null,
            "offset": [195, 3437],
            "op": "DUP1",
            "path": "4"
        },
        "164": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH4",
            "path": "4",
            "value": "0x715018A6"
        },
        "169": {
            "fn": null,
            "offset": [195, 3437],
            "op": "EQ",
            "path": "4"
        },
        "170": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH2",
            "path": "4",
            "value": "0x198"
        },
        "173": {
            "fn": null,
            "offset": [195, 3437],
            "op": "JUMPI",
            "path": "4"
        },
        "174": {
            "fn": null,
            "offset": [195, 3437],
            "op": "DUP1",
            "path": "4"
        },
        "175": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH4",
            "path": "4",
            "value": "0x8DA5CB5B"
        },
        "180": {
            "fn": null,
            "offset": [195, 3437],
            "op": "EQ",
            "path": "4"
        },
        "181": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1A0"
        },
        "184": {
            "fn": null,
            "offset": [195, 3437],
            "op": "JUMPI",
            "path": "4"
        },
        "185": {
            "fn": null,
            "offset": [195, 3437],
            "op": "DUP1",
            "path": "4"
        },
        "186": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH4",
            "path": "4",
            "value": "0x90CA27F3"
        },
        "191": {
            "fn": null,
            "offset": [195, 3437],
            "op": "EQ",
            "path": "4"
        },
        "192": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1BB"
        },
        "195": {
            "fn": null,
            "offset": [195, 3437],
            "op": "JUMPI",
            "path": "4"
        },
        "196": {
            "fn": null,
            "offset": [195, 3437],
            "op": "DUP1",
            "path": "4"
        },
        "197": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH4",
            "path": "4",
            "value": "0x91623640"
        },
        "202": {
            "fn": null,
            "offset": [195, 3437],
            "op": "EQ",
            "path": "4"
        },
        "203": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1CE"
        },
        "206": {
            "fn": null,
            "offset": [195, 3437],
            "op": "JUMPI",
            "path": "4"
        },
        "207": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "209": {
            "fn": null,
            "offset": [195, 3437],
            "op": "DUP1",
            "path": "4"
        },
        "210": {
            "fn": null,
            "offset": [195, 3437],
            "op": "REVERT",
            "path": "4"
        },
        "211": {
            "fn": null,
            "offset": [195, 3437],
            "op": "JUMPDEST",
            "path": "4"
        },
        "212": {
            "fn": null,
            "offset": [195, 3437],
            "op": "DUP1",
            "path": "4"
        },
        "213": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH4",
            "path": "4",
            "value": "0x22517A16"
        },
        "218": {
            "fn": null,
            "offset": [195, 3437],
            "op": "EQ",
            "path": "4"
        },
        "219": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH2",
            "path": "4",
            "value": "0x105"
        },
        "222": {
            "fn": null,
            "offset": [195, 3437],
            "op": "JUMPI",
            "path": "4"
        },
        "223": {
            "fn": null,
            "offset": [195, 3437],
            "op": "DUP1",
            "path": "4"
        },
        "224": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH4",
            "path": "4",
            "value": "0x2AED8692"
        },
        "229": {
            "fn": null,
            "offset": [195, 3437],
            "op": "EQ",
            "path": "4"
        },
        "230": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH2",
            "path": "4",
            "value": "0x148"
        },
        "233": {
            "fn": null,
            "offset": [195, 3437],
            "op": "JUMPI",
            "path": "4"
        },
        "234": {
            "fn": null,
            "offset": [195, 3437],
            "op": "DUP1",
            "path": "4"
        },
        "235": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH4",
            "path": "4",
            "value": "0x4717F97C"
        },
        "240": {
            "fn": null,
            "offset": [195, 3437],
            "op": "EQ",
            "path": "4"
        },
        "241": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH2",
            "path": "4",
            "value": "0x16E"
        },
        "244": {
            "fn": null,
            "offset": [195, 3437],
            "op": "JUMPI",
            "path": "4"
        },
        "245": {
            "fn": null,
            "offset": [195, 3437],
            "op": "DUP1",
            "path": "4"
        },
        "246": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH4",
            "path": "4",
            "value": "0x5FA520BB"
        },
        "251": {
            "fn": null,
            "offset": [195, 3437],
            "op": "EQ",
            "path": "4"
        },
        "252": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH2",
            "path": "4",
            "value": "0x183"
        },
        "255": {
            "fn": null,
            "offset": [195, 3437],
            "op": "JUMPI",
            "path": "4"
        },
        "256": {
            "fn": null,
            "offset": [195, 3437],
            "op": "JUMPDEST",
            "path": "4"
        },
        "257": {
            "fn": null,
            "offset": [195, 3437],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "259": {
            "fn": null,
            "offset": [195, 3437],
            "op": "DUP1",
            "path": "4"
        },
        "260": {
            "first_revert": true,
            "fn": null,
            "offset": [195, 3437],
            "op": "REVERT",
            "path": "4"
        },
        "261": {
            "offset": [504, 545],
            "op": "JUMPDEST",
            "path": "4"
        },
        "262": {
            "fn": null,
            "offset": [504, 545],
            "op": "PUSH2",
            "path": "4",
            "value": "0x133"
        },
        "265": {
            "fn": null,
            "offset": [504, 545],
            "op": "PUSH2",
            "path": "4",
            "value": "0x113"
        },
        "268": {
            "fn": null,
            "offset": [504, 545],
            "op": "CALLDATASIZE",
            "path": "4"
        },
        "269": {
            "fn": null,
            "offset": [504, 545],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "271": {
            "fn": null,
            "offset": [504, 545],
            "op": "PUSH2",
            "path": "4",
            "value": "0xCEA"
        },
        "274": {
            "fn": null,
            "jump": "i",
            "offset": [504, 545],
            "op": "JUMP",
            "path": "4"
        },
        "275": {
            "fn": null,
            "offset": [504, 545],
            "op": "JUMPDEST",
            "path": "4"
        },
        "276": {
            "fn": null,
            "offset": [504, 545],
            "op": "DUP1",
            "path": "4"
        },
        "277": {
            "fn": null,
            "offset": [504, 545],
            "op": "MLOAD",
            "path": "4"
        },
        "278": {
            "fn": null,
            "offset": [504, 545],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "280": {
            "fn": null,
            "offset": [504, 545],
            "op": "DUP2",
            "path": "4"
        },
        "281": {
            "fn": null,
            "offset": [504, 545],
            "op": "DUP4",
            "path": "4"
        },
        "282": {
            "fn": null,
            "offset": [504, 545],
            "op": "ADD",
            "path": "4"
        },
        "283": {
            "fn": null,
            "offset": [504, 545],
            "op": "DUP2",
            "path": "4"
        },
        "284": {
            "fn": null,
            "offset": [504, 545],
            "op": "ADD",
            "path": "4"
        },
        "285": {
            "fn": null,
            "offset": [504, 545],
            "op": "DUP1",
            "path": "4"
        },
        "286": {
            "fn": null,
            "offset": [504, 545],
            "op": "MLOAD",
            "path": "4"
        },
        "287": {
            "fn": null,
            "offset": [504, 545],
            "op": "PUSH1",
            "path": "4",
            "value": "0x7"
        },
        "289": {
            "fn": null,
            "offset": [504, 545],
            "op": "DUP3",
            "path": "4"
        },
        "290": {
            "fn": null,
            "offset": [504, 545],
            "op": "MSTORE",
            "path": "4"
        },
        "291": {
            "fn": null,
            "offset": [504, 545],
            "op": "SWAP3",
            "path": "4"
        },
        "292": {
            "fn": null,
            "offset": [504, 545],
            "op": "DUP3",
            "path": "4"
        },
        "293": {
            "fn": null,
            "offset": [504, 545],
            "op": "ADD",
            "path": "4"
        },
        "294": {
            "fn": null,
            "offset": [504, 545],
            "op": "SWAP2",
            "path": "4"
        },
        "295": {
            "fn": null,
            "offset": [504, 545],
            "op": "SWAP1",
            "path": "4"
        },
        "296": {
            "fn": null,
            "offset": [504, 545],
            "op": "SWAP4",
            "path": "4"
        },
        "297": {
            "fn": null,
            "offset": [504, 545],
            "op": "ADD",
            "path": "4"
        },
        "298": {
            "fn": null,
            "offset": [504, 545],
            "op": "KECCAK256",
            "path": "4"
        },
        "299": {
            "fn": null,
            "offset": [504, 545],
            "op": "SWAP2",
            "path": "4"
        },
        "300": {
            "fn": null,
            "offset": [504, 545],
            "op": "MSTORE",
            "path": "4"
        },
        "301": {
            "fn": null,
            "offset": [504, 545],
            "op": "SLOAD",
            "path": "4"
        },
        "302": {
            "fn": null,
            "offset": [504, 545],
            "op": "PUSH1",
            "path": "4",
            "value": "0xFF"
        },
        "304": {
            "fn": null,
            "offset": [504, 545],
            "op": "AND",
            "path": "4"
        },
        "305": {
            "fn": null,
            "offset": [504, 545],
            "op": "DUP2",
            "path": "4"
        },
        "306": {
            "fn": null,
            "offset": [504, 545],
            "op": "JUMP",
            "path": "4"
        },
        "307": {
            "fn": null,
            "offset": [504, 545],
            "op": "JUMPDEST",
            "path": "4"
        },
        "308": {
            "fn": null,
            "offset": [504, 545],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "310": {
            "fn": null,
            "offset": [504, 545],
            "op": "MLOAD",
            "path": "4"
        },
        "311": {
            "op": "SWAP1"
        },
        "312": {
            "op": "ISZERO"
        },
        "313": {
            "op": "ISZERO"
        },
        "314": {
            "op": "DUP2"
        },
        "315": {
            "op": "MSTORE"
        },
        "316": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "318": {
            "op": "ADD"
        },
        "319": {
            "offset": [504, 545],
            "op": "JUMPDEST",
            "path": "4"
        },
        "320": {
            "fn": null,
            "offset": [504, 545],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "322": {
            "fn": null,
            "offset": [504, 545],
            "op": "MLOAD",
            "path": "4"
        },
        "323": {
            "fn": null,
            "offset": [504, 545],
            "op": "DUP1",
            "path": "4"
        },
        "324": {
            "fn": null,
            "offset": [504, 545],
            "op": "SWAP2",
            "path": "4"
        },
        "325": {
            "fn": null,
            "offset": [504, 545],
            "op": "SUB",
            "path": "4"
        },
        "326": {
            "fn": null,
            "offset": [504, 545],
            "op": "SWAP1",
            "path": "4"
        },
        "327": {
            "fn": null,
            "offset": [504, 545],
            "op": "RETURN",
            "path": "4"
        },
        "328": {
            "fn": "VotingSession.getNumOfVotesForUser",
            "offset": [993, 1101],
            "op": "JUMPDEST",
            "path": "4"
        },
        "329": {
            "fn": "VotingSession.getNumOfVotesForUser",
            "offset": [1083, 1093],
            "op": "CALLER",
            "path": "4",
            "statement": 0
        },
        "330": {
            "fn": "VotingSession.getNumOfVotesForUser",
            "offset": [1046, 1051],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "332": {
            "fn": "VotingSession.getNumOfVotesForUser",
            "offset": [1070, 1094],
            "op": "SWAP1",
            "path": "4"
        },
        "333": {
            "fn": "VotingSession.getNumOfVotesForUser",
            "offset": [1070, 1094],
            "op": "DUP2",
            "path": "4"
        },
        "334": {
            "fn": "VotingSession.getNumOfVotesForUser",
            "offset": [1070, 1094],
            "op": "MSTORE",
            "path": "4"
        },
        "335": {
            "fn": "VotingSession.getNumOfVotesForUser",
            "offset": [1070, 1082],
            "op": "PUSH1",
            "path": "4",
            "value": "0x5"
        },
        "337": {
            "fn": "VotingSession.getNumOfVotesForUser",
            "offset": [1070, 1094],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "339": {
            "fn": "VotingSession.getNumOfVotesForUser",
            "offset": [1070, 1094],
            "op": "MSTORE",
            "path": "4"
        },
        "340": {
            "fn": "VotingSession.getNumOfVotesForUser",
            "offset": [1070, 1094],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "342": {
            "fn": "VotingSession.getNumOfVotesForUser",
            "offset": [1070, 1094],
            "op": "SWAP1",
            "path": "4"
        },
        "343": {
            "fn": "VotingSession.getNumOfVotesForUser",
            "offset": [1070, 1094],
            "op": "KECCAK256",
            "path": "4"
        },
        "344": {
            "fn": "VotingSession.getNumOfVotesForUser",
            "offset": [1070, 1094],
            "op": "SLOAD",
            "path": "4"
        },
        "345": {
            "fn": "VotingSession.getNumOfVotesForUser",
            "offset": [1070, 1094],
            "op": "PUSH1",
            "path": "4",
            "value": "0xFF"
        },
        "347": {
            "fn": "VotingSession.getNumOfVotesForUser",
            "offset": [1070, 1094],
            "op": "AND",
            "path": "4"
        },
        "348": {
            "fn": "VotingSession.getNumOfVotesForUser",
            "offset": [993, 1101],
            "op": "JUMPDEST",
            "path": "4"
        },
        "349": {
            "fn": "VotingSession.getNumOfVotesForUser",
            "offset": [993, 1101],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "351": {
            "fn": "VotingSession.getNumOfVotesForUser",
            "offset": [993, 1101],
            "op": "MLOAD",
            "path": "4"
        },
        "352": {
            "op": "PUSH1",
            "value": "0xFF"
        },
        "354": {
            "op": "SWAP1"
        },
        "355": {
            "op": "SWAP2"
        },
        "356": {
            "op": "AND"
        },
        "357": {
            "op": "DUP2"
        },
        "358": {
            "op": "MSTORE"
        },
        "359": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "361": {
            "op": "ADD"
        },
        "362": {
            "fn": "VotingSession.getNumOfVotesForUser",
            "offset": [993, 1101],
            "op": "PUSH2",
            "path": "4",
            "value": "0x13F"
        },
        "365": {
            "op": "JUMP"
        },
        "366": {
            "fn": "VotingSession.getResults",
            "offset": [2190, 2578],
            "op": "JUMPDEST",
            "path": "4"
        },
        "367": {
            "fn": "VotingSession.getResults",
            "offset": [2190, 2578],
            "op": "PUSH2",
            "path": "4",
            "value": "0x176"
        },
        "370": {
            "fn": "VotingSession.getResults",
            "offset": [2190, 2578],
            "op": "PUSH2",
            "path": "4",
            "value": "0x2A5"
        },
        "373": {
            "fn": "VotingSession.getResults",
            "jump": "i",
            "offset": [2190, 2578],
            "op": "JUMP",
            "path": "4"
        },
        "374": {
            "fn": "VotingSession.getResults",
            "offset": [2190, 2578],
            "op": "JUMPDEST",
            "path": "4"
        },
        "375": {
            "fn": "VotingSession.getResults",
            "offset": [2190, 2578],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "377": {
            "fn": "VotingSession.getResults",
            "offset": [2190, 2578],
            "op": "MLOAD",
            "path": "4"
        },
        "378": {
            "fn": "VotingSession.getResults",
            "offset": [2190, 2578],
            "op": "PUSH2",
            "path": "4",
            "value": "0x13F"
        },
        "381": {
            "fn": "VotingSession.getResults",
            "offset": [2190, 2578],
            "op": "SWAP2",
            "path": "4"
        },
        "382": {
            "fn": "VotingSession.getResults",
            "offset": [2190, 2578],
            "op": "SWAP1",
            "path": "4"
        },
        "383": {
            "fn": "VotingSession.getResults",
            "offset": [2190, 2578],
            "op": "PUSH2",
            "path": "4",
            "value": "0xD83"
        },
        "386": {
            "fn": "VotingSession.getResults",
            "jump": "i",
            "offset": [2190, 2578],
            "op": "JUMP",
            "path": "4"
        },
        "387": {
            "fn": "VotingSession.addChoice",
            "offset": [1690, 2084],
            "op": "JUMPDEST",
            "path": "4"
        },
        "388": {
            "fn": "VotingSession.addChoice",
            "offset": [1690, 2084],
            "op": "PUSH2",
            "path": "4",
            "value": "0x196"
        },
        "391": {
            "fn": "VotingSession.addChoice",
            "offset": [1690, 2084],
            "op": "PUSH2",
            "path": "4",
            "value": "0x191"
        },
        "394": {
            "fn": "VotingSession.addChoice",
            "offset": [1690, 2084],
            "op": "CALLDATASIZE",
            "path": "4"
        },
        "395": {
            "fn": "VotingSession.addChoice",
            "offset": [1690, 2084],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "397": {
            "fn": "VotingSession.addChoice",
            "offset": [1690, 2084],
            "op": "PUSH2",
            "path": "4",
            "value": "0xCEA"
        },
        "400": {
            "fn": "VotingSession.addChoice",
            "jump": "i",
            "offset": [1690, 2084],
            "op": "JUMP",
            "path": "4"
        },
        "401": {
            "fn": "VotingSession.addChoice",
            "offset": [1690, 2084],
            "op": "JUMPDEST",
            "path": "4"
        },
        "402": {
            "fn": "VotingSession.addChoice",
            "offset": [1690, 2084],
            "op": "PUSH2",
            "path": "4",
            "value": "0x40D"
        },
        "405": {
            "fn": "VotingSession.addChoice",
            "jump": "i",
            "offset": [1690, 2084],
            "op": "JUMP",
            "path": "4"
        },
        "406": {
            "fn": "VotingSession.addChoice",
            "offset": [1690, 2084],
            "op": "JUMPDEST",
            "path": "4"
        },
        "407": {
            "fn": "VotingSession.addChoice",
            "offset": [1690, 2084],
            "op": "STOP",
            "path": "4"
        },
        "408": {
            "fn": "Ownable.renounceOwnership",
            "offset": [1605, 1697],
            "op": "JUMPDEST",
            "path": "0"
        },
        "409": {
            "fn": "Ownable.renounceOwnership",
            "offset": [1605, 1697],
            "op": "PUSH2",
            "path": "0",
            "value": "0x196"
        },
        "412": {
            "fn": "Ownable.renounceOwnership",
            "offset": [1605, 1697],
            "op": "PUSH2",
            "path": "0",
            "value": "0x5A7"
        },
        "415": {
            "fn": "Ownable.renounceOwnership",
            "jump": "i",
            "offset": [1605, 1697],
            "op": "JUMP",
            "path": "0"
        },
        "416": {
            "fn": "Ownable.owner",
            "offset": [973, 1058],
            "op": "JUMPDEST",
            "path": "0"
        },
        "417": {
            "fn": "Ownable.owner",
            "offset": [1019, 1026],
            "op": "PUSH1",
            "path": "0",
            "value": "0x0"
        },
        "419": {
            "fn": "Ownable.owner",
            "offset": [1045, 1051],
            "op": "SLOAD",
            "path": "0",
            "statement": 1
        },
        "420": {
            "fn": "Ownable.owner",
            "offset": [973, 1058],
            "op": "PUSH1",
            "path": "0",
            "value": "0x40"
        },
        "422": {
            "fn": "Ownable.owner",
            "offset": [973, 1058],
            "op": "MLOAD",
            "path": "0"
        },
        "423": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "425": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "427": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "429": {
            "op": "SHL"
        },
        "430": {
            "op": "SUB"
        },
        "431": {
            "fn": "Ownable.owner",
            "offset": [1045, 1051],
            "op": "SWAP1",
            "path": "0"
        },
        "432": {
            "fn": "Ownable.owner",
            "offset": [1045, 1051],
            "op": "SWAP2",
            "path": "0"
        },
        "433": {
            "fn": "Ownable.owner",
            "offset": [1045, 1051],
            "op": "AND",
            "path": "0"
        },
        "434": {
            "op": "DUP2"
        },
        "435": {
            "op": "MSTORE"
        },
        "436": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "438": {
            "op": "ADD"
        },
        "439": {
            "fn": "Ownable.owner",
            "offset": [973, 1058],
            "op": "PUSH2",
            "path": "0",
            "value": "0x13F"
        },
        "442": {
            "op": "JUMP"
        },
        "443": {
            "fn": "VotingSession.vote",
            "offset": [1107, 1684],
            "op": "JUMPDEST",
            "path": "4"
        },
        "444": {
            "fn": "VotingSession.vote",
            "offset": [1107, 1684],
            "op": "PUSH2",
            "path": "4",
            "value": "0x196"
        },
        "447": {
            "fn": "VotingSession.vote",
            "offset": [1107, 1684],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1C9"
        },
        "450": {
            "fn": "VotingSession.vote",
            "offset": [1107, 1684],
            "op": "CALLDATASIZE",
            "path": "4"
        },
        "451": {
            "fn": "VotingSession.vote",
            "offset": [1107, 1684],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "453": {
            "fn": "VotingSession.vote",
            "offset": [1107, 1684],
            "op": "PUSH2",
            "path": "4",
            "value": "0xD9D"
        },
        "456": {
            "fn": "VotingSession.vote",
            "jump": "i",
            "offset": [1107, 1684],
            "op": "JUMP",
            "path": "4"
        },
        "457": {
            "fn": "VotingSession.vote",
            "offset": [1107, 1684],
            "op": "JUMPDEST",
            "path": "4"
        },
        "458": {
            "fn": "VotingSession.vote",
            "offset": [1107, 1684],
            "op": "PUSH2",
            "path": "4",
            "value": "0x5DD"
        },
        "461": {
            "fn": "VotingSession.vote",
            "jump": "i",
            "offset": [1107, 1684],
            "op": "JUMP",
            "path": "4"
        },
        "462": {
            "offset": [551, 598],
            "op": "JUMPDEST",
            "path": "4"
        },
        "463": {
            "fn": "VotingSession.vote",
            "offset": [551, 598],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1FE"
        },
        "466": {
            "fn": "VotingSession.vote",
            "offset": [551, 598],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1DC"
        },
        "469": {
            "fn": "VotingSession.vote",
            "offset": [551, 598],
            "op": "CALLDATASIZE",
            "path": "4"
        },
        "470": {
            "fn": "VotingSession.vote",
            "offset": [551, 598],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "472": {
            "fn": "VotingSession.vote",
            "offset": [551, 598],
            "op": "PUSH2",
            "path": "4",
            "value": "0xCEA"
        },
        "475": {
            "fn": "VotingSession.vote",
            "jump": "i",
            "offset": [551, 598],
            "op": "JUMP",
            "path": "4"
        },
        "476": {
            "fn": "VotingSession.vote",
            "offset": [551, 598],
            "op": "JUMPDEST",
            "path": "4"
        },
        "477": {
            "fn": "VotingSession.vote",
            "offset": [551, 598],
            "op": "DUP1",
            "path": "4"
        },
        "478": {
            "fn": "VotingSession.vote",
            "offset": [551, 598],
            "op": "MLOAD",
            "path": "4"
        },
        "479": {
            "fn": "VotingSession.vote",
            "offset": [551, 598],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "481": {
            "fn": "VotingSession.vote",
            "offset": [551, 598],
            "op": "DUP2",
            "path": "4"
        },
        "482": {
            "fn": "VotingSession.vote",
            "offset": [551, 598],
            "op": "DUP4",
            "path": "4"
        },
        "483": {
            "fn": "VotingSession.vote",
            "offset": [551, 598],
            "op": "ADD",
            "path": "4"
        },
        "484": {
            "fn": "VotingSession.vote",
            "offset": [551, 598],
            "op": "DUP2",
            "path": "4"
        },
        "485": {
            "fn": "VotingSession.vote",
            "offset": [551, 598],
            "op": "ADD",
            "path": "4"
        },
        "486": {
            "fn": "VotingSession.vote",
            "offset": [551, 598],
            "op": "DUP1",
            "path": "4"
        },
        "487": {
            "fn": "VotingSession.vote",
            "offset": [551, 598],
            "op": "MLOAD",
            "path": "4"
        },
        "488": {
            "fn": "VotingSession.vote",
            "offset": [551, 598],
            "op": "PUSH1",
            "path": "4",
            "value": "0x8"
        },
        "490": {
            "fn": "VotingSession.vote",
            "offset": [551, 598],
            "op": "DUP3",
            "path": "4"
        },
        "491": {
            "fn": "VotingSession.vote",
            "offset": [551, 598],
            "op": "MSTORE",
            "path": "4"
        },
        "492": {
            "fn": "VotingSession.vote",
            "offset": [551, 598],
            "op": "SWAP3",
            "path": "4"
        },
        "493": {
            "fn": "VotingSession.vote",
            "offset": [551, 598],
            "op": "DUP3",
            "path": "4"
        },
        "494": {
            "fn": "VotingSession.vote",
            "offset": [551, 598],
            "op": "ADD",
            "path": "4"
        },
        "495": {
            "fn": "VotingSession.vote",
            "offset": [551, 598],
            "op": "SWAP2",
            "path": "4"
        },
        "496": {
            "fn": "VotingSession.vote",
            "offset": [551, 598],
            "op": "SWAP1",
            "path": "4"
        },
        "497": {
            "fn": "VotingSession.vote",
            "offset": [551, 598],
            "op": "SWAP4",
            "path": "4"
        },
        "498": {
            "fn": "VotingSession.vote",
            "offset": [551, 598],
            "op": "ADD",
            "path": "4"
        },
        "499": {
            "fn": "VotingSession.vote",
            "offset": [551, 598],
            "op": "KECCAK256",
            "path": "4"
        },
        "500": {
            "fn": "VotingSession.vote",
            "offset": [551, 598],
            "op": "SWAP2",
            "path": "4"
        },
        "501": {
            "fn": "VotingSession.vote",
            "offset": [551, 598],
            "op": "MSTORE",
            "path": "4"
        },
        "502": {
            "fn": "VotingSession.vote",
            "offset": [551, 598],
            "op": "SLOAD",
            "path": "4"
        },
        "503": {
            "fn": "VotingSession.vote",
            "offset": [551, 598],
            "op": "PUSH3",
            "path": "4",
            "value": "0xFFFFFF"
        },
        "507": {
            "fn": "VotingSession.vote",
            "offset": [551, 598],
            "op": "AND",
            "path": "4"
        },
        "508": {
            "fn": "VotingSession.vote",
            "offset": [551, 598],
            "op": "DUP2",
            "path": "4"
        },
        "509": {
            "fn": "VotingSession.vote",
            "offset": [551, 598],
            "op": "JUMP",
            "path": "4"
        },
        "510": {
            "fn": "VotingSession.vote",
            "offset": [551, 598],
            "op": "JUMPDEST",
            "path": "4"
        },
        "511": {
            "fn": "VotingSession.vote",
            "offset": [551, 598],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "513": {
            "fn": "VotingSession.vote",
            "offset": [551, 598],
            "op": "MLOAD",
            "path": "4"
        },
        "514": {
            "op": "PUSH3",
            "value": "0xFFFFFF"
        },
        "518": {
            "op": "SWAP1"
        },
        "519": {
            "op": "SWAP2"
        },
        "520": {
            "op": "AND"
        },
        "521": {
            "op": "DUP2"
        },
        "522": {
            "op": "MSTORE"
        },
        "523": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "525": {
            "op": "ADD"
        },
        "526": {
            "offset": [551, 598],
            "op": "PUSH2",
            "path": "4",
            "value": "0x13F"
        },
        "529": {
            "op": "JUMP"
        },
        "530": {
            "offset": [235, 255],
            "op": "JUMPDEST",
            "path": "4"
        },
        "531": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "PUSH2",
            "path": "4",
            "value": "0x176"
        },
        "534": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "PUSH2",
            "path": "4",
            "value": "0x7D3"
        },
        "537": {
            "fn": "VotingSession.vote",
            "jump": "i",
            "offset": [235, 255],
            "op": "JUMP",
            "path": "4"
        },
        "538": {
            "offset": [261, 281],
            "op": "JUMPDEST",
            "path": "4"
        },
        "539": {
            "fn": "VotingSession.vote",
            "offset": [261, 281],
            "op": "PUSH2",
            "path": "4",
            "value": "0x223"
        },
        "542": {
            "fn": "VotingSession.vote",
            "offset": [261, 281],
            "op": "PUSH1",
            "path": "4",
            "value": "0x2"
        },
        "544": {
            "fn": "VotingSession.vote",
            "offset": [261, 281],
            "op": "SLOAD",
            "path": "4"
        },
        "545": {
            "fn": "VotingSession.vote",
            "offset": [261, 281],
            "op": "DUP2",
            "path": "4"
        },
        "546": {
            "fn": "VotingSession.vote",
            "offset": [261, 281],
            "op": "JUMP",
            "path": "4"
        },
        "547": {
            "fn": "VotingSession.vote",
            "offset": [261, 281],
            "op": "JUMPDEST",
            "path": "4"
        },
        "548": {
            "fn": "VotingSession.vote",
            "offset": [261, 281],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "550": {
            "fn": "VotingSession.vote",
            "offset": [261, 281],
            "op": "MLOAD",
            "path": "4"
        },
        "551": {
            "op": "SWAP1"
        },
        "552": {
            "op": "DUP2"
        },
        "553": {
            "op": "MSTORE"
        },
        "554": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "556": {
            "op": "ADD"
        },
        "557": {
            "offset": [261, 281],
            "op": "PUSH2",
            "path": "4",
            "value": "0x13F"
        },
        "560": {
            "op": "JUMP"
        },
        "561": {
            "offset": [312, 342],
            "op": "JUMPDEST",
            "path": "4"
        },
        "562": {
            "fn": "VotingSession.vote",
            "offset": [312, 342],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "564": {
            "fn": "VotingSession.vote",
            "offset": [312, 342],
            "op": "SLOAD",
            "path": "4"
        },
        "565": {
            "fn": "VotingSession.vote",
            "offset": [312, 342],
            "op": "PUSH2",
            "path": "4",
            "value": "0x15C"
        },
        "568": {
            "fn": "VotingSession.vote",
            "offset": [312, 342],
            "op": "SWAP1",
            "path": "4"
        },
        "569": {
            "fn": "VotingSession.vote",
            "offset": [312, 342],
            "op": "PUSH1",
            "path": "4",
            "value": "0xFF"
        },
        "571": {
            "fn": "VotingSession.vote",
            "offset": [312, 342],
            "op": "AND",
            "path": "4"
        },
        "572": {
            "fn": "VotingSession.vote",
            "offset": [312, 342],
            "op": "DUP2",
            "path": "4"
        },
        "573": {
            "fn": "VotingSession.vote",
            "offset": [312, 342],
            "op": "JUMP",
            "path": "4"
        },
        "574": {
            "offset": [348, 393],
            "op": "JUMPDEST",
            "path": "4"
        },
        "575": {
            "fn": "VotingSession.vote",
            "offset": [348, 393],
            "op": "PUSH2",
            "path": "4",
            "value": "0x15C"
        },
        "578": {
            "fn": "VotingSession.vote",
            "offset": [348, 393],
            "op": "PUSH2",
            "path": "4",
            "value": "0x24C"
        },
        "581": {
            "fn": "VotingSession.vote",
            "offset": [348, 393],
            "op": "CALLDATASIZE",
            "path": "4"
        },
        "582": {
            "fn": "VotingSession.vote",
            "offset": [348, 393],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "584": {
            "fn": "VotingSession.vote",
            "offset": [348, 393],
            "op": "PUSH2",
            "path": "4",
            "value": "0xDF5"
        },
        "587": {
            "fn": "VotingSession.vote",
            "jump": "i",
            "offset": [348, 393],
            "op": "JUMP",
            "path": "4"
        },
        "588": {
            "fn": "VotingSession.vote",
            "offset": [348, 393],
            "op": "JUMPDEST",
            "path": "4"
        },
        "589": {
            "fn": "VotingSession.vote",
            "offset": [348, 393],
            "op": "PUSH1",
            "path": "4",
            "value": "0x5"
        },
        "591": {
            "fn": "VotingSession.vote",
            "offset": [348, 393],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "593": {
            "fn": "VotingSession.vote",
            "offset": [348, 393],
            "op": "MSTORE",
            "path": "4"
        },
        "594": {
            "fn": "VotingSession.vote",
            "offset": [348, 393],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "596": {
            "fn": "VotingSession.vote",
            "offset": [348, 393],
            "op": "SWAP1",
            "path": "4"
        },
        "597": {
            "fn": "VotingSession.vote",
            "offset": [348, 393],
            "op": "DUP2",
            "path": "4"
        },
        "598": {
            "fn": "VotingSession.vote",
            "offset": [348, 393],
            "op": "MSTORE",
            "path": "4"
        },
        "599": {
            "fn": "VotingSession.vote",
            "offset": [348, 393],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "601": {
            "fn": "VotingSession.vote",
            "offset": [348, 393],
            "op": "SWAP1",
            "path": "4"
        },
        "602": {
            "fn": "VotingSession.vote",
            "offset": [348, 393],
            "op": "KECCAK256",
            "path": "4"
        },
        "603": {
            "fn": "VotingSession.vote",
            "offset": [348, 393],
            "op": "SLOAD",
            "path": "4"
        },
        "604": {
            "fn": "VotingSession.vote",
            "offset": [348, 393],
            "op": "PUSH1",
            "path": "4",
            "value": "0xFF"
        },
        "606": {
            "fn": "VotingSession.vote",
            "offset": [348, 393],
            "op": "AND",
            "path": "4"
        },
        "607": {
            "fn": "VotingSession.vote",
            "offset": [348, 393],
            "op": "DUP2",
            "path": "4"
        },
        "608": {
            "fn": "VotingSession.vote",
            "offset": [348, 393],
            "op": "JUMP",
            "path": "4"
        },
        "609": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2090, 2184],
            "op": "JUMPDEST",
            "path": "4"
        },
        "610": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2090, 2184],
            "op": "PUSH2",
            "path": "4",
            "value": "0x269"
        },
        "613": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2090, 2184],
            "op": "PUSH2",
            "path": "4",
            "value": "0x861"
        },
        "616": {
            "fn": "VotingSession.getAllChoices",
            "jump": "i",
            "offset": [2090, 2184],
            "op": "JUMP",
            "path": "4"
        },
        "617": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2090, 2184],
            "op": "JUMPDEST",
            "path": "4"
        },
        "618": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2090, 2184],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "620": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2090, 2184],
            "op": "MLOAD",
            "path": "4"
        },
        "621": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2090, 2184],
            "op": "PUSH2",
            "path": "4",
            "value": "0x13F"
        },
        "624": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2090, 2184],
            "op": "SWAP2",
            "path": "4"
        },
        "625": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2090, 2184],
            "op": "SWAP1",
            "path": "4"
        },
        "626": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2090, 2184],
            "op": "PUSH2",
            "path": "4",
            "value": "0xE1E"
        },
        "629": {
            "fn": "VotingSession.getAllChoices",
            "jump": "i",
            "offset": [2090, 2184],
            "op": "JUMP",
            "path": "4"
        },
        "630": {
            "offset": [287, 305],
            "op": "JUMPDEST",
            "path": "4"
        },
        "631": {
            "fn": "VotingSession.getAllChoices",
            "offset": [287, 305],
            "op": "PUSH2",
            "path": "4",
            "value": "0x223"
        },
        "634": {
            "fn": "VotingSession.getAllChoices",
            "offset": [287, 305],
            "op": "PUSH1",
            "path": "4",
            "value": "0x3"
        },
        "636": {
            "fn": "VotingSession.getAllChoices",
            "offset": [287, 305],
            "op": "SLOAD",
            "path": "4"
        },
        "637": {
            "fn": "VotingSession.getAllChoices",
            "offset": [287, 305],
            "op": "DUP2",
            "path": "4"
        },
        "638": {
            "fn": "VotingSession.getAllChoices",
            "offset": [287, 305],
            "op": "JUMP",
            "path": "4"
        },
        "639": {
            "fn": "Ownable.transferOwnership",
            "offset": [1846, 2035],
            "op": "JUMPDEST",
            "path": "0"
        },
        "640": {
            "fn": "Ownable.transferOwnership",
            "offset": [1846, 2035],
            "op": "PUSH2",
            "path": "0",
            "value": "0x196"
        },
        "643": {
            "fn": "Ownable.transferOwnership",
            "offset": [1846, 2035],
            "op": "PUSH2",
            "path": "0",
            "value": "0x28D"
        },
        "646": {
            "fn": "Ownable.transferOwnership",
            "offset": [1846, 2035],
            "op": "CALLDATASIZE",
            "path": "0"
        },
        "647": {
            "fn": "Ownable.transferOwnership",
            "offset": [1846, 2035],
            "op": "PUSH1",
            "path": "0",
            "value": "0x4"
        },
        "649": {
            "fn": "Ownable.transferOwnership",
            "offset": [1846, 2035],
            "op": "PUSH2",
            "path": "0",
            "value": "0xDF5"
        },
        "652": {
            "fn": "Ownable.transferOwnership",
            "jump": "i",
            "offset": [1846, 2035],
            "op": "JUMP",
            "path": "0"
        },
        "653": {
            "fn": "Ownable.transferOwnership",
            "offset": [1846, 2035],
            "op": "JUMPDEST",
            "path": "0"
        },
        "654": {
            "fn": "Ownable.transferOwnership",
            "offset": [1846, 2035],
            "op": "PUSH2",
            "path": "0",
            "value": "0x93A"
        },
        "657": {
            "fn": "Ownable.transferOwnership",
            "jump": "i",
            "offset": [1846, 2035],
            "op": "JUMP",
            "path": "0"
        },
        "658": {
            "offset": [400, 423],
            "op": "JUMPDEST",
            "path": "4"
        },
        "659": {
            "fn": "Ownable.transferOwnership",
            "offset": [400, 423],
            "op": "PUSH2",
            "path": "4",
            "value": "0x176"
        },
        "662": {
            "fn": "Ownable.transferOwnership",
            "offset": [400, 423],
            "op": "PUSH2",
            "path": "4",
            "value": "0x2A0"
        },
        "665": {
            "fn": "Ownable.transferOwnership",
            "offset": [400, 423],
            "op": "CALLDATASIZE",
            "path": "4"
        },
        "666": {
            "fn": "Ownable.transferOwnership",
            "offset": [400, 423],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "668": {
            "fn": "Ownable.transferOwnership",
            "offset": [400, 423],
            "op": "PUSH2",
            "path": "4",
            "value": "0xE80"
        },
        "671": {
            "fn": "Ownable.transferOwnership",
            "jump": "i",
            "offset": [400, 423],
            "op": "JUMP",
            "path": "4"
        },
        "672": {
            "fn": "Ownable.transferOwnership",
            "offset": [400, 423],
            "op": "JUMPDEST",
            "path": "4"
        },
        "673": {
            "fn": "Ownable.transferOwnership",
            "offset": [400, 423],
            "op": "PUSH2",
            "path": "4",
            "value": "0x9D5"
        },
        "676": {
            "fn": "Ownable.transferOwnership",
            "jump": "i",
            "offset": [400, 423],
            "op": "JUMP",
            "path": "4"
        },
        "677": {
            "fn": "VotingSession.getResults",
            "offset": [2190, 2578],
            "op": "JUMPDEST",
            "path": "4"
        },
        "678": {
            "fn": "VotingSession.getResults",
            "offset": [2258, 2284],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "680": {
            "fn": "VotingSession.getResults",
            "offset": [2258, 2284],
            "op": "DUP1",
            "path": "4"
        },
        "681": {
            "fn": "VotingSession.getResults",
            "offset": [2258, 2284],
            "op": "MLOAD",
            "path": "4"
        },
        "682": {
            "fn": "VotingSession.getResults",
            "offset": [2258, 2284],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "684": {
            "fn": "VotingSession.getResults",
            "offset": [2258, 2284],
            "op": "DUP2",
            "path": "4"
        },
        "685": {
            "fn": "VotingSession.getResults",
            "offset": [2258, 2284],
            "op": "ADD",
            "path": "4"
        },
        "686": {
            "fn": "VotingSession.getResults",
            "offset": [2258, 2284],
            "op": "SWAP1",
            "path": "4"
        },
        "687": {
            "fn": "VotingSession.getResults",
            "offset": [2258, 2284],
            "op": "SWAP2",
            "path": "4"
        },
        "688": {
            "fn": "VotingSession.getResults",
            "offset": [2258, 2284],
            "op": "MSTORE",
            "path": "4"
        },
        "689": {
            "fn": "VotingSession.getResults",
            "offset": [2258, 2279],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "691": {
            "fn": "VotingSession.getResults",
            "offset": [2258, 2284],
            "op": "DUP1",
            "path": "4"
        },
        "692": {
            "fn": "VotingSession.getResults",
            "offset": [2258, 2284],
            "op": "DUP3",
            "path": "4"
        },
        "693": {
            "fn": "VotingSession.getResults",
            "offset": [2258, 2284],
            "op": "MSTORE",
            "path": "4"
        },
        "694": {
            "fn": "VotingSession.getResults",
            "offset": [2233, 2246],
            "op": "PUSH1",
            "path": "4",
            "value": "0x60"
        },
        "696": {
            "fn": "VotingSession.getResults",
            "offset": [2233, 2246],
            "op": "SWAP2",
            "path": "4"
        },
        "697": {
            "fn": "VotingSession.getResults",
            "offset": [2258, 2284],
            "op": "SWAP1",
            "path": "4"
        },
        "698": {
            "fn": "VotingSession.getResults",
            "offset": [2294, 2547],
            "op": "JUMPDEST",
            "path": "4"
        },
        "699": {
            "fn": "VotingSession.getResults",
            "offset": [2318, 2325],
            "op": "PUSH1",
            "path": "4",
            "value": "0x6"
        },
        "701": {
            "fn": "VotingSession.getResults",
            "offset": [2318, 2332],
            "op": "SLOAD",
            "path": "4"
        },
        "702": {
            "fn": "VotingSession.getResults",
            "offset": [2314, 2332],
            "op": "DUP2",
            "path": "4"
        },
        "703": {
            "fn": "VotingSession.getResults",
            "offset": [2314, 2332],
            "op": "LT",
            "path": "4"
        },
        "704": {
            "fn": "VotingSession.getResults",
            "offset": [2294, 2547],
            "op": "ISZERO",
            "path": "4"
        },
        "705": {
            "fn": "VotingSession.getResults",
            "offset": [2294, 2547],
            "op": "PUSH2",
            "path": "4",
            "value": "0x407"
        },
        "708": {
            "fn": "VotingSession.getResults",
            "offset": [2294, 2547],
            "op": "JUMPI",
            "path": "4"
        },
        "709": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "PUSH2",
            "path": "4",
            "statement": 2,
            "value": "0x3F3"
        },
        "712": {
            "fn": "VotingSession.getResults",
            "offset": [2387, 2394],
            "op": "DUP3",
            "path": "4"
        },
        "713": {
            "fn": "VotingSession.getResults",
            "offset": [2412, 2419],
            "op": "PUSH1",
            "path": "4",
            "value": "0x6"
        },
        "715": {
            "fn": "VotingSession.getResults",
            "offset": [2420, 2421],
            "op": "DUP4",
            "path": "4"
        },
        "716": {
            "fn": "VotingSession.getResults",
            "offset": [2412, 2422],
            "op": "DUP2",
            "path": "4"
        },
        "717": {
            "fn": "VotingSession.getResults",
            "offset": [2412, 2422],
            "op": "SLOAD",
            "path": "4"
        },
        "718": {
            "fn": "VotingSession.getResults",
            "offset": [2412, 2422],
            "op": "DUP2",
            "path": "4"
        },
        "719": {
            "fn": "VotingSession.getResults",
            "offset": [2412, 2422],
            "op": "LT",
            "path": "4"
        },
        "720": {
            "fn": "VotingSession.getResults",
            "offset": [2412, 2422],
            "op": "PUSH2",
            "path": "4",
            "value": "0x2DB"
        },
        "723": {
            "fn": "VotingSession.getResults",
            "offset": [2412, 2422],
            "op": "JUMPI",
            "path": "4"
        },
        "724": {
            "fn": "VotingSession.getResults",
            "offset": [2412, 2422],
            "op": "PUSH2",
            "path": "4",
            "value": "0x2DB"
        },
        "727": {
            "fn": "VotingSession.getResults",
            "offset": [2412, 2422],
            "op": "PUSH2",
            "path": "4",
            "value": "0xE99"
        },
        "730": {
            "fn": "VotingSession.getResults",
            "jump": "i",
            "offset": [2412, 2422],
            "op": "JUMP",
            "path": "4"
        },
        "731": {
            "fn": "VotingSession.getResults",
            "offset": [2412, 2422],
            "op": "JUMPDEST",
            "path": "4"
        },
        "732": {
            "fn": "VotingSession.getResults",
            "offset": [2412, 2422],
            "op": "SWAP1",
            "path": "4"
        },
        "733": {
            "fn": "VotingSession.getResults",
            "offset": [2412, 2422],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "735": {
            "fn": "VotingSession.getResults",
            "offset": [2412, 2422],
            "op": "MSTORE",
            "path": "4"
        },
        "736": {
            "fn": "VotingSession.getResults",
            "offset": [2412, 2422],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "738": {
            "fn": "VotingSession.getResults",
            "offset": [2412, 2422],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "740": {
            "fn": "VotingSession.getResults",
            "offset": [2412, 2422],
            "op": "KECCAK256",
            "path": "4"
        },
        "741": {
            "fn": "VotingSession.getResults",
            "offset": [2412, 2422],
            "op": "ADD",
            "path": "4"
        },
        "742": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "DUP1",
            "path": "4"
        },
        "743": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "SLOAD",
            "path": "4"
        },
        "744": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "PUSH2",
            "path": "4",
            "value": "0x2F0"
        },
        "747": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "SWAP1",
            "path": "4"
        },
        "748": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "PUSH2",
            "path": "4",
            "value": "0xEAF"
        },
        "751": {
            "fn": "VotingSession.getResults",
            "jump": "i",
            "offset": [2363, 2536],
            "op": "JUMP",
            "path": "4"
        },
        "752": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "JUMPDEST",
            "path": "4"
        },
        "753": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "DUP1",
            "path": "4"
        },
        "754": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "PUSH1",
            "path": "4",
            "value": "0x1F"
        },
        "756": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "ADD",
            "path": "4"
        },
        "757": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "759": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "DUP1",
            "path": "4"
        },
        "760": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "SWAP2",
            "path": "4"
        },
        "761": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "DIV",
            "path": "4"
        },
        "762": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "MUL",
            "path": "4"
        },
        "763": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "765": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "ADD",
            "path": "4"
        },
        "766": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "768": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "MLOAD",
            "path": "4"
        },
        "769": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "SWAP1",
            "path": "4"
        },
        "770": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "DUP2",
            "path": "4"
        },
        "771": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "ADD",
            "path": "4"
        },
        "772": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "774": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "MSTORE",
            "path": "4"
        },
        "775": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "DUP1",
            "path": "4"
        },
        "776": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "SWAP3",
            "path": "4"
        },
        "777": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "SWAP2",
            "path": "4"
        },
        "778": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "SWAP1",
            "path": "4"
        },
        "779": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "DUP2",
            "path": "4"
        },
        "780": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "DUP2",
            "path": "4"
        },
        "781": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "MSTORE",
            "path": "4"
        },
        "782": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "784": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "ADD",
            "path": "4"
        },
        "785": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "DUP3",
            "path": "4"
        },
        "786": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "DUP1",
            "path": "4"
        },
        "787": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "SLOAD",
            "path": "4"
        },
        "788": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "PUSH2",
            "path": "4",
            "value": "0x31C"
        },
        "791": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "SWAP1",
            "path": "4"
        },
        "792": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "PUSH2",
            "path": "4",
            "value": "0xEAF"
        },
        "795": {
            "fn": "VotingSession.getResults",
            "jump": "i",
            "offset": [2363, 2536],
            "op": "JUMP",
            "path": "4"
        },
        "796": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "JUMPDEST",
            "path": "4"
        },
        "797": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "DUP1",
            "path": "4"
        },
        "798": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "ISZERO",
            "path": "4"
        },
        "799": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "PUSH2",
            "path": "4",
            "value": "0x369"
        },
        "802": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "JUMPI",
            "path": "4"
        },
        "803": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "DUP1",
            "path": "4"
        },
        "804": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "PUSH1",
            "path": "4",
            "value": "0x1F"
        },
        "806": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "LT",
            "path": "4"
        },
        "807": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "PUSH2",
            "path": "4",
            "value": "0x33E"
        },
        "810": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "JUMPI",
            "path": "4"
        },
        "811": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "PUSH2",
            "path": "4",
            "value": "0x100"
        },
        "814": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "DUP1",
            "path": "4"
        },
        "815": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "DUP4",
            "path": "4"
        },
        "816": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "SLOAD",
            "path": "4"
        },
        "817": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "DIV",
            "path": "4"
        },
        "818": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "MUL",
            "path": "4"
        },
        "819": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "DUP4",
            "path": "4"
        },
        "820": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "MSTORE",
            "path": "4"
        },
        "821": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "SWAP2",
            "path": "4"
        },
        "822": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "824": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "ADD",
            "path": "4"
        },
        "825": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "SWAP2",
            "path": "4"
        },
        "826": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "PUSH2",
            "path": "4",
            "value": "0x369"
        },
        "829": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "JUMP",
            "path": "4"
        },
        "830": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "JUMPDEST",
            "path": "4"
        },
        "831": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "DUP3",
            "path": "4"
        },
        "832": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "ADD",
            "path": "4"
        },
        "833": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "SWAP2",
            "path": "4"
        },
        "834": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "SWAP1",
            "path": "4"
        },
        "835": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "837": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "MSTORE",
            "path": "4"
        },
        "838": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "840": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "842": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "KECCAK256",
            "path": "4"
        },
        "843": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "SWAP1",
            "path": "4"
        },
        "844": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "JUMPDEST",
            "path": "4"
        },
        "845": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "DUP2",
            "path": "4"
        },
        "846": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "SLOAD",
            "path": "4"
        },
        "847": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "DUP2",
            "path": "4"
        },
        "848": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "MSTORE",
            "path": "4"
        },
        "849": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "SWAP1",
            "path": "4"
        },
        "850": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "PUSH1",
            "path": "4",
            "value": "0x1"
        },
        "852": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "ADD",
            "path": "4"
        },
        "853": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "SWAP1",
            "path": "4"
        },
        "854": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "856": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "ADD",
            "path": "4"
        },
        "857": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "DUP1",
            "path": "4"
        },
        "858": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "DUP4",
            "path": "4"
        },
        "859": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "GT",
            "path": "4"
        },
        "860": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "PUSH2",
            "path": "4",
            "value": "0x34C"
        },
        "863": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "JUMPI",
            "path": "4"
        },
        "864": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "DUP3",
            "path": "4"
        },
        "865": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "SWAP1",
            "path": "4"
        },
        "866": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "SUB",
            "path": "4"
        },
        "867": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "PUSH1",
            "path": "4",
            "value": "0x1F"
        },
        "869": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "AND",
            "path": "4"
        },
        "870": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "DUP3",
            "path": "4"
        },
        "871": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "ADD",
            "path": "4"
        },
        "872": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "SWAP2",
            "path": "4"
        },
        "873": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "JUMPDEST",
            "path": "4"
        },
        "874": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "POP",
            "path": "4"
        },
        "875": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "POP",
            "path": "4"
        },
        "876": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "POP",
            "path": "4"
        },
        "877": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "POP",
            "path": "4"
        },
        "878": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "POP",
            "path": "4"
        },
        "879": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "881": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "MLOAD",
            "path": "4"
        },
        "882": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "DUP1",
            "path": "4"
        },
        "883": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "885": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "ADD",
            "path": "4"
        },
        "886": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "888": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "MSTORE",
            "path": "4"
        },
        "889": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "DUP1",
            "path": "4"
        },
        "890": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "892": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "DUP2",
            "path": "4"
        },
        "893": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "MSTORE",
            "path": "4"
        },
        "894": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "896": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "ADD",
            "path": "4"
        },
        "897": {
            "op": "PUSH4",
            "value": "0x101E9F1"
        },
        "902": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "904": {
            "op": "SHL"
        },
        "905": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "DUP2",
            "path": "4"
        },
        "906": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "MSTORE",
            "path": "4"
        },
        "907": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "POP",
            "path": "4"
        },
        "908": {
            "fn": "VotingSession.getResults",
            "offset": [2464, 2500],
            "op": "PUSH2",
            "path": "4",
            "value": "0x3D4"
        },
        "911": {
            "fn": "VotingSession.getResults",
            "offset": [2473, 2487],
            "op": "PUSH1",
            "path": "4",
            "value": "0x8"
        },
        "913": {
            "fn": "VotingSession.getResults",
            "offset": [2488, 2495],
            "op": "PUSH1",
            "path": "4",
            "value": "0x6"
        },
        "915": {
            "fn": "VotingSession.getResults",
            "offset": [2496, 2497],
            "op": "DUP8",
            "path": "4"
        },
        "916": {
            "fn": "VotingSession.getResults",
            "offset": [2488, 2498],
            "op": "DUP2",
            "path": "4"
        },
        "917": {
            "fn": "VotingSession.getResults",
            "offset": [2488, 2498],
            "op": "SLOAD",
            "path": "4"
        },
        "918": {
            "fn": "VotingSession.getResults",
            "offset": [2488, 2498],
            "op": "DUP2",
            "path": "4"
        },
        "919": {
            "fn": "VotingSession.getResults",
            "offset": [2488, 2498],
            "op": "LT",
            "path": "4"
        },
        "920": {
            "fn": "VotingSession.getResults",
            "offset": [2488, 2498],
            "op": "PUSH2",
            "path": "4",
            "value": "0x3A3"
        },
        "923": {
            "fn": "VotingSession.getResults",
            "offset": [2488, 2498],
            "op": "JUMPI",
            "path": "4"
        },
        "924": {
            "fn": "VotingSession.getResults",
            "offset": [2488, 2498],
            "op": "PUSH2",
            "path": "4",
            "value": "0x3A3"
        },
        "927": {
            "fn": "VotingSession.getResults",
            "offset": [2488, 2498],
            "op": "PUSH2",
            "path": "4",
            "value": "0xE99"
        },
        "930": {
            "fn": "VotingSession.getResults",
            "jump": "i",
            "offset": [2488, 2498],
            "op": "JUMP",
            "path": "4"
        },
        "931": {
            "fn": "VotingSession.getResults",
            "offset": [2488, 2498],
            "op": "JUMPDEST",
            "path": "4"
        },
        "932": {
            "fn": "VotingSession.getResults",
            "offset": [2488, 2498],
            "op": "SWAP1",
            "path": "4"
        },
        "933": {
            "fn": "VotingSession.getResults",
            "offset": [2488, 2498],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "935": {
            "fn": "VotingSession.getResults",
            "offset": [2488, 2498],
            "op": "MSTORE",
            "path": "4"
        },
        "936": {
            "fn": "VotingSession.getResults",
            "offset": [2488, 2498],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "938": {
            "fn": "VotingSession.getResults",
            "offset": [2488, 2498],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "940": {
            "fn": "VotingSession.getResults",
            "offset": [2488, 2498],
            "op": "KECCAK256",
            "path": "4"
        },
        "941": {
            "fn": "VotingSession.getResults",
            "offset": [2488, 2498],
            "op": "ADD",
            "path": "4"
        },
        "942": {
            "fn": "VotingSession.getResults",
            "offset": [2473, 2499],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "944": {
            "fn": "VotingSession.getResults",
            "offset": [2473, 2499],
            "op": "MLOAD",
            "path": "4"
        },
        "945": {
            "fn": "VotingSession.getResults",
            "offset": [2473, 2499],
            "op": "PUSH2",
            "path": "4",
            "value": "0x3BA"
        },
        "948": {
            "fn": "VotingSession.getResults",
            "offset": [2473, 2499],
            "op": "SWAP2",
            "path": "4"
        },
        "949": {
            "fn": "VotingSession.getResults",
            "offset": [2473, 2499],
            "op": "SWAP1",
            "path": "4"
        },
        "950": {
            "fn": "VotingSession.getResults",
            "offset": [2473, 2499],
            "op": "PUSH2",
            "path": "4",
            "value": "0xEE4"
        },
        "953": {
            "fn": "VotingSession.getResults",
            "jump": "i",
            "offset": [2473, 2499],
            "op": "JUMP",
            "path": "4"
        },
        "954": {
            "fn": "VotingSession.getResults",
            "offset": [2473, 2499],
            "op": "JUMPDEST",
            "path": "4"
        },
        "955": {
            "fn": "VotingSession.getResults",
            "offset": [2473, 2499],
            "op": "SWAP1",
            "path": "4"
        },
        "956": {
            "fn": "VotingSession.getResults",
            "offset": [2473, 2499],
            "op": "DUP2",
            "path": "4"
        },
        "957": {
            "fn": "VotingSession.getResults",
            "offset": [2473, 2499],
            "op": "MSTORE",
            "path": "4"
        },
        "958": {
            "fn": "VotingSession.getResults",
            "offset": [2473, 2499],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "960": {
            "fn": "VotingSession.getResults",
            "offset": [2473, 2499],
            "op": "MLOAD",
            "path": "4"
        },
        "961": {
            "fn": "VotingSession.getResults",
            "offset": [2473, 2499],
            "op": "SWAP1",
            "path": "4"
        },
        "962": {
            "fn": "VotingSession.getResults",
            "offset": [2473, 2499],
            "op": "DUP2",
            "path": "4"
        },
        "963": {
            "fn": "VotingSession.getResults",
            "offset": [2473, 2499],
            "op": "SWAP1",
            "path": "4"
        },
        "964": {
            "fn": "VotingSession.getResults",
            "offset": [2473, 2499],
            "op": "SUB",
            "path": "4"
        },
        "965": {
            "fn": "VotingSession.getResults",
            "offset": [2473, 2499],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "967": {
            "fn": "VotingSession.getResults",
            "offset": [2473, 2499],
            "op": "ADD",
            "path": "4"
        },
        "968": {
            "fn": "VotingSession.getResults",
            "offset": [2473, 2499],
            "op": "SWAP1",
            "path": "4"
        },
        "969": {
            "fn": "VotingSession.getResults",
            "offset": [2473, 2499],
            "op": "KECCAK256",
            "path": "4"
        },
        "970": {
            "fn": "VotingSession.getResults",
            "offset": [2473, 2499],
            "op": "SLOAD",
            "path": "4"
        },
        "971": {
            "fn": "VotingSession.getResults",
            "offset": [2473, 2499],
            "op": "PUSH3",
            "path": "4",
            "value": "0xFFFFFF"
        },
        "975": {
            "fn": "VotingSession.getResults",
            "offset": [2473, 2499],
            "op": "AND",
            "path": "4"
        },
        "976": {
            "fn": "VotingSession.getResults",
            "offset": [2464, 2472],
            "op": "PUSH2",
            "path": "4",
            "value": "0xA00"
        },
        "979": {
            "fn": "VotingSession.getResults",
            "jump": "i",
            "offset": [2464, 2500],
            "op": "JUMP",
            "path": "4"
        },
        "980": {
            "fn": "VotingSession.getResults",
            "offset": [2464, 2500],
            "op": "JUMPDEST",
            "path": "4"
        },
        "981": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "983": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "MLOAD",
            "path": "4"
        },
        "984": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "DUP1",
            "path": "4"
        },
        "985": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "987": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "ADD",
            "path": "4"
        },
        "988": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "990": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "MSTORE",
            "path": "4"
        },
        "991": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "DUP1",
            "path": "4"
        },
        "992": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "PUSH1",
            "path": "4",
            "value": "0x1"
        },
        "994": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "DUP2",
            "path": "4"
        },
        "995": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "MSTORE",
            "path": "4"
        },
        "996": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "998": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "ADD",
            "path": "4"
        },
        "999": {
            "op": "PUSH1",
            "value": "0x5"
        },
        "1001": {
            "op": "PUSH1",
            "value": "0xF9"
        },
        "1003": {
            "op": "SHL"
        },
        "1004": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "DUP2",
            "path": "4"
        },
        "1005": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "MSTORE",
            "path": "4"
        },
        "1006": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "POP",
            "path": "4"
        },
        "1007": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2369],
            "op": "PUSH2",
            "path": "4",
            "value": "0xB29"
        },
        "1010": {
            "fn": "VotingSession.getResults",
            "jump": "i",
            "offset": [2363, 2536],
            "op": "JUMP",
            "path": "4"
        },
        "1011": {
            "fn": "VotingSession.getResults",
            "offset": [2363, 2536],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1012": {
            "fn": "VotingSession.getResults",
            "offset": [2353, 2536],
            "op": "SWAP2",
            "path": "4"
        },
        "1013": {
            "op": "POP"
        },
        "1014": {
            "fn": "VotingSession.getResults",
            "offset": [2334, 2337],
            "op": "DUP1",
            "path": "4",
            "statement": 3
        },
        "1015": {
            "fn": "VotingSession.getResults",
            "offset": [2334, 2337],
            "op": "PUSH2",
            "path": "4",
            "value": "0x3FF"
        },
        "1018": {
            "fn": "VotingSession.getResults",
            "offset": [2334, 2337],
            "op": "DUP2",
            "path": "4"
        },
        "1019": {
            "fn": "VotingSession.getResults",
            "offset": [2334, 2337],
            "op": "PUSH2",
            "path": "4",
            "value": "0xF96"
        },
        "1022": {
            "fn": "VotingSession.getResults",
            "jump": "i",
            "offset": [2334, 2337],
            "op": "JUMP",
            "path": "4"
        },
        "1023": {
            "fn": "VotingSession.getResults",
            "offset": [2334, 2337],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1024": {
            "fn": "VotingSession.getResults",
            "offset": [2334, 2337],
            "op": "SWAP2",
            "path": "4"
        },
        "1025": {
            "fn": "VotingSession.getResults",
            "offset": [2334, 2337],
            "op": "POP",
            "path": "4"
        },
        "1026": {
            "fn": "VotingSession.getResults",
            "offset": [2334, 2337],
            "op": "POP",
            "path": "4"
        },
        "1027": {
            "fn": "VotingSession.getResults",
            "offset": [2294, 2547],
            "op": "PUSH2",
            "path": "4",
            "value": "0x2BA"
        },
        "1030": {
            "fn": "VotingSession.getResults",
            "offset": [2294, 2547],
            "op": "JUMP",
            "path": "4"
        },
        "1031": {
            "fn": "VotingSession.getResults",
            "offset": [2294, 2547],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1032": {
            "op": "POP"
        },
        "1033": {
            "fn": "VotingSession.getResults",
            "offset": [2564, 2571],
            "op": "SWAP2",
            "path": "4",
            "statement": 4
        },
        "1034": {
            "fn": "VotingSession.getResults",
            "offset": [2190, 2578],
            "op": "SWAP1",
            "path": "4"
        },
        "1035": {
            "op": "POP"
        },
        "1036": {
            "fn": "VotingSession.getResults",
            "jump": "o",
            "offset": [2190, 2578],
            "op": "JUMP",
            "path": "4"
        },
        "1037": {
            "fn": "VotingSession.addChoice",
            "offset": [1690, 2084],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1038": {
            "fn": "Ownable.owner",
            "offset": [1019, 1026],
            "op": "PUSH1",
            "path": "0",
            "value": "0x0"
        },
        "1040": {
            "fn": "Ownable.owner",
            "offset": [1045, 1051],
            "op": "SLOAD",
            "path": "0"
        },
        "1041": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1043": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1045": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "1047": {
            "op": "SHL"
        },
        "1048": {
            "op": "SUB"
        },
        "1049": {
            "fn": "Ownable.owner",
            "offset": [1045, 1051],
            "op": "AND",
            "path": "0"
        },
        "1050": {
            "fn": "Context._msgSender",
            "offset": [665, 675],
            "op": "CALLER",
            "path": "2",
            "statement": 5
        },
        "1051": {
            "offset": [1185, 1208],
            "op": "EQ",
            "path": "0"
        },
        "1052": {
            "offset": [1177, 1245],
            "op": "PUSH2",
            "path": "0",
            "value": "0x440"
        },
        "1055": {
            "offset": [1177, 1245],
            "op": "JUMPI",
            "path": "0"
        },
        "1056": {
            "fn": "Context._msgSender",
            "offset": [1177, 1245],
            "op": "PUSH1",
            "path": "0",
            "value": "0x40"
        },
        "1058": {
            "fn": "Context._msgSender",
            "offset": [1177, 1245],
            "op": "MLOAD",
            "path": "0"
        },
        "1059": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "1063": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "1065": {
            "op": "SHL"
        },
        "1066": {
            "offset": [1177, 1245],
            "op": "DUP2",
            "path": "0"
        },
        "1067": {
            "fn": "Context._msgSender",
            "offset": [1177, 1245],
            "op": "MSTORE",
            "path": "0"
        },
        "1068": {
            "fn": "Context._msgSender",
            "offset": [1177, 1245],
            "op": "PUSH1",
            "path": "0",
            "value": "0x4"
        },
        "1070": {
            "fn": "Context._msgSender",
            "offset": [1177, 1245],
            "op": "ADD",
            "path": "0"
        },
        "1071": {
            "fn": "Context._msgSender",
            "offset": [1177, 1245],
            "op": "PUSH2",
            "path": "0",
            "value": "0x437"
        },
        "1074": {
            "fn": "Context._msgSender",
            "offset": [1177, 1245],
            "op": "SWAP1",
            "path": "0"
        },
        "1075": {
            "fn": "Context._msgSender",
            "offset": [1177, 1245],
            "op": "PUSH2",
            "path": "0",
            "value": "0xFB1"
        },
        "1078": {
            "fn": "Context._msgSender",
            "jump": "i",
            "offset": [1177, 1245],
            "op": "JUMP",
            "path": "0"
        },
        "1079": {
            "fn": "Context._msgSender",
            "offset": [1177, 1245],
            "op": "JUMPDEST",
            "path": "0"
        },
        "1080": {
            "fn": "Context._msgSender",
            "offset": [1177, 1245],
            "op": "PUSH1",
            "path": "0",
            "value": "0x40"
        },
        "1082": {
            "fn": "Context._msgSender",
            "offset": [1177, 1245],
            "op": "MLOAD",
            "path": "0"
        },
        "1083": {
            "fn": "Context._msgSender",
            "offset": [1177, 1245],
            "op": "DUP1",
            "path": "0"
        },
        "1084": {
            "fn": "Context._msgSender",
            "offset": [1177, 1245],
            "op": "SWAP2",
            "path": "0"
        },
        "1085": {
            "fn": "Context._msgSender",
            "offset": [1177, 1245],
            "op": "SUB",
            "path": "0"
        },
        "1086": {
            "fn": "Context._msgSender",
            "offset": [1177, 1245],
            "op": "SWAP1",
            "path": "0"
        },
        "1087": {
            "fn": "Context._msgSender",
            "offset": [1177, 1245],
            "op": "REVERT",
            "optimizer_revert": true,
            "path": "0"
        },
        "1088": {
            "fn": "Context._msgSender",
            "offset": [1177, 1245],
            "op": "JUMPDEST",
            "path": "0"
        },
        "1089": {
            "fn": "VotingSession.addChoice",
            "offset": [1784, 1787],
            "op": "PUSH1",
            "path": "4",
            "statement": 6,
            "value": "0x3"
        },
        "1091": {
            "fn": "VotingSession.addChoice",
            "offset": [1784, 1787],
            "op": "SLOAD",
            "path": "4"
        },
        "1092": {
            "fn": "VotingSession.addChoice",
            "offset": [1766, 1781],
            "op": "TIMESTAMP",
            "path": "4"
        },
        "1093": {
            "branch": 31,
            "fn": "VotingSession.addChoice",
            "offset": [1766, 1787],
            "op": "LT",
            "path": "4"
        },
        "1094": {
            "fn": "VotingSession.addChoice",
            "offset": [1758, 1826],
            "op": "PUSH2",
            "path": "4",
            "value": "0x461"
        },
        "1097": {
            "branch": 31,
            "fn": "VotingSession.addChoice",
            "offset": [1758, 1826],
            "op": "JUMPI",
            "path": "4"
        },
        "1098": {
            "fn": "VotingSession.addChoice",
            "offset": [1758, 1826],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "1100": {
            "fn": "VotingSession.addChoice",
            "offset": [1758, 1826],
            "op": "MLOAD",
            "path": "4"
        },
        "1101": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "1105": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "1107": {
            "op": "SHL"
        },
        "1108": {
            "fn": "VotingSession.addChoice",
            "offset": [1758, 1826],
            "op": "DUP2",
            "path": "4"
        },
        "1109": {
            "fn": "VotingSession.addChoice",
            "offset": [1758, 1826],
            "op": "MSTORE",
            "path": "4"
        },
        "1110": {
            "fn": "VotingSession.addChoice",
            "offset": [1758, 1826],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "1112": {
            "fn": "VotingSession.addChoice",
            "offset": [1758, 1826],
            "op": "ADD",
            "path": "4"
        },
        "1113": {
            "fn": "VotingSession.addChoice",
            "offset": [1758, 1826],
            "op": "PUSH2",
            "path": "4",
            "value": "0x437"
        },
        "1116": {
            "fn": "VotingSession.addChoice",
            "offset": [1758, 1826],
            "op": "SWAP1",
            "path": "4"
        },
        "1117": {
            "fn": "VotingSession.addChoice",
            "offset": [1758, 1826],
            "op": "PUSH2",
            "path": "4",
            "value": "0xFE6"
        },
        "1120": {
            "fn": "VotingSession.addChoice",
            "jump": "i",
            "offset": [1758, 1826],
            "op": "JUMP",
            "path": "4"
        },
        "1121": {
            "fn": "VotingSession.addChoice",
            "offset": [1758, 1826],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1122": {
            "fn": "VotingSession.addChoice",
            "offset": [1875, 1880],
            "op": "PUSH1",
            "path": "4",
            "statement": 7,
            "value": "0x2"
        },
        "1124": {
            "fn": "VotingSession.addChoice",
            "offset": [1875, 1880],
            "op": "SLOAD",
            "path": "4"
        },
        "1125": {
            "fn": "VotingSession.addChoice",
            "offset": [1857, 1872],
            "op": "TIMESTAMP",
            "path": "4"
        },
        "1126": {
            "branch": 32,
            "fn": "VotingSession.addChoice",
            "offset": [1857, 1880],
            "op": "LT",
            "path": "4"
        },
        "1127": {
            "fn": "VotingSession.addChoice",
            "offset": [1836, 1942],
            "op": "PUSH2",
            "path": "4",
            "value": "0x4BE"
        },
        "1130": {
            "branch": 32,
            "fn": "VotingSession.addChoice",
            "offset": [1836, 1942],
            "op": "JUMPI",
            "path": "4"
        },
        "1131": {
            "fn": "VotingSession.addChoice",
            "offset": [1836, 1942],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "1133": {
            "fn": "VotingSession.addChoice",
            "offset": [1836, 1942],
            "op": "MLOAD",
            "path": "4"
        },
        "1134": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "1138": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "1140": {
            "op": "SHL"
        },
        "1141": {
            "fn": "VotingSession.addChoice",
            "offset": [1836, 1942],
            "op": "DUP2",
            "path": "4"
        },
        "1142": {
            "fn": "VotingSession.addChoice",
            "offset": [1836, 1942],
            "op": "MSTORE",
            "path": "4"
        },
        "1143": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "1145": {
            "fn": "VotingSession.addChoice",
            "offset": [1836, 1942],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "1147": {
            "fn": "VotingSession.addChoice",
            "offset": [1836, 1942],
            "op": "DUP3",
            "path": "4"
        },
        "1148": {
            "fn": "VotingSession.addChoice",
            "offset": [1836, 1942],
            "op": "ADD",
            "path": "4"
        },
        "1149": {
            "op": "MSTORE"
        },
        "1150": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "1152": {
            "op": "DUP1"
        },
        "1153": {
            "op": "DUP3"
        },
        "1154": {
            "op": "ADD"
        },
        "1155": {
            "op": "MSTORE"
        },
        "1156": {
            "op": "PUSH32",
            "value": "0x5468697320766F74696E672073657373696F6E20616C72656164792073746172"
        },
        "1189": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "1191": {
            "op": "DUP3"
        },
        "1192": {
            "op": "ADD"
        },
        "1193": {
            "op": "MSTORE"
        },
        "1194": {
            "op": "PUSH4",
            "value": "0x3A32B217"
        },
        "1199": {
            "op": "PUSH1",
            "value": "0xE1"
        },
        "1201": {
            "op": "SHL"
        },
        "1202": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "1204": {
            "op": "DUP3"
        },
        "1205": {
            "op": "ADD"
        },
        "1206": {
            "op": "MSTORE"
        },
        "1207": {
            "op": "PUSH1",
            "value": "0x84"
        },
        "1209": {
            "op": "ADD"
        },
        "1210": {
            "fn": "VotingSession.addChoice",
            "offset": [1836, 1942],
            "op": "PUSH2",
            "path": "4",
            "value": "0x437"
        },
        "1213": {
            "op": "JUMP"
        },
        "1214": {
            "fn": "VotingSession.addChoice",
            "offset": [1836, 1942],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1215": {
            "fn": "VotingSession.addChoice",
            "offset": [1961, 1971],
            "op": "PUSH1",
            "path": "4",
            "statement": 8,
            "value": "0x7"
        },
        "1217": {
            "fn": "VotingSession.addChoice",
            "offset": [1972, 1978],
            "op": "DUP2",
            "path": "4"
        },
        "1218": {
            "fn": "VotingSession.addChoice",
            "offset": [1961, 1979],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "1220": {
            "fn": "VotingSession.addChoice",
            "offset": [1961, 1979],
            "op": "MLOAD",
            "path": "4"
        },
        "1221": {
            "fn": "VotingSession.addChoice",
            "offset": [1961, 1979],
            "op": "PUSH2",
            "path": "4",
            "value": "0x4CE"
        },
        "1224": {
            "fn": "VotingSession.addChoice",
            "offset": [1961, 1979],
            "op": "SWAP2",
            "path": "4"
        },
        "1225": {
            "fn": "VotingSession.addChoice",
            "offset": [1961, 1979],
            "op": "SWAP1",
            "path": "4"
        },
        "1226": {
            "fn": "VotingSession.addChoice",
            "offset": [1961, 1979],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1028"
        },
        "1229": {
            "fn": "VotingSession.addChoice",
            "jump": "i",
            "offset": [1961, 1979],
            "op": "JUMP",
            "path": "4"
        },
        "1230": {
            "fn": "VotingSession.addChoice",
            "offset": [1961, 1979],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1231": {
            "fn": "VotingSession.addChoice",
            "offset": [1961, 1979],
            "op": "SWAP1",
            "path": "4"
        },
        "1232": {
            "fn": "VotingSession.addChoice",
            "offset": [1961, 1979],
            "op": "DUP2",
            "path": "4"
        },
        "1233": {
            "fn": "VotingSession.addChoice",
            "offset": [1961, 1979],
            "op": "MSTORE",
            "path": "4"
        },
        "1234": {
            "fn": "VotingSession.addChoice",
            "offset": [1961, 1979],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "1236": {
            "fn": "VotingSession.addChoice",
            "offset": [1961, 1979],
            "op": "MLOAD",
            "path": "4"
        },
        "1237": {
            "fn": "VotingSession.addChoice",
            "offset": [1961, 1979],
            "op": "SWAP1",
            "path": "4"
        },
        "1238": {
            "fn": "VotingSession.addChoice",
            "offset": [1961, 1979],
            "op": "DUP2",
            "path": "4"
        },
        "1239": {
            "fn": "VotingSession.addChoice",
            "offset": [1961, 1979],
            "op": "SWAP1",
            "path": "4"
        },
        "1240": {
            "fn": "VotingSession.addChoice",
            "offset": [1961, 1979],
            "op": "SUB",
            "path": "4"
        },
        "1241": {
            "fn": "VotingSession.addChoice",
            "offset": [1961, 1979],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "1243": {
            "fn": "VotingSession.addChoice",
            "offset": [1961, 1979],
            "op": "ADD",
            "path": "4"
        },
        "1244": {
            "fn": "VotingSession.addChoice",
            "offset": [1961, 1979],
            "op": "SWAP1",
            "path": "4"
        },
        "1245": {
            "fn": "VotingSession.addChoice",
            "offset": [1961, 1979],
            "op": "KECCAK256",
            "path": "4"
        },
        "1246": {
            "fn": "VotingSession.addChoice",
            "offset": [1961, 1979],
            "op": "SLOAD",
            "path": "4"
        },
        "1247": {
            "fn": "VotingSession.addChoice",
            "offset": [1961, 1979],
            "op": "PUSH1",
            "path": "4",
            "value": "0xFF"
        },
        "1249": {
            "fn": "VotingSession.addChoice",
            "offset": [1961, 1979],
            "op": "AND",
            "path": "4"
        },
        "1250": {
            "branch": 33,
            "fn": "VotingSession.addChoice",
            "offset": [1960, 1979],
            "op": "ISZERO",
            "path": "4"
        },
        "1251": {
            "fn": "VotingSession.addChoice",
            "offset": [1952, 2011],
            "op": "PUSH2",
            "path": "4",
            "value": "0x52E"
        },
        "1254": {
            "branch": 33,
            "fn": "VotingSession.addChoice",
            "offset": [1952, 2011],
            "op": "JUMPI",
            "path": "4"
        },
        "1255": {
            "fn": "VotingSession.addChoice",
            "offset": [1952, 2011],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "1257": {
            "fn": "VotingSession.addChoice",
            "offset": [1952, 2011],
            "op": "MLOAD",
            "path": "4"
        },
        "1258": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "1262": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "1264": {
            "op": "SHL"
        },
        "1265": {
            "fn": "VotingSession.addChoice",
            "offset": [1952, 2011],
            "op": "DUP2",
            "path": "4"
        },
        "1266": {
            "fn": "VotingSession.addChoice",
            "offset": [1952, 2011],
            "op": "MSTORE",
            "path": "4"
        },
        "1267": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "1269": {
            "fn": "VotingSession.addChoice",
            "offset": [1952, 2011],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "1271": {
            "fn": "VotingSession.addChoice",
            "offset": [1952, 2011],
            "op": "DUP3",
            "path": "4"
        },
        "1272": {
            "fn": "VotingSession.addChoice",
            "offset": [1952, 2011],
            "op": "ADD",
            "path": "4"
        },
        "1273": {
            "op": "MSTORE"
        },
        "1274": {
            "op": "PUSH1",
            "value": "0x1B"
        },
        "1276": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "1278": {
            "op": "DUP3"
        },
        "1279": {
            "op": "ADD"
        },
        "1280": {
            "op": "MSTORE"
        },
        "1281": {
            "op": "PUSH32",
            "value": "0x546869732063686F69636520616C7265616479206578697374732E0000000000"
        },
        "1314": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "1316": {
            "op": "DUP3"
        },
        "1317": {
            "op": "ADD"
        },
        "1318": {
            "op": "MSTORE"
        },
        "1319": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "1321": {
            "op": "ADD"
        },
        "1322": {
            "fn": "VotingSession.addChoice",
            "offset": [1952, 2011],
            "op": "PUSH2",
            "path": "4",
            "value": "0x437"
        },
        "1325": {
            "op": "JUMP"
        },
        "1326": {
            "fn": "VotingSession.addChoice",
            "offset": [1952, 2011],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1327": {
            "fn": "VotingSession.addChoice",
            "offset": [2022, 2029],
            "op": "PUSH1",
            "path": "4",
            "statement": 9,
            "value": "0x6"
        },
        "1329": {
            "fn": "VotingSession.addChoice",
            "offset": [2022, 2042],
            "op": "DUP1",
            "path": "4"
        },
        "1330": {
            "fn": "VotingSession.addChoice",
            "offset": [2022, 2042],
            "op": "SLOAD",
            "path": "4"
        },
        "1331": {
            "fn": "VotingSession.addChoice",
            "offset": [2022, 2042],
            "op": "PUSH1",
            "path": "4",
            "value": "0x1"
        },
        "1333": {
            "fn": "VotingSession.addChoice",
            "offset": [2022, 2042],
            "op": "DUP2",
            "path": "4"
        },
        "1334": {
            "fn": "VotingSession.addChoice",
            "offset": [2022, 2042],
            "op": "ADD",
            "path": "4"
        },
        "1335": {
            "fn": "VotingSession.addChoice",
            "offset": [2022, 2042],
            "op": "DUP3",
            "path": "4"
        },
        "1336": {
            "fn": "VotingSession.addChoice",
            "offset": [2022, 2042],
            "op": "SSTORE",
            "path": "4"
        },
        "1337": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "1339": {
            "fn": "VotingSession.addChoice",
            "offset": [2022, 2042],
            "op": "SWAP2",
            "path": "4"
        },
        "1340": {
            "fn": "VotingSession.addChoice",
            "offset": [2022, 2042],
            "op": "SWAP1",
            "path": "4"
        },
        "1341": {
            "fn": "VotingSession.addChoice",
            "offset": [2022, 2042],
            "op": "SWAP2",
            "path": "4"
        },
        "1342": {
            "fn": "VotingSession.addChoice",
            "offset": [2022, 2042],
            "op": "MSTORE",
            "path": "4"
        },
        "1343": {
            "fn": "VotingSession.addChoice",
            "offset": [2022, 2042],
            "op": "DUP2",
            "path": "4"
        },
        "1344": {
            "fn": "VotingSession.addChoice",
            "offset": [2022, 2042],
            "op": "MLOAD",
            "path": "4"
        },
        "1345": {
            "fn": "VotingSession.addChoice",
            "offset": [2022, 2042],
            "op": "PUSH2",
            "path": "4",
            "value": "0x571"
        },
        "1348": {
            "fn": "VotingSession.addChoice",
            "offset": [2022, 2042],
            "op": "SWAP2",
            "path": "4"
        },
        "1349": {
            "fn": "VotingSession.addChoice",
            "offset": [2022, 2042],
            "op": "PUSH32",
            "path": "4",
            "value": "0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
        },
        "1382": {
            "fn": "VotingSession.addChoice",
            "offset": [2022, 2042],
            "op": "ADD",
            "path": "4"
        },
        "1383": {
            "fn": "VotingSession.addChoice",
            "offset": [2022, 2042],
            "op": "SWAP1",
            "path": "4"
        },
        "1384": {
            "fn": "VotingSession.addChoice",
            "offset": [2022, 2042],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "1386": {
            "fn": "VotingSession.addChoice",
            "offset": [2022, 2042],
            "op": "DUP5",
            "path": "4"
        },
        "1387": {
            "fn": "VotingSession.addChoice",
            "offset": [2022, 2042],
            "op": "ADD",
            "path": "4"
        },
        "1388": {
            "fn": "VotingSession.addChoice",
            "offset": [2022, 2042],
            "op": "SWAP1",
            "path": "4"
        },
        "1389": {
            "fn": "VotingSession.addChoice",
            "offset": [2022, 2042],
            "op": "PUSH2",
            "path": "4",
            "value": "0xBAE"
        },
        "1392": {
            "fn": "VotingSession.addChoice",
            "jump": "i",
            "offset": [2022, 2042],
            "op": "JUMP",
            "path": "4"
        },
        "1393": {
            "fn": "VotingSession.addChoice",
            "offset": [2022, 2042],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1394": {
            "fn": "VotingSession.addChoice",
            "offset": [2022, 2042],
            "op": "POP",
            "path": "4"
        },
        "1395": {
            "fn": "VotingSession.addChoice",
            "offset": [2073, 2077],
            "op": "PUSH1",
            "path": "4",
            "statement": 10,
            "value": "0x1"
        },
        "1397": {
            "fn": "VotingSession.addChoice",
            "offset": [2052, 2062],
            "op": "PUSH1",
            "path": "4",
            "value": "0x7"
        },
        "1399": {
            "fn": "VotingSession.addChoice",
            "offset": [2063, 2069],
            "op": "DUP3",
            "path": "4"
        },
        "1400": {
            "fn": "VotingSession.addChoice",
            "offset": [2052, 2070],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "1402": {
            "fn": "VotingSession.addChoice",
            "offset": [2052, 2070],
            "op": "MLOAD",
            "path": "4"
        },
        "1403": {
            "fn": "VotingSession.addChoice",
            "offset": [2052, 2070],
            "op": "PUSH2",
            "path": "4",
            "value": "0x584"
        },
        "1406": {
            "fn": "VotingSession.addChoice",
            "offset": [2052, 2070],
            "op": "SWAP2",
            "path": "4"
        },
        "1407": {
            "fn": "VotingSession.addChoice",
            "offset": [2052, 2070],
            "op": "SWAP1",
            "path": "4"
        },
        "1408": {
            "fn": "VotingSession.addChoice",
            "offset": [2052, 2070],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1028"
        },
        "1411": {
            "fn": "VotingSession.addChoice",
            "jump": "i",
            "offset": [2052, 2070],
            "op": "JUMP",
            "path": "4"
        },
        "1412": {
            "fn": "VotingSession.addChoice",
            "offset": [2052, 2070],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1413": {
            "fn": "VotingSession.addChoice",
            "offset": [2052, 2070],
            "op": "SWAP1",
            "path": "4"
        },
        "1414": {
            "fn": "VotingSession.addChoice",
            "offset": [2052, 2070],
            "op": "DUP2",
            "path": "4"
        },
        "1415": {
            "fn": "VotingSession.addChoice",
            "offset": [2052, 2070],
            "op": "MSTORE",
            "path": "4"
        },
        "1416": {
            "fn": "VotingSession.addChoice",
            "offset": [2052, 2070],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "1418": {
            "fn": "VotingSession.addChoice",
            "offset": [2052, 2070],
            "op": "MLOAD",
            "path": "4"
        },
        "1419": {
            "fn": "VotingSession.addChoice",
            "offset": [2052, 2070],
            "op": "SWAP1",
            "path": "4"
        },
        "1420": {
            "fn": "VotingSession.addChoice",
            "offset": [2052, 2070],
            "op": "DUP2",
            "path": "4"
        },
        "1421": {
            "fn": "VotingSession.addChoice",
            "offset": [2052, 2070],
            "op": "SWAP1",
            "path": "4"
        },
        "1422": {
            "fn": "VotingSession.addChoice",
            "offset": [2052, 2070],
            "op": "SUB",
            "path": "4"
        },
        "1423": {
            "fn": "VotingSession.addChoice",
            "offset": [2052, 2070],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "1425": {
            "fn": "VotingSession.addChoice",
            "offset": [2052, 2070],
            "op": "ADD",
            "path": "4"
        },
        "1426": {
            "fn": "VotingSession.addChoice",
            "offset": [2052, 2070],
            "op": "SWAP1",
            "path": "4"
        },
        "1427": {
            "fn": "VotingSession.addChoice",
            "offset": [2052, 2070],
            "op": "KECCAK256",
            "path": "4"
        },
        "1428": {
            "fn": "VotingSession.addChoice",
            "offset": [2052, 2077],
            "op": "DUP1",
            "path": "4"
        },
        "1429": {
            "fn": "VotingSession.addChoice",
            "offset": [2052, 2077],
            "op": "SLOAD",
            "path": "4"
        },
        "1430": {
            "fn": "VotingSession.addChoice",
            "offset": [2052, 2077],
            "op": "SWAP2",
            "path": "4"
        },
        "1431": {
            "fn": "VotingSession.addChoice",
            "offset": [2052, 2077],
            "op": "ISZERO",
            "path": "4"
        },
        "1432": {
            "fn": "VotingSession.addChoice",
            "offset": [2052, 2077],
            "op": "ISZERO",
            "path": "4"
        },
        "1433": {
            "op": "PUSH1",
            "value": "0xFF"
        },
        "1435": {
            "op": "NOT"
        },
        "1436": {
            "fn": "VotingSession.addChoice",
            "offset": [2052, 2077],
            "op": "SWAP1",
            "path": "4"
        },
        "1437": {
            "fn": "VotingSession.addChoice",
            "offset": [2052, 2077],
            "op": "SWAP3",
            "path": "4"
        },
        "1438": {
            "fn": "VotingSession.addChoice",
            "offset": [2052, 2077],
            "op": "AND",
            "path": "4"
        },
        "1439": {
            "fn": "VotingSession.addChoice",
            "offset": [2052, 2077],
            "op": "SWAP2",
            "path": "4"
        },
        "1440": {
            "fn": "VotingSession.addChoice",
            "offset": [2052, 2077],
            "op": "SWAP1",
            "path": "4"
        },
        "1441": {
            "fn": "VotingSession.addChoice",
            "offset": [2052, 2077],
            "op": "SWAP2",
            "path": "4"
        },
        "1442": {
            "fn": "VotingSession.addChoice",
            "offset": [2052, 2077],
            "op": "OR",
            "path": "4"
        },
        "1443": {
            "fn": "VotingSession.addChoice",
            "offset": [2052, 2077],
            "op": "SWAP1",
            "path": "4"
        },
        "1444": {
            "fn": "VotingSession.addChoice",
            "offset": [2052, 2077],
            "op": "SSTORE",
            "path": "4"
        },
        "1445": {
            "op": "POP"
        },
        "1446": {
            "fn": "VotingSession.addChoice",
            "jump": "o",
            "offset": [1690, 2084],
            "op": "JUMP",
            "path": "4"
        },
        "1447": {
            "fn": "Ownable.renounceOwnership",
            "offset": [1605, 1697],
            "op": "JUMPDEST",
            "path": "0"
        },
        "1448": {
            "fn": "Ownable.owner",
            "offset": [1019, 1026],
            "op": "PUSH1",
            "path": "0",
            "value": "0x0"
        },
        "1450": {
            "fn": "Ownable.owner",
            "offset": [1045, 1051],
            "op": "SLOAD",
            "path": "0"
        },
        "1451": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1453": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1455": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "1457": {
            "op": "SHL"
        },
        "1458": {
            "op": "SUB"
        },
        "1459": {
            "fn": "Ownable.owner",
            "offset": [1045, 1051],
            "op": "AND",
            "path": "0"
        },
        "1460": {
            "fn": "Context._msgSender",
            "offset": [665, 675],
            "op": "CALLER",
            "path": "2"
        },
        "1461": {
            "offset": [1185, 1208],
            "op": "EQ",
            "path": "0"
        },
        "1462": {
            "offset": [1177, 1245],
            "op": "PUSH2",
            "path": "0",
            "value": "0x5D1"
        },
        "1465": {
            "offset": [1177, 1245],
            "op": "JUMPI",
            "path": "0"
        },
        "1466": {
            "fn": "Context._msgSender",
            "offset": [1177, 1245],
            "op": "PUSH1",
            "path": "0",
            "value": "0x40"
        },
        "1468": {
            "fn": "Context._msgSender",
            "offset": [1177, 1245],
            "op": "MLOAD",
            "path": "0"
        },
        "1469": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "1473": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "1475": {
            "op": "SHL"
        },
        "1476": {
            "offset": [1177, 1245],
            "op": "DUP2",
            "path": "0"
        },
        "1477": {
            "fn": "Context._msgSender",
            "offset": [1177, 1245],
            "op": "MSTORE",
            "path": "0"
        },
        "1478": {
            "fn": "Context._msgSender",
            "offset": [1177, 1245],
            "op": "PUSH1",
            "path": "0",
            "value": "0x4"
        },
        "1480": {
            "fn": "Context._msgSender",
            "offset": [1177, 1245],
            "op": "ADD",
            "path": "0"
        },
        "1481": {
            "fn": "Context._msgSender",
            "offset": [1177, 1245],
            "op": "PUSH2",
            "path": "0",
            "value": "0x437"
        },
        "1484": {
            "fn": "Context._msgSender",
            "offset": [1177, 1245],
            "op": "SWAP1",
            "path": "0"
        },
        "1485": {
            "fn": "Context._msgSender",
            "offset": [1177, 1245],
            "op": "PUSH2",
            "path": "0",
            "value": "0xFB1"
        },
        "1488": {
            "fn": "Context._msgSender",
            "jump": "i",
            "offset": [1177, 1245],
            "op": "JUMP",
            "path": "0"
        },
        "1489": {
            "fn": "Context._msgSender",
            "offset": [1177, 1245],
            "op": "JUMPDEST",
            "path": "0"
        },
        "1490": {
            "fn": "Ownable.renounceOwnership",
            "offset": [1669, 1690],
            "op": "PUSH2",
            "path": "0",
            "statement": 11,
            "value": "0x5DB"
        },
        "1493": {
            "fn": "Ownable.renounceOwnership",
            "offset": [1687, 1688],
            "op": "PUSH1",
            "path": "0",
            "value": "0x0"
        },
        "1495": {
            "fn": "Ownable.renounceOwnership",
            "offset": [1669, 1678],
            "op": "PUSH2",
            "path": "0",
            "value": "0xB5E"
        },
        "1498": {
            "fn": "Ownable.renounceOwnership",
            "jump": "i",
            "offset": [1669, 1690],
            "op": "JUMP",
            "path": "0"
        },
        "1499": {
            "fn": "Ownable.renounceOwnership",
            "offset": [1669, 1690],
            "op": "JUMPDEST",
            "path": "0"
        },
        "1500": {
            "fn": "Ownable.renounceOwnership",
            "jump": "o",
            "offset": [1605, 1697],
            "op": "JUMP",
            "path": "0"
        },
        "1501": {
            "fn": "VotingSession.vote",
            "offset": [1107, 1684],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1502": {
            "fn": "VotingSession.vote",
            "offset": [1207, 1210],
            "op": "PUSH1",
            "path": "4",
            "statement": 12,
            "value": "0x3"
        },
        "1504": {
            "fn": "VotingSession.vote",
            "offset": [1207, 1210],
            "op": "SLOAD",
            "path": "4"
        },
        "1505": {
            "fn": "VotingSession.vote",
            "offset": [1189, 1204],
            "op": "TIMESTAMP",
            "path": "4"
        },
        "1506": {
            "branch": 34,
            "fn": "VotingSession.vote",
            "offset": [1189, 1210],
            "op": "LT",
            "path": "4"
        },
        "1507": {
            "fn": "VotingSession.vote",
            "offset": [1181, 1249],
            "op": "PUSH2",
            "path": "4",
            "value": "0x5FE"
        },
        "1510": {
            "branch": 34,
            "fn": "VotingSession.vote",
            "offset": [1181, 1249],
            "op": "JUMPI",
            "path": "4"
        },
        "1511": {
            "fn": "VotingSession.vote",
            "offset": [1181, 1249],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "1513": {
            "fn": "VotingSession.vote",
            "offset": [1181, 1249],
            "op": "MLOAD",
            "path": "4"
        },
        "1514": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "1518": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "1520": {
            "op": "SHL"
        },
        "1521": {
            "fn": "VotingSession.vote",
            "offset": [1181, 1249],
            "op": "DUP2",
            "path": "4"
        },
        "1522": {
            "fn": "VotingSession.vote",
            "offset": [1181, 1249],
            "op": "MSTORE",
            "path": "4"
        },
        "1523": {
            "fn": "VotingSession.vote",
            "offset": [1181, 1249],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "1525": {
            "fn": "VotingSession.vote",
            "offset": [1181, 1249],
            "op": "ADD",
            "path": "4"
        },
        "1526": {
            "fn": "VotingSession.vote",
            "offset": [1181, 1249],
            "op": "PUSH2",
            "path": "4",
            "value": "0x437"
        },
        "1529": {
            "fn": "VotingSession.vote",
            "offset": [1181, 1249],
            "op": "SWAP1",
            "path": "4"
        },
        "1530": {
            "fn": "VotingSession.vote",
            "offset": [1181, 1249],
            "op": "PUSH2",
            "path": "4",
            "value": "0xFE6"
        },
        "1533": {
            "fn": "VotingSession.vote",
            "jump": "i",
            "offset": [1181, 1249],
            "op": "JUMP",
            "path": "4"
        },
        "1534": {
            "fn": "VotingSession.vote",
            "offset": [1181, 1249],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1535": {
            "fn": "VotingSession.vote",
            "offset": [1299, 1304],
            "op": "PUSH1",
            "path": "4",
            "statement": 13,
            "value": "0x2"
        },
        "1537": {
            "fn": "VotingSession.vote",
            "offset": [1299, 1304],
            "op": "SLOAD",
            "path": "4"
        },
        "1538": {
            "fn": "VotingSession.vote",
            "offset": [1280, 1295],
            "op": "TIMESTAMP",
            "path": "4"
        },
        "1539": {
            "fn": "VotingSession.vote",
            "offset": [1280, 1304],
            "op": "LT",
            "path": "4"
        },
        "1540": {
            "branch": 35,
            "fn": "VotingSession.vote",
            "offset": [1280, 1304],
            "op": "ISZERO",
            "path": "4"
        },
        "1541": {
            "fn": "VotingSession.vote",
            "offset": [1259, 1368],
            "op": "PUSH2",
            "path": "4",
            "value": "0x65F"
        },
        "1544": {
            "branch": 35,
            "fn": "VotingSession.vote",
            "offset": [1259, 1368],
            "op": "JUMPI",
            "path": "4"
        },
        "1545": {
            "fn": "VotingSession.vote",
            "offset": [1259, 1368],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "1547": {
            "fn": "VotingSession.vote",
            "offset": [1259, 1368],
            "op": "MLOAD",
            "path": "4"
        },
        "1548": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "1552": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "1554": {
            "op": "SHL"
        },
        "1555": {
            "fn": "VotingSession.vote",
            "offset": [1259, 1368],
            "op": "DUP2",
            "path": "4"
        },
        "1556": {
            "fn": "VotingSession.vote",
            "offset": [1259, 1368],
            "op": "MSTORE",
            "path": "4"
        },
        "1557": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "1559": {
            "fn": "VotingSession.vote",
            "offset": [1259, 1368],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "1561": {
            "fn": "VotingSession.vote",
            "offset": [1259, 1368],
            "op": "DUP3",
            "path": "4"
        },
        "1562": {
            "fn": "VotingSession.vote",
            "offset": [1259, 1368],
            "op": "ADD",
            "path": "4"
        },
        "1563": {
            "op": "MSTORE"
        },
        "1564": {
            "op": "PUSH1",
            "value": "0x26"
        },
        "1566": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "1568": {
            "op": "DUP3"
        },
        "1569": {
            "op": "ADD"
        },
        "1570": {
            "op": "MSTORE"
        },
        "1571": {
            "op": "PUSH32",
            "value": "0x5468697320766F74696E672073657373696F6E20646964206E6F742073746172"
        },
        "1604": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "1606": {
            "op": "DUP3"
        },
        "1607": {
            "op": "ADD"
        },
        "1608": {
            "op": "MSTORE"
        },
        "1609": {
            "op": "PUSH6",
            "value": "0x3A103CB2BA17"
        },
        "1616": {
            "op": "PUSH1",
            "value": "0xD1"
        },
        "1618": {
            "op": "SHL"
        },
        "1619": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "1621": {
            "op": "DUP3"
        },
        "1622": {
            "op": "ADD"
        },
        "1623": {
            "op": "MSTORE"
        },
        "1624": {
            "op": "PUSH1",
            "value": "0x84"
        },
        "1626": {
            "op": "ADD"
        },
        "1627": {
            "fn": "VotingSession.vote",
            "offset": [1259, 1368],
            "op": "PUSH2",
            "path": "4",
            "value": "0x437"
        },
        "1630": {
            "op": "JUMP"
        },
        "1631": {
            "fn": "VotingSession.vote",
            "offset": [1259, 1368],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1632": {
            "fn": "VotingSession.vote",
            "offset": [1386, 1396],
            "op": "PUSH1",
            "path": "4",
            "statement": 14,
            "value": "0x7"
        },
        "1634": {
            "fn": "VotingSession.vote",
            "offset": [1397, 1403],
            "op": "DUP3",
            "path": "4"
        },
        "1635": {
            "fn": "VotingSession.vote",
            "offset": [1386, 1404],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "1637": {
            "fn": "VotingSession.vote",
            "offset": [1386, 1404],
            "op": "MLOAD",
            "path": "4"
        },
        "1638": {
            "fn": "VotingSession.vote",
            "offset": [1386, 1404],
            "op": "PUSH2",
            "path": "4",
            "value": "0x66F"
        },
        "1641": {
            "fn": "VotingSession.vote",
            "offset": [1386, 1404],
            "op": "SWAP2",
            "path": "4"
        },
        "1642": {
            "fn": "VotingSession.vote",
            "offset": [1386, 1404],
            "op": "SWAP1",
            "path": "4"
        },
        "1643": {
            "fn": "VotingSession.vote",
            "offset": [1386, 1404],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1028"
        },
        "1646": {
            "fn": "VotingSession.vote",
            "jump": "i",
            "offset": [1386, 1404],
            "op": "JUMP",
            "path": "4"
        },
        "1647": {
            "fn": "VotingSession.vote",
            "offset": [1386, 1404],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1648": {
            "fn": "VotingSession.vote",
            "offset": [1386, 1404],
            "op": "SWAP1",
            "path": "4"
        },
        "1649": {
            "fn": "VotingSession.vote",
            "offset": [1386, 1404],
            "op": "DUP2",
            "path": "4"
        },
        "1650": {
            "fn": "VotingSession.vote",
            "offset": [1386, 1404],
            "op": "MSTORE",
            "path": "4"
        },
        "1651": {
            "fn": "VotingSession.vote",
            "offset": [1386, 1404],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "1653": {
            "fn": "VotingSession.vote",
            "offset": [1386, 1404],
            "op": "MLOAD",
            "path": "4"
        },
        "1654": {
            "fn": "VotingSession.vote",
            "offset": [1386, 1404],
            "op": "SWAP1",
            "path": "4"
        },
        "1655": {
            "fn": "VotingSession.vote",
            "offset": [1386, 1404],
            "op": "DUP2",
            "path": "4"
        },
        "1656": {
            "fn": "VotingSession.vote",
            "offset": [1386, 1404],
            "op": "SWAP1",
            "path": "4"
        },
        "1657": {
            "fn": "VotingSession.vote",
            "offset": [1386, 1404],
            "op": "SUB",
            "path": "4"
        },
        "1658": {
            "fn": "VotingSession.vote",
            "offset": [1386, 1404],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "1660": {
            "fn": "VotingSession.vote",
            "offset": [1386, 1404],
            "op": "ADD",
            "path": "4"
        },
        "1661": {
            "fn": "VotingSession.vote",
            "offset": [1386, 1404],
            "op": "SWAP1",
            "path": "4"
        },
        "1662": {
            "fn": "VotingSession.vote",
            "offset": [1386, 1404],
            "op": "KECCAK256",
            "path": "4"
        },
        "1663": {
            "fn": "VotingSession.vote",
            "offset": [1386, 1404],
            "op": "SLOAD",
            "path": "4"
        },
        "1664": {
            "fn": "VotingSession.vote",
            "offset": [1386, 1404],
            "op": "PUSH1",
            "path": "4",
            "value": "0xFF"
        },
        "1666": {
            "branch": 36,
            "fn": "VotingSession.vote",
            "offset": [1386, 1404],
            "op": "AND",
            "path": "4"
        },
        "1667": {
            "fn": "VotingSession.vote",
            "offset": [1378, 1424],
            "op": "PUSH2",
            "path": "4",
            "value": "0x6C0"
        },
        "1670": {
            "branch": 36,
            "fn": "VotingSession.vote",
            "offset": [1378, 1424],
            "op": "JUMPI",
            "path": "4"
        },
        "1671": {
            "fn": "VotingSession.vote",
            "offset": [1378, 1424],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "1673": {
            "fn": "VotingSession.vote",
            "offset": [1378, 1424],
            "op": "MLOAD",
            "path": "4"
        },
        "1674": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "1678": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "1680": {
            "op": "SHL"
        },
        "1681": {
            "fn": "VotingSession.vote",
            "offset": [1378, 1424],
            "op": "DUP2",
            "path": "4"
        },
        "1682": {
            "fn": "VotingSession.vote",
            "offset": [1378, 1424],
            "op": "MSTORE",
            "path": "4"
        },
        "1683": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "1685": {
            "fn": "VotingSession.vote",
            "offset": [1378, 1424],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "1687": {
            "fn": "VotingSession.vote",
            "offset": [1378, 1424],
            "op": "DUP3",
            "path": "4"
        },
        "1688": {
            "fn": "VotingSession.vote",
            "offset": [1378, 1424],
            "op": "ADD",
            "path": "4"
        },
        "1689": {
            "op": "MSTORE"
        },
        "1690": {
            "op": "PUSH1",
            "value": "0xF"
        },
        "1692": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "1694": {
            "op": "DUP3"
        },
        "1695": {
            "op": "ADD"
        },
        "1696": {
            "op": "MSTORE"
        },
        "1697": {
            "op": "PUSH15",
            "value": "0x24B73B30B634B21031B437B4B1B297"
        },
        "1713": {
            "op": "PUSH1",
            "value": "0x89"
        },
        "1715": {
            "op": "SHL"
        },
        "1716": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "1718": {
            "op": "DUP3"
        },
        "1719": {
            "op": "ADD"
        },
        "1720": {
            "op": "MSTORE"
        },
        "1721": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "1723": {
            "op": "ADD"
        },
        "1724": {
            "fn": "VotingSession.vote",
            "offset": [1378, 1424],
            "op": "PUSH2",
            "path": "4",
            "value": "0x437"
        },
        "1727": {
            "op": "JUMP"
        },
        "1728": {
            "fn": "VotingSession.vote",
            "offset": [1378, 1424],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1729": {
            "fn": "VotingSession.vote",
            "offset": [1499, 1516],
            "op": "PUSH1",
            "path": "4",
            "statement": 15,
            "value": "0x4"
        },
        "1731": {
            "fn": "VotingSession.vote",
            "offset": [1499, 1516],
            "op": "SLOAD",
            "path": "4"
        },
        "1732": {
            "fn": "VotingSession.vote",
            "offset": [1468, 1478],
            "op": "CALLER",
            "path": "4"
        },
        "1733": {
            "fn": "VotingSession.vote",
            "offset": [1499, 1516],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "1735": {
            "fn": "VotingSession.vote",
            "offset": [1455, 1479],
            "op": "SWAP1",
            "path": "4"
        },
        "1736": {
            "fn": "VotingSession.vote",
            "offset": [1455, 1479],
            "op": "DUP2",
            "path": "4"
        },
        "1737": {
            "fn": "VotingSession.vote",
            "offset": [1455, 1479],
            "op": "MSTORE",
            "path": "4"
        },
        "1738": {
            "fn": "VotingSession.vote",
            "offset": [1455, 1467],
            "op": "PUSH1",
            "path": "4",
            "value": "0x5"
        },
        "1740": {
            "fn": "VotingSession.vote",
            "offset": [1455, 1479],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "1742": {
            "fn": "VotingSession.vote",
            "offset": [1455, 1479],
            "op": "MSTORE",
            "path": "4"
        },
        "1743": {
            "fn": "VotingSession.vote",
            "offset": [1455, 1479],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "1745": {
            "fn": "VotingSession.vote",
            "offset": [1455, 1479],
            "op": "SWAP1",
            "path": "4"
        },
        "1746": {
            "fn": "VotingSession.vote",
            "offset": [1455, 1479],
            "op": "KECCAK256",
            "path": "4"
        },
        "1747": {
            "fn": "VotingSession.vote",
            "offset": [1455, 1479],
            "op": "SLOAD",
            "path": "4"
        },
        "1748": {
            "fn": "VotingSession.vote",
            "offset": [1499, 1516],
            "op": "PUSH1",
            "path": "4",
            "value": "0xFF"
        },
        "1750": {
            "fn": "VotingSession.vote",
            "offset": [1499, 1516],
            "op": "SWAP2",
            "path": "4"
        },
        "1751": {
            "fn": "VotingSession.vote",
            "offset": [1499, 1516],
            "op": "DUP3",
            "path": "4"
        },
        "1752": {
            "fn": "VotingSession.vote",
            "offset": [1499, 1516],
            "op": "AND",
            "path": "4"
        },
        "1753": {
            "fn": "VotingSession.vote",
            "offset": [1499, 1516],
            "op": "SWAP2",
            "path": "4"
        },
        "1754": {
            "fn": "VotingSession.vote",
            "offset": [1455, 1495],
            "op": "PUSH2",
            "path": "4",
            "value": "0x6E5"
        },
        "1757": {
            "fn": "VotingSession.vote",
            "offset": [1455, 1495],
            "op": "SWAP2",
            "path": "4"
        },
        "1758": {
            "fn": "VotingSession.vote",
            "offset": [1482, 1495],
            "op": "DUP5",
            "path": "4"
        },
        "1759": {
            "fn": "VotingSession.vote",
            "offset": [1482, 1495],
            "op": "SWAP2",
            "path": "4"
        },
        "1760": {
            "fn": "VotingSession.vote",
            "offset": [1455, 1479],
            "op": "AND",
            "path": "4"
        },
        "1761": {
            "fn": "VotingSession.vote",
            "offset": [1455, 1495],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1044"
        },
        "1764": {
            "fn": "VotingSession.vote",
            "jump": "i",
            "offset": [1455, 1495],
            "op": "JUMP",
            "path": "4"
        },
        "1765": {
            "fn": "VotingSession.vote",
            "offset": [1455, 1495],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1766": {
            "fn": "VotingSession.vote",
            "offset": [1455, 1516],
            "op": "PUSH1",
            "path": "4",
            "value": "0xFF"
        },
        "1768": {
            "fn": "VotingSession.vote",
            "offset": [1455, 1516],
            "op": "AND",
            "path": "4"
        },
        "1769": {
            "fn": "VotingSession.vote",
            "offset": [1455, 1516],
            "op": "GT",
            "path": "4"
        },
        "1770": {
            "branch": 37,
            "fn": "VotingSession.vote",
            "offset": [1455, 1516],
            "op": "ISZERO",
            "path": "4"
        },
        "1771": {
            "fn": "VotingSession.vote",
            "offset": [1434, 1576],
            "op": "PUSH2",
            "path": "4",
            "value": "0x741"
        },
        "1774": {
            "branch": 37,
            "fn": "VotingSession.vote",
            "offset": [1434, 1576],
            "op": "JUMPI",
            "path": "4"
        },
        "1775": {
            "fn": "VotingSession.vote",
            "offset": [1434, 1576],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "1777": {
            "fn": "VotingSession.vote",
            "offset": [1434, 1576],
            "op": "MLOAD",
            "path": "4"
        },
        "1778": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "1782": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "1784": {
            "op": "SHL"
        },
        "1785": {
            "fn": "VotingSession.vote",
            "offset": [1434, 1576],
            "op": "DUP2",
            "path": "4"
        },
        "1786": {
            "fn": "VotingSession.vote",
            "offset": [1434, 1576],
            "op": "MSTORE",
            "path": "4"
        },
        "1787": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "1789": {
            "fn": "VotingSession.vote",
            "offset": [1434, 1576],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "1791": {
            "fn": "VotingSession.vote",
            "offset": [1434, 1576],
            "op": "DUP3",
            "path": "4"
        },
        "1792": {
            "fn": "VotingSession.vote",
            "offset": [1434, 1576],
            "op": "ADD",
            "path": "4"
        },
        "1793": {
            "op": "MSTORE"
        },
        "1794": {
            "op": "PUSH1",
            "value": "0x22"
        },
        "1796": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "1798": {
            "op": "DUP3"
        },
        "1799": {
            "op": "ADD"
        },
        "1800": {
            "op": "MSTORE"
        },
        "1801": {
            "op": "PUSH32",
            "value": "0x4578636565646564206E756D626572206F6620766F7465732070657220757365"
        },
        "1834": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "1836": {
            "op": "DUP3"
        },
        "1837": {
            "op": "ADD"
        },
        "1838": {
            "op": "MSTORE"
        },
        "1839": {
            "op": "PUSH2",
            "value": "0x3917"
        },
        "1842": {
            "op": "PUSH1",
            "value": "0xF1"
        },
        "1844": {
            "op": "SHL"
        },
        "1845": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "1847": {
            "op": "DUP3"
        },
        "1848": {
            "op": "ADD"
        },
        "1849": {
            "op": "MSTORE"
        },
        "1850": {
            "op": "PUSH1",
            "value": "0x84"
        },
        "1852": {
            "op": "ADD"
        },
        "1853": {
            "fn": "VotingSession.vote",
            "offset": [1434, 1576],
            "op": "PUSH2",
            "path": "4",
            "value": "0x437"
        },
        "1856": {
            "op": "JUMP"
        },
        "1857": {
            "fn": "VotingSession.vote",
            "offset": [1434, 1576],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1858": {
            "fn": "VotingSession.vote",
            "offset": [1600, 1610],
            "op": "CALLER",
            "path": "4",
            "statement": 16
        },
        "1859": {
            "fn": "VotingSession.vote",
            "offset": [1587, 1611],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "1861": {
            "fn": "VotingSession.vote",
            "offset": [1587, 1611],
            "op": "SWAP1",
            "path": "4"
        },
        "1862": {
            "fn": "VotingSession.vote",
            "offset": [1587, 1611],
            "op": "DUP2",
            "path": "4"
        },
        "1863": {
            "fn": "VotingSession.vote",
            "offset": [1587, 1611],
            "op": "MSTORE",
            "path": "4"
        },
        "1864": {
            "fn": "VotingSession.vote",
            "offset": [1587, 1599],
            "op": "PUSH1",
            "path": "4",
            "value": "0x5"
        },
        "1866": {
            "fn": "VotingSession.vote",
            "offset": [1587, 1611],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "1868": {
            "fn": "VotingSession.vote",
            "offset": [1587, 1611],
            "op": "MSTORE",
            "path": "4"
        },
        "1869": {
            "fn": "VotingSession.vote",
            "offset": [1587, 1611],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "1871": {
            "fn": "VotingSession.vote",
            "offset": [1587, 1611],
            "op": "DUP2",
            "path": "4"
        },
        "1872": {
            "fn": "VotingSession.vote",
            "offset": [1587, 1611],
            "op": "KECCAK256",
            "path": "4"
        },
        "1873": {
            "fn": "VotingSession.vote",
            "offset": [1587, 1628],
            "op": "DUP1",
            "path": "4"
        },
        "1874": {
            "fn": "VotingSession.vote",
            "offset": [1587, 1628],
            "op": "SLOAD",
            "path": "4"
        },
        "1875": {
            "fn": "VotingSession.vote",
            "offset": [1615, 1628],
            "op": "DUP4",
            "path": "4"
        },
        "1876": {
            "fn": "VotingSession.vote",
            "offset": [1615, 1628],
            "op": "SWAP3",
            "path": "4"
        },
        "1877": {
            "fn": "VotingSession.vote",
            "offset": [1587, 1611],
            "op": "SWAP1",
            "path": "4"
        },
        "1878": {
            "fn": "VotingSession.vote",
            "offset": [1587, 1628],
            "op": "PUSH2",
            "path": "4",
            "value": "0x763"
        },
        "1881": {
            "fn": "VotingSession.vote",
            "offset": [1587, 1628],
            "op": "SWAP1",
            "path": "4"
        },
        "1882": {
            "fn": "VotingSession.vote",
            "offset": [1615, 1628],
            "op": "DUP5",
            "path": "4"
        },
        "1883": {
            "fn": "VotingSession.vote",
            "offset": [1615, 1628],
            "op": "SWAP1",
            "path": "4"
        },
        "1884": {
            "fn": "VotingSession.vote",
            "offset": [1587, 1628],
            "op": "PUSH1",
            "path": "4",
            "value": "0xFF"
        },
        "1886": {
            "fn": "VotingSession.vote",
            "offset": [1587, 1628],
            "op": "AND",
            "path": "4"
        },
        "1887": {
            "fn": "VotingSession.vote",
            "offset": [1587, 1628],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1044"
        },
        "1890": {
            "fn": "VotingSession.vote",
            "jump": "i",
            "offset": [1587, 1628],
            "op": "JUMP",
            "path": "4"
        },
        "1891": {
            "fn": "VotingSession.vote",
            "offset": [1587, 1628],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1892": {
            "fn": "VotingSession.vote",
            "offset": [1587, 1628],
            "op": "SWAP3",
            "path": "4"
        },
        "1893": {
            "fn": "VotingSession.vote",
            "offset": [1587, 1628],
            "op": "POP",
            "path": "4"
        },
        "1894": {
            "fn": "VotingSession.vote",
            "offset": [1587, 1628],
            "op": "PUSH2",
            "path": "4",
            "value": "0x100"
        },
        "1897": {
            "fn": "VotingSession.vote",
            "offset": [1587, 1628],
            "op": "EXP",
            "path": "4"
        },
        "1898": {
            "fn": "VotingSession.vote",
            "offset": [1587, 1628],
            "op": "DUP2",
            "path": "4"
        },
        "1899": {
            "fn": "VotingSession.vote",
            "offset": [1587, 1628],
            "op": "SLOAD",
            "path": "4"
        },
        "1900": {
            "fn": "VotingSession.vote",
            "offset": [1587, 1628],
            "op": "DUP2",
            "path": "4"
        },
        "1901": {
            "fn": "VotingSession.vote",
            "offset": [1587, 1628],
            "op": "PUSH1",
            "path": "4",
            "value": "0xFF"
        },
        "1903": {
            "fn": "VotingSession.vote",
            "offset": [1587, 1628],
            "op": "MUL",
            "path": "4"
        },
        "1904": {
            "fn": "VotingSession.vote",
            "offset": [1587, 1628],
            "op": "NOT",
            "path": "4"
        },
        "1905": {
            "fn": "VotingSession.vote",
            "offset": [1587, 1628],
            "op": "AND",
            "path": "4"
        },
        "1906": {
            "fn": "VotingSession.vote",
            "offset": [1587, 1628],
            "op": "SWAP1",
            "path": "4"
        },
        "1907": {
            "fn": "VotingSession.vote",
            "offset": [1587, 1628],
            "op": "DUP4",
            "path": "4"
        },
        "1908": {
            "fn": "VotingSession.vote",
            "offset": [1587, 1628],
            "op": "PUSH1",
            "path": "4",
            "value": "0xFF"
        },
        "1910": {
            "fn": "VotingSession.vote",
            "offset": [1587, 1628],
            "op": "AND",
            "path": "4"
        },
        "1911": {
            "fn": "VotingSession.vote",
            "offset": [1587, 1628],
            "op": "MUL",
            "path": "4"
        },
        "1912": {
            "fn": "VotingSession.vote",
            "offset": [1587, 1628],
            "op": "OR",
            "path": "4"
        },
        "1913": {
            "fn": "VotingSession.vote",
            "offset": [1587, 1628],
            "op": "SWAP1",
            "path": "4"
        },
        "1914": {
            "fn": "VotingSession.vote",
            "offset": [1587, 1628],
            "op": "SSTORE",
            "path": "4"
        },
        "1915": {
            "fn": "VotingSession.vote",
            "offset": [1587, 1628],
            "op": "POP",
            "path": "4"
        },
        "1916": {
            "fn": "VotingSession.vote",
            "offset": [1664, 1677],
            "op": "DUP1",
            "path": "4",
            "statement": 17
        },
        "1917": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1677],
            "op": "PUSH1",
            "path": "4",
            "value": "0xFF"
        },
        "1919": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1677],
            "op": "AND",
            "path": "4"
        },
        "1920": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1652],
            "op": "PUSH1",
            "path": "4",
            "value": "0x8"
        },
        "1922": {
            "fn": "VotingSession.vote",
            "offset": [1653, 1659],
            "op": "DUP4",
            "path": "4"
        },
        "1923": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1660],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "1925": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1660],
            "op": "MLOAD",
            "path": "4"
        },
        "1926": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1660],
            "op": "PUSH2",
            "path": "4",
            "value": "0x78F"
        },
        "1929": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1660],
            "op": "SWAP2",
            "path": "4"
        },
        "1930": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1660],
            "op": "SWAP1",
            "path": "4"
        },
        "1931": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1660],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1028"
        },
        "1934": {
            "fn": "VotingSession.vote",
            "jump": "i",
            "offset": [1638, 1660],
            "op": "JUMP",
            "path": "4"
        },
        "1935": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1660],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1936": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1660],
            "op": "SWAP1",
            "path": "4"
        },
        "1937": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1660],
            "op": "DUP2",
            "path": "4"
        },
        "1938": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1660],
            "op": "MSTORE",
            "path": "4"
        },
        "1939": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1660],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "1941": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1660],
            "op": "MLOAD",
            "path": "4"
        },
        "1942": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1660],
            "op": "SWAP1",
            "path": "4"
        },
        "1943": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1660],
            "op": "DUP2",
            "path": "4"
        },
        "1944": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1660],
            "op": "SWAP1",
            "path": "4"
        },
        "1945": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1660],
            "op": "SUB",
            "path": "4"
        },
        "1946": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1660],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "1948": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1660],
            "op": "ADD",
            "path": "4"
        },
        "1949": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1660],
            "op": "SWAP1",
            "path": "4"
        },
        "1950": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1660],
            "op": "KECCAK256",
            "path": "4"
        },
        "1951": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1677],
            "op": "DUP1",
            "path": "4"
        },
        "1952": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1677],
            "op": "SLOAD",
            "path": "4"
        },
        "1953": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1660],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "1955": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1660],
            "op": "SWAP1",
            "path": "4"
        },
        "1956": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1677],
            "op": "PUSH2",
            "path": "4",
            "value": "0x7B3"
        },
        "1959": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1677],
            "op": "SWAP1",
            "path": "4"
        },
        "1960": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1677],
            "op": "DUP5",
            "path": "4"
        },
        "1961": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1677],
            "op": "SWAP1",
            "path": "4"
        },
        "1962": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1677],
            "op": "PUSH3",
            "path": "4",
            "value": "0xFFFFFF"
        },
        "1966": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1677],
            "op": "AND",
            "path": "4"
        },
        "1967": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1677],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1069"
        },
        "1970": {
            "fn": "VotingSession.vote",
            "jump": "i",
            "offset": [1638, 1677],
            "op": "JUMP",
            "path": "4"
        },
        "1971": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1677],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1972": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1677],
            "op": "SWAP3",
            "path": "4"
        },
        "1973": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1677],
            "op": "POP",
            "path": "4"
        },
        "1974": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1677],
            "op": "PUSH2",
            "path": "4",
            "value": "0x100"
        },
        "1977": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1677],
            "op": "EXP",
            "path": "4"
        },
        "1978": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1677],
            "op": "DUP2",
            "path": "4"
        },
        "1979": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1677],
            "op": "SLOAD",
            "path": "4"
        },
        "1980": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1677],
            "op": "DUP2",
            "path": "4"
        },
        "1981": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1677],
            "op": "PUSH3",
            "path": "4",
            "value": "0xFFFFFF"
        },
        "1985": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1677],
            "op": "MUL",
            "path": "4"
        },
        "1986": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1677],
            "op": "NOT",
            "path": "4"
        },
        "1987": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1677],
            "op": "AND",
            "path": "4"
        },
        "1988": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1677],
            "op": "SWAP1",
            "path": "4"
        },
        "1989": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1677],
            "op": "DUP4",
            "path": "4"
        },
        "1990": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1677],
            "op": "PUSH3",
            "path": "4",
            "value": "0xFFFFFF"
        },
        "1994": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1677],
            "op": "AND",
            "path": "4"
        },
        "1995": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1677],
            "op": "MUL",
            "path": "4"
        },
        "1996": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1677],
            "op": "OR",
            "path": "4"
        },
        "1997": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1677],
            "op": "SWAP1",
            "path": "4"
        },
        "1998": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1677],
            "op": "SSTORE",
            "path": "4"
        },
        "1999": {
            "fn": "VotingSession.vote",
            "offset": [1638, 1677],
            "op": "POP",
            "path": "4"
        },
        "2000": {
            "fn": "VotingSession.vote",
            "offset": [1107, 1684],
            "op": "POP",
            "path": "4"
        },
        "2001": {
            "fn": "VotingSession.vote",
            "offset": [1107, 1684],
            "op": "POP",
            "path": "4"
        },
        "2002": {
            "fn": "VotingSession.vote",
            "jump": "o",
            "offset": [1107, 1684],
            "op": "JUMP",
            "path": "4"
        },
        "2003": {
            "offset": [235, 255],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2004": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "PUSH1",
            "path": "4",
            "value": "0x1"
        },
        "2006": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "DUP1",
            "path": "4"
        },
        "2007": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "SLOAD",
            "path": "4"
        },
        "2008": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "PUSH2",
            "path": "4",
            "value": "0x7E0"
        },
        "2011": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "SWAP1",
            "path": "4"
        },
        "2012": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "PUSH2",
            "path": "4",
            "value": "0xEAF"
        },
        "2015": {
            "fn": "VotingSession.vote",
            "jump": "i",
            "offset": [235, 255],
            "op": "JUMP",
            "path": "4"
        },
        "2016": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2017": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "DUP1",
            "path": "4"
        },
        "2018": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "PUSH1",
            "path": "4",
            "value": "0x1F"
        },
        "2020": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "ADD",
            "path": "4"
        },
        "2021": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "2023": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "DUP1",
            "path": "4"
        },
        "2024": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "SWAP2",
            "path": "4"
        },
        "2025": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "DIV",
            "path": "4"
        },
        "2026": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "MUL",
            "path": "4"
        },
        "2027": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "2029": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "ADD",
            "path": "4"
        },
        "2030": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "2032": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "MLOAD",
            "path": "4"
        },
        "2033": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "SWAP1",
            "path": "4"
        },
        "2034": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "DUP2",
            "path": "4"
        },
        "2035": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "ADD",
            "path": "4"
        },
        "2036": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "2038": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "MSTORE",
            "path": "4"
        },
        "2039": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "DUP1",
            "path": "4"
        },
        "2040": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "SWAP3",
            "path": "4"
        },
        "2041": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "SWAP2",
            "path": "4"
        },
        "2042": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "SWAP1",
            "path": "4"
        },
        "2043": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "DUP2",
            "path": "4"
        },
        "2044": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "DUP2",
            "path": "4"
        },
        "2045": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "MSTORE",
            "path": "4"
        },
        "2046": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "2048": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "ADD",
            "path": "4"
        },
        "2049": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "DUP3",
            "path": "4"
        },
        "2050": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "DUP1",
            "path": "4"
        },
        "2051": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "SLOAD",
            "path": "4"
        },
        "2052": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "PUSH2",
            "path": "4",
            "value": "0x80C"
        },
        "2055": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "SWAP1",
            "path": "4"
        },
        "2056": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "PUSH2",
            "path": "4",
            "value": "0xEAF"
        },
        "2059": {
            "fn": "VotingSession.vote",
            "jump": "i",
            "offset": [235, 255],
            "op": "JUMP",
            "path": "4"
        },
        "2060": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2061": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "DUP1",
            "path": "4"
        },
        "2062": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "ISZERO",
            "path": "4"
        },
        "2063": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "PUSH2",
            "path": "4",
            "value": "0x859"
        },
        "2066": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "JUMPI",
            "path": "4"
        },
        "2067": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "DUP1",
            "path": "4"
        },
        "2068": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "PUSH1",
            "path": "4",
            "value": "0x1F"
        },
        "2070": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "LT",
            "path": "4"
        },
        "2071": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "PUSH2",
            "path": "4",
            "value": "0x82E"
        },
        "2074": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "JUMPI",
            "path": "4"
        },
        "2075": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "PUSH2",
            "path": "4",
            "value": "0x100"
        },
        "2078": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "DUP1",
            "path": "4"
        },
        "2079": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "DUP4",
            "path": "4"
        },
        "2080": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "SLOAD",
            "path": "4"
        },
        "2081": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "DIV",
            "path": "4"
        },
        "2082": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "MUL",
            "path": "4"
        },
        "2083": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "DUP4",
            "path": "4"
        },
        "2084": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "MSTORE",
            "path": "4"
        },
        "2085": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "SWAP2",
            "path": "4"
        },
        "2086": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "2088": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "ADD",
            "path": "4"
        },
        "2089": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "SWAP2",
            "path": "4"
        },
        "2090": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "PUSH2",
            "path": "4",
            "value": "0x859"
        },
        "2093": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "JUMP",
            "path": "4"
        },
        "2094": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2095": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "DUP3",
            "path": "4"
        },
        "2096": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "ADD",
            "path": "4"
        },
        "2097": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "SWAP2",
            "path": "4"
        },
        "2098": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "SWAP1",
            "path": "4"
        },
        "2099": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "2101": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "MSTORE",
            "path": "4"
        },
        "2102": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "2104": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "2106": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "KECCAK256",
            "path": "4"
        },
        "2107": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "SWAP1",
            "path": "4"
        },
        "2108": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2109": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "DUP2",
            "path": "4"
        },
        "2110": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "SLOAD",
            "path": "4"
        },
        "2111": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "DUP2",
            "path": "4"
        },
        "2112": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "MSTORE",
            "path": "4"
        },
        "2113": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "SWAP1",
            "path": "4"
        },
        "2114": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "PUSH1",
            "path": "4",
            "value": "0x1"
        },
        "2116": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "ADD",
            "path": "4"
        },
        "2117": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "SWAP1",
            "path": "4"
        },
        "2118": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "2120": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "ADD",
            "path": "4"
        },
        "2121": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "DUP1",
            "path": "4"
        },
        "2122": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "DUP4",
            "path": "4"
        },
        "2123": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "GT",
            "path": "4"
        },
        "2124": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "PUSH2",
            "path": "4",
            "value": "0x83C"
        },
        "2127": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "JUMPI",
            "path": "4"
        },
        "2128": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "DUP3",
            "path": "4"
        },
        "2129": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "SWAP1",
            "path": "4"
        },
        "2130": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "SUB",
            "path": "4"
        },
        "2131": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "PUSH1",
            "path": "4",
            "value": "0x1F"
        },
        "2133": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "AND",
            "path": "4"
        },
        "2134": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "DUP3",
            "path": "4"
        },
        "2135": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "ADD",
            "path": "4"
        },
        "2136": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "SWAP2",
            "path": "4"
        },
        "2137": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2138": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "POP",
            "path": "4"
        },
        "2139": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "POP",
            "path": "4"
        },
        "2140": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "POP",
            "path": "4"
        },
        "2141": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "POP",
            "path": "4"
        },
        "2142": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "POP",
            "path": "4"
        },
        "2143": {
            "fn": "VotingSession.vote",
            "offset": [235, 255],
            "op": "DUP2",
            "path": "4"
        },
        "2144": {
            "fn": "VotingSession.vote",
            "jump": "o",
            "offset": [235, 255],
            "op": "JUMP",
            "path": "4"
        },
        "2145": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2090, 2184],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2146": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2136, 2151],
            "op": "PUSH1",
            "path": "4",
            "value": "0x60"
        },
        "2148": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2170, 2177],
            "op": "PUSH1",
            "path": "4",
            "statement": 18,
            "value": "0x6"
        },
        "2150": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "DUP1",
            "path": "4"
        },
        "2151": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "SLOAD",
            "path": "4"
        },
        "2152": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "DUP1",
            "path": "4"
        },
        "2153": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "2155": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "MUL",
            "path": "4"
        },
        "2156": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "2158": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "ADD",
            "path": "4"
        },
        "2159": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "2161": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "MLOAD",
            "path": "4"
        },
        "2162": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "SWAP1",
            "path": "4"
        },
        "2163": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "DUP2",
            "path": "4"
        },
        "2164": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "ADD",
            "path": "4"
        },
        "2165": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "2167": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "MSTORE",
            "path": "4"
        },
        "2168": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "DUP1",
            "path": "4"
        },
        "2169": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "SWAP3",
            "path": "4"
        },
        "2170": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "SWAP2",
            "path": "4"
        },
        "2171": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "SWAP1",
            "path": "4"
        },
        "2172": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "DUP2",
            "path": "4"
        },
        "2173": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "DUP2",
            "path": "4"
        },
        "2174": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "MSTORE",
            "path": "4"
        },
        "2175": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "2177": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "ADD",
            "path": "4"
        },
        "2178": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "2180": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "SWAP1",
            "path": "4"
        },
        "2181": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2182": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "DUP3",
            "path": "4"
        },
        "2183": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "DUP3",
            "path": "4"
        },
        "2184": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "LT",
            "path": "4"
        },
        "2185": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "ISZERO",
            "path": "4"
        },
        "2186": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "PUSH2",
            "path": "4",
            "value": "0x931"
        },
        "2189": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "JUMPI",
            "path": "4"
        },
        "2190": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "DUP4",
            "path": "4"
        },
        "2191": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "DUP3",
            "path": "4"
        },
        "2192": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "SWAP1",
            "path": "4"
        },
        "2193": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "2195": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "MSTORE",
            "path": "4"
        },
        "2196": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "2198": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "2200": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "KECCAK256",
            "path": "4"
        },
        "2201": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "ADD",
            "path": "4"
        },
        "2202": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "DUP1",
            "path": "4"
        },
        "2203": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "SLOAD",
            "path": "4"
        },
        "2204": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "PUSH2",
            "path": "4",
            "value": "0x8A4"
        },
        "2207": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "SWAP1",
            "path": "4"
        },
        "2208": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "PUSH2",
            "path": "4",
            "value": "0xEAF"
        },
        "2211": {
            "fn": "VotingSession.getAllChoices",
            "jump": "i",
            "offset": [2163, 2177],
            "op": "JUMP",
            "path": "4"
        },
        "2212": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2213": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "DUP1",
            "path": "4"
        },
        "2214": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "PUSH1",
            "path": "4",
            "value": "0x1F"
        },
        "2216": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "ADD",
            "path": "4"
        },
        "2217": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "2219": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "DUP1",
            "path": "4"
        },
        "2220": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "SWAP2",
            "path": "4"
        },
        "2221": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "DIV",
            "path": "4"
        },
        "2222": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "MUL",
            "path": "4"
        },
        "2223": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "2225": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "ADD",
            "path": "4"
        },
        "2226": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "2228": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "MLOAD",
            "path": "4"
        },
        "2229": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "SWAP1",
            "path": "4"
        },
        "2230": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "DUP2",
            "path": "4"
        },
        "2231": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "ADD",
            "path": "4"
        },
        "2232": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "2234": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "MSTORE",
            "path": "4"
        },
        "2235": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "DUP1",
            "path": "4"
        },
        "2236": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "SWAP3",
            "path": "4"
        },
        "2237": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "SWAP2",
            "path": "4"
        },
        "2238": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "SWAP1",
            "path": "4"
        },
        "2239": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "DUP2",
            "path": "4"
        },
        "2240": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "DUP2",
            "path": "4"
        },
        "2241": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "MSTORE",
            "path": "4"
        },
        "2242": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "2244": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "ADD",
            "path": "4"
        },
        "2245": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "DUP3",
            "path": "4"
        },
        "2246": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "DUP1",
            "path": "4"
        },
        "2247": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "SLOAD",
            "path": "4"
        },
        "2248": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "PUSH2",
            "path": "4",
            "value": "0x8D0"
        },
        "2251": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "SWAP1",
            "path": "4"
        },
        "2252": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "PUSH2",
            "path": "4",
            "value": "0xEAF"
        },
        "2255": {
            "fn": "VotingSession.getAllChoices",
            "jump": "i",
            "offset": [2163, 2177],
            "op": "JUMP",
            "path": "4"
        },
        "2256": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2257": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "DUP1",
            "path": "4"
        },
        "2258": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "ISZERO",
            "path": "4"
        },
        "2259": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "PUSH2",
            "path": "4",
            "value": "0x91D"
        },
        "2262": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "JUMPI",
            "path": "4"
        },
        "2263": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "DUP1",
            "path": "4"
        },
        "2264": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "PUSH1",
            "path": "4",
            "value": "0x1F"
        },
        "2266": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "LT",
            "path": "4"
        },
        "2267": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "PUSH2",
            "path": "4",
            "value": "0x8F2"
        },
        "2270": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "JUMPI",
            "path": "4"
        },
        "2271": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "PUSH2",
            "path": "4",
            "value": "0x100"
        },
        "2274": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "DUP1",
            "path": "4"
        },
        "2275": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "DUP4",
            "path": "4"
        },
        "2276": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "SLOAD",
            "path": "4"
        },
        "2277": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "DIV",
            "path": "4"
        },
        "2278": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "MUL",
            "path": "4"
        },
        "2279": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "DUP4",
            "path": "4"
        },
        "2280": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "MSTORE",
            "path": "4"
        },
        "2281": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "SWAP2",
            "path": "4"
        },
        "2282": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "2284": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "ADD",
            "path": "4"
        },
        "2285": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "SWAP2",
            "path": "4"
        },
        "2286": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "PUSH2",
            "path": "4",
            "value": "0x91D"
        },
        "2289": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "JUMP",
            "path": "4"
        },
        "2290": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2291": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "DUP3",
            "path": "4"
        },
        "2292": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "ADD",
            "path": "4"
        },
        "2293": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "SWAP2",
            "path": "4"
        },
        "2294": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "SWAP1",
            "path": "4"
        },
        "2295": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "2297": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "MSTORE",
            "path": "4"
        },
        "2298": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "2300": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "2302": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "KECCAK256",
            "path": "4"
        },
        "2303": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "SWAP1",
            "path": "4"
        },
        "2304": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2305": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "DUP2",
            "path": "4"
        },
        "2306": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "SLOAD",
            "path": "4"
        },
        "2307": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "DUP2",
            "path": "4"
        },
        "2308": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "MSTORE",
            "path": "4"
        },
        "2309": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "SWAP1",
            "path": "4"
        },
        "2310": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "PUSH1",
            "path": "4",
            "value": "0x1"
        },
        "2312": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "ADD",
            "path": "4"
        },
        "2313": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "SWAP1",
            "path": "4"
        },
        "2314": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "2316": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "ADD",
            "path": "4"
        },
        "2317": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "DUP1",
            "path": "4"
        },
        "2318": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "DUP4",
            "path": "4"
        },
        "2319": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "GT",
            "path": "4"
        },
        "2320": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "PUSH2",
            "path": "4",
            "value": "0x900"
        },
        "2323": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "JUMPI",
            "path": "4"
        },
        "2324": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "DUP3",
            "path": "4"
        },
        "2325": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "SWAP1",
            "path": "4"
        },
        "2326": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "SUB",
            "path": "4"
        },
        "2327": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "PUSH1",
            "path": "4",
            "value": "0x1F"
        },
        "2329": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "AND",
            "path": "4"
        },
        "2330": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "DUP3",
            "path": "4"
        },
        "2331": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "ADD",
            "path": "4"
        },
        "2332": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "SWAP2",
            "path": "4"
        },
        "2333": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2334": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "POP",
            "path": "4"
        },
        "2335": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "POP",
            "path": "4"
        },
        "2336": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "POP",
            "path": "4"
        },
        "2337": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "POP",
            "path": "4"
        },
        "2338": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "POP",
            "path": "4"
        },
        "2339": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "DUP2",
            "path": "4"
        },
        "2340": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "MSTORE",
            "path": "4"
        },
        "2341": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "2343": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "ADD",
            "path": "4"
        },
        "2344": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "SWAP1",
            "path": "4"
        },
        "2345": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "PUSH1",
            "path": "4",
            "value": "0x1"
        },
        "2347": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "ADD",
            "path": "4"
        },
        "2348": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "SWAP1",
            "path": "4"
        },
        "2349": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "PUSH2",
            "path": "4",
            "value": "0x885"
        },
        "2352": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "JUMP",
            "path": "4"
        },
        "2353": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2354": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "POP",
            "path": "4"
        },
        "2355": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "POP",
            "path": "4"
        },
        "2356": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "POP",
            "path": "4"
        },
        "2357": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "POP",
            "path": "4"
        },
        "2358": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "SWAP1",
            "path": "4"
        },
        "2359": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2163, 2177],
            "op": "POP",
            "path": "4"
        },
        "2360": {
            "fn": "VotingSession.getAllChoices",
            "offset": [2090, 2184],
            "op": "SWAP1",
            "path": "4"
        },
        "2361": {
            "fn": "VotingSession.getAllChoices",
            "jump": "o",
            "offset": [2090, 2184],
            "op": "JUMP",
            "path": "4"
        },
        "2362": {
            "fn": "Ownable.transferOwnership",
            "offset": [1846, 2035],
            "op": "JUMPDEST",
            "path": "0"
        },
        "2363": {
            "fn": "Ownable.owner",
            "offset": [1019, 1026],
            "op": "PUSH1",
            "path": "0",
            "value": "0x0"
        },
        "2365": {
            "fn": "Ownable.owner",
            "offset": [1045, 1051],
            "op": "SLOAD",
            "path": "0"
        },
        "2366": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "2368": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "2370": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "2372": {
            "op": "SHL"
        },
        "2373": {
            "op": "SUB"
        },
        "2374": {
            "fn": "Ownable.owner",
            "offset": [1045, 1051],
            "op": "AND",
            "path": "0"
        },
        "2375": {
            "fn": "Context._msgSender",
            "offset": [665, 675],
            "op": "CALLER",
            "path": "2"
        },
        "2376": {
            "offset": [1185, 1208],
            "op": "EQ",
            "path": "0"
        },
        "2377": {
            "offset": [1177, 1245],
            "op": "PUSH2",
            "path": "0",
            "value": "0x964"
        },
        "2380": {
            "offset": [1177, 1245],
            "op": "JUMPI",
            "path": "0"
        },
        "2381": {
            "fn": "Context._msgSender",
            "offset": [1177, 1245],
            "op": "PUSH1",
            "path": "0",
            "value": "0x40"
        },
        "2383": {
            "fn": "Context._msgSender",
            "offset": [1177, 1245],
            "op": "MLOAD",
            "path": "0"
        },
        "2384": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "2388": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "2390": {
            "op": "SHL"
        },
        "2391": {
            "offset": [1177, 1245],
            "op": "DUP2",
            "path": "0"
        },
        "2392": {
            "fn": "Context._msgSender",
            "offset": [1177, 1245],
            "op": "MSTORE",
            "path": "0"
        },
        "2393": {
            "fn": "Context._msgSender",
            "offset": [1177, 1245],
            "op": "PUSH1",
            "path": "0",
            "value": "0x4"
        },
        "2395": {
            "fn": "Context._msgSender",
            "offset": [1177, 1245],
            "op": "ADD",
            "path": "0"
        },
        "2396": {
            "fn": "Context._msgSender",
            "offset": [1177, 1245],
            "op": "PUSH2",
            "path": "0",
            "value": "0x437"
        },
        "2399": {
            "fn": "Context._msgSender",
            "offset": [1177, 1245],
            "op": "SWAP1",
            "path": "0"
        },
        "2400": {
            "fn": "Context._msgSender",
            "offset": [1177, 1245],
            "op": "PUSH2",
            "path": "0",
            "value": "0xFB1"
        },
        "2403": {
            "fn": "Context._msgSender",
            "jump": "i",
            "offset": [1177, 1245],
            "op": "JUMP",
            "path": "0"
        },
        "2404": {
            "fn": "Context._msgSender",
            "offset": [1177, 1245],
            "op": "JUMPDEST",
            "path": "0"
        },
        "2405": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "2407": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "2409": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "2411": {
            "op": "SHL"
        },
        "2412": {
            "op": "SUB"
        },
        "2413": {
            "fn": "Ownable.transferOwnership",
            "offset": [1934, 1956],
            "op": "DUP2",
            "path": "0",
            "statement": 19
        },
        "2414": {
            "branch": 39,
            "fn": "Ownable.transferOwnership",
            "offset": [1934, 1956],
            "op": "AND",
            "path": "0"
        },
        "2415": {
            "fn": "Ownable.transferOwnership",
            "offset": [1926, 1999],
            "op": "PUSH2",
            "path": "0",
            "value": "0x9C9"
        },
        "2418": {
            "branch": 39,
            "fn": "Ownable.transferOwnership",
            "offset": [1926, 1999],
            "op": "JUMPI",
            "path": "0"
        },
        "2419": {
            "fn": "Ownable.transferOwnership",
            "offset": [1926, 1999],
            "op": "PUSH1",
            "path": "0",
            "value": "0x40"
        },
        "2421": {
            "fn": "Ownable.transferOwnership",
            "offset": [1926, 1999],
            "op": "MLOAD",
            "path": "0"
        },
        "2422": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "2426": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "2428": {
            "op": "SHL"
        },
        "2429": {
            "fn": "Ownable.transferOwnership",
            "offset": [1926, 1999],
            "op": "DUP2",
            "path": "0"
        },
        "2430": {
            "fn": "Ownable.transferOwnership",
            "offset": [1926, 1999],
            "op": "MSTORE",
            "path": "0"
        },
        "2431": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "2433": {
            "fn": "Ownable.transferOwnership",
            "offset": [1926, 1999],
            "op": "PUSH1",
            "path": "0",
            "value": "0x4"
        },
        "2435": {
            "fn": "Ownable.transferOwnership",
            "offset": [1926, 1999],
            "op": "DUP3",
            "path": "0"
        },
        "2436": {
            "fn": "Ownable.transferOwnership",
            "offset": [1926, 1999],
            "op": "ADD",
            "path": "0"
        },
        "2437": {
            "op": "MSTORE"
        },
        "2438": {
            "op": "PUSH1",
            "value": "0x26"
        },
        "2440": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "2442": {
            "op": "DUP3"
        },
        "2443": {
            "op": "ADD"
        },
        "2444": {
            "op": "MSTORE"
        },
        "2445": {
            "op": "PUSH32",
            "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
        },
        "2478": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "2480": {
            "op": "DUP3"
        },
        "2481": {
            "op": "ADD"
        },
        "2482": {
            "op": "MSTORE"
        },
        "2483": {
            "op": "PUSH6",
            "value": "0x646472657373"
        },
        "2490": {
            "op": "PUSH1",
            "value": "0xD0"
        },
        "2492": {
            "op": "SHL"
        },
        "2493": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "2495": {
            "op": "DUP3"
        },
        "2496": {
            "op": "ADD"
        },
        "2497": {
            "op": "MSTORE"
        },
        "2498": {
            "op": "PUSH1",
            "value": "0x84"
        },
        "2500": {
            "op": "ADD"
        },
        "2501": {
            "fn": "Ownable.transferOwnership",
            "offset": [1926, 1999],
            "op": "PUSH2",
            "path": "0",
            "value": "0x437"
        },
        "2504": {
            "op": "JUMP"
        },
        "2505": {
            "fn": "Ownable.transferOwnership",
            "offset": [1926, 1999],
            "op": "JUMPDEST",
            "path": "0"
        },
        "2506": {
            "fn": "Ownable.transferOwnership",
            "offset": [2009, 2028],
            "op": "PUSH2",
            "path": "0",
            "statement": 20,
            "value": "0x9D2"
        },
        "2509": {
            "fn": "Ownable.transferOwnership",
            "offset": [2019, 2027],
            "op": "DUP2",
            "path": "0"
        },
        "2510": {
            "fn": "Ownable.transferOwnership",
            "offset": [2009, 2018],
            "op": "PUSH2",
            "path": "0",
            "value": "0xB5E"
        },
        "2513": {
            "fn": "Ownable.transferOwnership",
            "jump": "i",
            "offset": [2009, 2028],
            "op": "JUMP",
            "path": "0"
        },
        "2514": {
            "fn": "Ownable.transferOwnership",
            "offset": [2009, 2028],
            "op": "JUMPDEST",
            "path": "0"
        },
        "2515": {
            "fn": "Ownable.transferOwnership",
            "offset": [1846, 2035],
            "op": "POP",
            "path": "0"
        },
        "2516": {
            "fn": "Ownable.transferOwnership",
            "jump": "o",
            "offset": [1846, 2035],
            "op": "JUMP",
            "path": "0"
        },
        "2517": {
            "offset": [400, 423],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2518": {
            "fn": "Ownable.transferOwnership",
            "offset": [400, 423],
            "op": "PUSH1",
            "path": "4",
            "value": "0x6"
        },
        "2520": {
            "fn": "Ownable.transferOwnership",
            "offset": [400, 423],
            "op": "DUP2",
            "path": "4"
        },
        "2521": {
            "fn": "Ownable.transferOwnership",
            "offset": [400, 423],
            "op": "DUP2",
            "path": "4"
        },
        "2522": {
            "fn": "Ownable.transferOwnership",
            "offset": [400, 423],
            "op": "SLOAD",
            "path": "4"
        },
        "2523": {
            "fn": "Ownable.transferOwnership",
            "offset": [400, 423],
            "op": "DUP2",
            "path": "4"
        },
        "2524": {
            "fn": "Ownable.transferOwnership",
            "offset": [400, 423],
            "op": "LT",
            "path": "4"
        },
        "2525": {
            "fn": "Ownable.transferOwnership",
            "offset": [400, 423],
            "op": "PUSH2",
            "path": "4",
            "value": "0x9E5"
        },
        "2528": {
            "fn": "Ownable.transferOwnership",
            "offset": [400, 423],
            "op": "JUMPI",
            "path": "4"
        },
        "2529": {
            "fn": "Ownable.transferOwnership",
            "offset": [400, 423],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "2531": {
            "fn": "Ownable.transferOwnership",
            "offset": [400, 423],
            "op": "DUP1",
            "path": "4"
        },
        "2532": {
            "fn": "Ownable.transferOwnership",
            "offset": [400, 423],
            "op": "REVERT",
            "path": "4"
        },
        "2533": {
            "fn": "Ownable.transferOwnership",
            "offset": [400, 423],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2534": {
            "fn": "Ownable.transferOwnership",
            "offset": [400, 423],
            "op": "SWAP1",
            "path": "4"
        },
        "2535": {
            "fn": "Ownable.transferOwnership",
            "offset": [400, 423],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "2537": {
            "fn": "Ownable.transferOwnership",
            "offset": [400, 423],
            "op": "MSTORE",
            "path": "4"
        },
        "2538": {
            "fn": "Ownable.transferOwnership",
            "offset": [400, 423],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "2540": {
            "fn": "Ownable.transferOwnership",
            "offset": [400, 423],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "2542": {
            "fn": "Ownable.transferOwnership",
            "offset": [400, 423],
            "op": "KECCAK256",
            "path": "4"
        },
        "2543": {
            "fn": "Ownable.transferOwnership",
            "offset": [400, 423],
            "op": "ADD",
            "path": "4"
        },
        "2544": {
            "fn": "Ownable.transferOwnership",
            "offset": [400, 423],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "2546": {
            "fn": "Ownable.transferOwnership",
            "offset": [400, 423],
            "op": "SWAP2",
            "path": "4"
        },
        "2547": {
            "fn": "Ownable.transferOwnership",
            "offset": [400, 423],
            "op": "POP",
            "path": "4"
        },
        "2548": {
            "fn": "Ownable.transferOwnership",
            "offset": [400, 423],
            "op": "SWAP1",
            "path": "4"
        },
        "2549": {
            "fn": "Ownable.transferOwnership",
            "offset": [400, 423],
            "op": "POP",
            "path": "4"
        },
        "2550": {
            "fn": "Ownable.transferOwnership",
            "offset": [400, 423],
            "op": "DUP1",
            "path": "4"
        },
        "2551": {
            "fn": "Ownable.transferOwnership",
            "offset": [400, 423],
            "op": "SLOAD",
            "path": "4"
        },
        "2552": {
            "fn": "Ownable.transferOwnership",
            "offset": [400, 423],
            "op": "PUSH2",
            "path": "4",
            "value": "0x7E0"
        },
        "2555": {
            "fn": "Ownable.transferOwnership",
            "offset": [400, 423],
            "op": "SWAP1",
            "path": "4"
        },
        "2556": {
            "fn": "Ownable.transferOwnership",
            "offset": [400, 423],
            "op": "PUSH2",
            "path": "4",
            "value": "0xEAF"
        },
        "2559": {
            "fn": "Ownable.transferOwnership",
            "jump": "i",
            "offset": [400, 423],
            "op": "JUMP",
            "path": "4"
        },
        "2560": {
            "fn": "VotingSession.uint2str",
            "offset": [2838, 3435],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2561": {
            "fn": "VotingSession.uint2str",
            "offset": [2915, 2942],
            "op": "PUSH1",
            "path": "4",
            "value": "0x60"
        },
        "2563": {
            "branch": 38,
            "fn": "VotingSession.uint2str",
            "offset": [2962, 2969],
            "op": "DUP2",
            "path": "4"
        },
        "2564": {
            "fn": "VotingSession.uint2str",
            "offset": [2958, 3006],
            "op": "PUSH2",
            "path": "4",
            "value": "0xA24"
        },
        "2567": {
            "branch": 38,
            "fn": "VotingSession.uint2str",
            "offset": [2958, 3006],
            "op": "JUMPI",
            "path": "4"
        },
        "2568": {
            "op": "POP"
        },
        "2569": {
            "op": "POP"
        },
        "2570": {
            "fn": "VotingSession.uint2str",
            "offset": [2985, 2995],
            "op": "PUSH1",
            "path": "4",
            "statement": 21,
            "value": "0x40"
        },
        "2572": {
            "fn": "VotingSession.uint2str",
            "offset": [2985, 2995],
            "op": "DUP1",
            "path": "4"
        },
        "2573": {
            "fn": "VotingSession.uint2str",
            "offset": [2985, 2995],
            "op": "MLOAD",
            "path": "4"
        },
        "2574": {
            "fn": "VotingSession.uint2str",
            "offset": [2985, 2995],
            "op": "DUP1",
            "path": "4"
        },
        "2575": {
            "fn": "VotingSession.uint2str",
            "offset": [2985, 2995],
            "op": "DUP3",
            "path": "4"
        },
        "2576": {
            "fn": "VotingSession.uint2str",
            "offset": [2985, 2995],
            "op": "ADD",
            "path": "4"
        },
        "2577": {
            "fn": "VotingSession.uint2str",
            "offset": [2985, 2995],
            "op": "SWAP1",
            "path": "4"
        },
        "2578": {
            "fn": "VotingSession.uint2str",
            "offset": [2985, 2995],
            "op": "SWAP2",
            "path": "4"
        },
        "2579": {
            "fn": "VotingSession.uint2str",
            "offset": [2985, 2995],
            "op": "MSTORE",
            "path": "4"
        },
        "2580": {
            "fn": "VotingSession.uint2str",
            "offset": [2985, 2995],
            "op": "PUSH1",
            "path": "4",
            "value": "0x1"
        },
        "2582": {
            "fn": "VotingSession.uint2str",
            "offset": [2985, 2995],
            "op": "DUP2",
            "path": "4"
        },
        "2583": {
            "fn": "VotingSession.uint2str",
            "offset": [2985, 2995],
            "op": "MSTORE",
            "path": "4"
        },
        "2584": {
            "op": "PUSH1",
            "value": "0x3"
        },
        "2586": {
            "op": "PUSH1",
            "value": "0xFC"
        },
        "2588": {
            "op": "SHL"
        },
        "2589": {
            "fn": "VotingSession.uint2str",
            "offset": [2985, 2995],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "2591": {
            "fn": "VotingSession.uint2str",
            "offset": [2985, 2995],
            "op": "DUP3",
            "path": "4"
        },
        "2592": {
            "fn": "VotingSession.uint2str",
            "offset": [2985, 2995],
            "op": "ADD",
            "path": "4"
        },
        "2593": {
            "fn": "VotingSession.uint2str",
            "offset": [2985, 2995],
            "op": "MSTORE",
            "path": "4"
        },
        "2594": {
            "fn": "VotingSession.uint2str",
            "offset": [2985, 2995],
            "op": "SWAP1",
            "path": "4"
        },
        "2595": {
            "fn": "VotingSession.uint2str",
            "jump": "o",
            "offset": [2838, 3435],
            "op": "JUMP",
            "path": "4"
        },
        "2596": {
            "fn": "VotingSession.uint2str",
            "offset": [2958, 3006],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2597": {
            "fn": "VotingSession.uint2str",
            "offset": [3027, 3029],
            "op": "DUP2",
            "path": "4"
        },
        "2598": {
            "fn": "VotingSession.uint2str",
            "offset": [3015, 3024],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "2600": {
            "fn": "VotingSession.uint2str",
            "offset": [3060, 3126],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2601": {
            "fn": "VotingSession.uint2str",
            "offset": [3067, 3073],
            "op": "DUP2",
            "path": "4"
        },
        "2602": {
            "fn": "VotingSession.uint2str",
            "offset": [3067, 3073],
            "op": "ISZERO",
            "path": "4"
        },
        "2603": {
            "fn": "VotingSession.uint2str",
            "offset": [3060, 3126],
            "op": "PUSH2",
            "path": "4",
            "value": "0xA4E"
        },
        "2606": {
            "fn": "VotingSession.uint2str",
            "offset": [3060, 3126],
            "op": "JUMPI",
            "path": "4"
        },
        "2607": {
            "fn": "VotingSession.uint2str",
            "offset": [3089, 3094],
            "op": "DUP1",
            "path": "4",
            "statement": 22
        },
        "2608": {
            "fn": "VotingSession.uint2str",
            "offset": [3089, 3094],
            "op": "PUSH2",
            "path": "4",
            "value": "0xA38"
        },
        "2611": {
            "fn": "VotingSession.uint2str",
            "offset": [3089, 3094],
            "op": "DUP2",
            "path": "4"
        },
        "2612": {
            "fn": "VotingSession.uint2str",
            "offset": [3089, 3094],
            "op": "PUSH2",
            "path": "4",
            "value": "0xF96"
        },
        "2615": {
            "fn": "VotingSession.uint2str",
            "jump": "i",
            "offset": [3089, 3094],
            "op": "JUMP",
            "path": "4"
        },
        "2616": {
            "fn": "VotingSession.uint2str",
            "offset": [3089, 3094],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2617": {
            "fn": "VotingSession.uint2str",
            "offset": [3089, 3094],
            "op": "SWAP2",
            "path": "4"
        },
        "2618": {
            "op": "POP"
        },
        "2619": {
            "fn": "VotingSession.uint2str",
            "offset": [3108, 3115],
            "op": "PUSH2",
            "path": "4",
            "statement": 23,
            "value": "0xA47"
        },
        "2622": {
            "fn": "VotingSession.uint2str",
            "offset": [3108, 3115],
            "op": "SWAP1",
            "path": "4"
        },
        "2623": {
            "op": "POP"
        },
        "2624": {
            "fn": "VotingSession.uint2str",
            "offset": [3113, 3115],
            "op": "PUSH1",
            "path": "4",
            "value": "0xA"
        },
        "2626": {
            "fn": "VotingSession.uint2str",
            "offset": [3108, 3115],
            "op": "DUP4",
            "path": "4"
        },
        "2627": {
            "fn": "VotingSession.uint2str",
            "offset": [3108, 3115],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1090"
        },
        "2630": {
            "fn": "VotingSession.uint2str",
            "jump": "i",
            "offset": [3108, 3115],
            "op": "JUMP",
            "path": "4"
        },
        "2631": {
            "fn": "VotingSession.uint2str",
            "offset": [3108, 3115],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2632": {
            "fn": "VotingSession.uint2str",
            "offset": [3108, 3115],
            "op": "SWAP2",
            "path": "4"
        },
        "2633": {
            "fn": "VotingSession.uint2str",
            "offset": [3108, 3115],
            "op": "POP",
            "path": "4"
        },
        "2634": {
            "fn": "VotingSession.uint2str",
            "offset": [3060, 3126],
            "op": "PUSH2",
            "path": "4",
            "value": "0xA28"
        },
        "2637": {
            "fn": "VotingSession.uint2str",
            "offset": [3060, 3126],
            "op": "JUMP",
            "path": "4"
        },
        "2638": {
            "fn": "VotingSession.uint2str",
            "offset": [3060, 3126],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2639": {
            "fn": "VotingSession.uint2str",
            "offset": [3135, 3152],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "2641": {
            "fn": "VotingSession.uint2str",
            "offset": [3165, 3168],
            "op": "DUP2",
            "path": "4"
        },
        "2642": {
            "fn": "VotingSession.uint2str",
            "offset": [3155, 3169],
            "op": "PUSH8",
            "path": "4",
            "value": "0xFFFFFFFFFFFFFFFF"
        },
        "2651": {
            "fn": "VotingSession.uint2str",
            "offset": [3155, 3169],
            "op": "DUP2",
            "path": "4"
        },
        "2652": {
            "fn": "VotingSession.uint2str",
            "offset": [3155, 3169],
            "op": "GT",
            "path": "4"
        },
        "2653": {
            "fn": "VotingSession.uint2str",
            "offset": [3155, 3169],
            "op": "ISZERO",
            "path": "4"
        },
        "2654": {
            "fn": "VotingSession.uint2str",
            "offset": [3155, 3169],
            "op": "PUSH2",
            "path": "4",
            "value": "0xA69"
        },
        "2657": {
            "fn": "VotingSession.uint2str",
            "offset": [3155, 3169],
            "op": "JUMPI",
            "path": "4"
        },
        "2658": {
            "fn": "VotingSession.uint2str",
            "offset": [3155, 3169],
            "op": "PUSH2",
            "path": "4",
            "value": "0xA69"
        },
        "2661": {
            "fn": "VotingSession.uint2str",
            "offset": [3155, 3169],
            "op": "PUSH2",
            "path": "4",
            "value": "0xC47"
        },
        "2664": {
            "fn": "VotingSession.uint2str",
            "jump": "i",
            "offset": [3155, 3169],
            "op": "JUMP",
            "path": "4"
        },
        "2665": {
            "fn": "VotingSession.uint2str",
            "offset": [3155, 3169],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2666": {
            "fn": "VotingSession.uint2str",
            "offset": [3155, 3169],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "2668": {
            "fn": "VotingSession.uint2str",
            "offset": [3155, 3169],
            "op": "MLOAD",
            "path": "4"
        },
        "2669": {
            "fn": "VotingSession.uint2str",
            "offset": [3155, 3169],
            "op": "SWAP1",
            "path": "4"
        },
        "2670": {
            "fn": "VotingSession.uint2str",
            "offset": [3155, 3169],
            "op": "DUP1",
            "path": "4"
        },
        "2671": {
            "fn": "VotingSession.uint2str",
            "offset": [3155, 3169],
            "op": "DUP3",
            "path": "4"
        },
        "2672": {
            "fn": "VotingSession.uint2str",
            "offset": [3155, 3169],
            "op": "MSTORE",
            "path": "4"
        },
        "2673": {
            "fn": "VotingSession.uint2str",
            "offset": [3155, 3169],
            "op": "DUP1",
            "path": "4"
        },
        "2674": {
            "fn": "VotingSession.uint2str",
            "offset": [3155, 3169],
            "op": "PUSH1",
            "path": "4",
            "value": "0x1F"
        },
        "2676": {
            "fn": "VotingSession.uint2str",
            "offset": [3155, 3169],
            "op": "ADD",
            "path": "4"
        },
        "2677": {
            "fn": "VotingSession.uint2str",
            "offset": [3155, 3169],
            "op": "PUSH1",
            "path": "4",
            "value": "0x1F"
        },
        "2679": {
            "fn": "VotingSession.uint2str",
            "offset": [3155, 3169],
            "op": "NOT",
            "path": "4"
        },
        "2680": {
            "fn": "VotingSession.uint2str",
            "offset": [3155, 3169],
            "op": "AND",
            "path": "4"
        },
        "2681": {
            "fn": "VotingSession.uint2str",
            "offset": [3155, 3169],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "2683": {
            "fn": "VotingSession.uint2str",
            "offset": [3155, 3169],
            "op": "ADD",
            "path": "4"
        },
        "2684": {
            "fn": "VotingSession.uint2str",
            "offset": [3155, 3169],
            "op": "DUP3",
            "path": "4"
        },
        "2685": {
            "fn": "VotingSession.uint2str",
            "offset": [3155, 3169],
            "op": "ADD",
            "path": "4"
        },
        "2686": {
            "fn": "VotingSession.uint2str",
            "offset": [3155, 3169],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "2688": {
            "fn": "VotingSession.uint2str",
            "offset": [3155, 3169],
            "op": "MSTORE",
            "path": "4"
        },
        "2689": {
            "fn": "VotingSession.uint2str",
            "offset": [3155, 3169],
            "op": "DUP1",
            "path": "4"
        },
        "2690": {
            "fn": "VotingSession.uint2str",
            "offset": [3155, 3169],
            "op": "ISZERO",
            "path": "4"
        },
        "2691": {
            "fn": "VotingSession.uint2str",
            "offset": [3155, 3169],
            "op": "PUSH2",
            "path": "4",
            "value": "0xA93"
        },
        "2694": {
            "fn": "VotingSession.uint2str",
            "offset": [3155, 3169],
            "op": "JUMPI",
            "path": "4"
        },
        "2695": {
            "fn": "VotingSession.uint2str",
            "offset": [3155, 3169],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "2697": {
            "fn": "VotingSession.uint2str",
            "offset": [3155, 3169],
            "op": "DUP3",
            "path": "4"
        },
        "2698": {
            "fn": "VotingSession.uint2str",
            "offset": [3155, 3169],
            "op": "ADD",
            "path": "4"
        },
        "2699": {
            "fn": "VotingSession.uint2str",
            "offset": [3155, 3169],
            "op": "DUP2",
            "path": "4"
        },
        "2700": {
            "fn": "VotingSession.uint2str",
            "offset": [3155, 3169],
            "op": "DUP1",
            "path": "4"
        },
        "2701": {
            "fn": "VotingSession.uint2str",
            "offset": [3155, 3169],
            "op": "CALLDATASIZE",
            "path": "4"
        },
        "2702": {
            "fn": "VotingSession.uint2str",
            "offset": [3155, 3169],
            "op": "DUP4",
            "path": "4"
        },
        "2703": {
            "fn": "VotingSession.uint2str",
            "offset": [3155, 3169],
            "op": "CALLDATACOPY",
            "path": "4"
        },
        "2704": {
            "fn": "VotingSession.uint2str",
            "offset": [3155, 3169],
            "op": "ADD",
            "path": "4"
        },
        "2705": {
            "fn": "VotingSession.uint2str",
            "offset": [3155, 3169],
            "op": "SWAP1",
            "path": "4"
        },
        "2706": {
            "op": "POP"
        },
        "2707": {
            "fn": "VotingSession.uint2str",
            "offset": [3155, 3169],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2708": {
            "op": "POP"
        },
        "2709": {
            "fn": "VotingSession.uint2str",
            "offset": [3135, 3169],
            "op": "SWAP1",
            "path": "4"
        },
        "2710": {
            "op": "POP"
        },
        "2711": {
            "fn": "VotingSession.uint2str",
            "offset": [3191, 3194],
            "op": "DUP2",
            "path": "4"
        },
        "2712": {
            "fn": "VotingSession.uint2str",
            "offset": [3204, 3400],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2713": {
            "fn": "VotingSession.uint2str",
            "offset": [3211, 3218],
            "op": "DUP6",
            "path": "4"
        },
        "2714": {
            "fn": "VotingSession.uint2str",
            "offset": [3211, 3218],
            "op": "ISZERO",
            "path": "4"
        },
        "2715": {
            "fn": "VotingSession.uint2str",
            "offset": [3204, 3400],
            "op": "PUSH2",
            "path": "4",
            "value": "0xB20"
        },
        "2718": {
            "fn": "VotingSession.uint2str",
            "offset": [3204, 3400],
            "op": "JUMPI",
            "path": "4"
        },
        "2719": {
            "fn": "VotingSession.uint2str",
            "offset": [3238, 3243],
            "op": "PUSH2",
            "path": "4",
            "statement": 24,
            "value": "0xAA9"
        },
        "2722": {
            "fn": "VotingSession.uint2str",
            "offset": [3242, 3243],
            "op": "PUSH1",
            "path": "4",
            "value": "0x1"
        },
        "2724": {
            "fn": "VotingSession.uint2str",
            "offset": [3238, 3239],
            "op": "DUP3",
            "path": "4"
        },
        "2725": {
            "fn": "VotingSession.uint2str",
            "offset": [3238, 3243],
            "op": "PUSH2",
            "path": "4",
            "value": "0x10B2"
        },
        "2728": {
            "fn": "VotingSession.uint2str",
            "jump": "i",
            "offset": [3238, 3243],
            "op": "JUMP",
            "path": "4"
        },
        "2729": {
            "fn": "VotingSession.uint2str",
            "offset": [3238, 3243],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2730": {
            "fn": "VotingSession.uint2str",
            "offset": [3234, 3243],
            "op": "SWAP1",
            "path": "4"
        },
        "2731": {
            "op": "POP"
        },
        "2732": {
            "fn": "VotingSession.uint2str",
            "offset": [3257, 3267],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "2734": {
            "fn": "VotingSession.uint2str",
            "offset": [3288, 3295],
            "op": "PUSH2",
            "path": "4",
            "value": "0xAB8"
        },
        "2737": {
            "fn": "VotingSession.uint2str",
            "offset": [3293, 3295],
            "op": "PUSH1",
            "path": "4",
            "value": "0xA"
        },
        "2739": {
            "fn": "VotingSession.uint2str",
            "offset": [3288, 3290],
            "op": "DUP9",
            "path": "4"
        },
        "2740": {
            "fn": "VotingSession.uint2str",
            "offset": [3288, 3295],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1090"
        },
        "2743": {
            "fn": "VotingSession.uint2str",
            "jump": "i",
            "offset": [3288, 3295],
            "op": "JUMP",
            "path": "4"
        },
        "2744": {
            "fn": "VotingSession.uint2str",
            "offset": [3288, 3295],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2745": {
            "fn": "VotingSession.uint2str",
            "offset": [3287, 3301],
            "op": "PUSH2",
            "path": "4",
            "value": "0xAC3"
        },
        "2748": {
            "fn": "VotingSession.uint2str",
            "offset": [3287, 3301],
            "op": "SWAP1",
            "path": "4"
        },
        "2749": {
            "fn": "VotingSession.uint2str",
            "offset": [3299, 3301],
            "op": "PUSH1",
            "path": "4",
            "value": "0xA"
        },
        "2751": {
            "fn": "VotingSession.uint2str",
            "offset": [3287, 3301],
            "op": "PUSH2",
            "path": "4",
            "value": "0x10C9"
        },
        "2754": {
            "fn": "VotingSession.uint2str",
            "jump": "i",
            "offset": [3287, 3301],
            "op": "JUMP",
            "path": "4"
        },
        "2755": {
            "fn": "VotingSession.uint2str",
            "offset": [3287, 3301],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2756": {
            "fn": "VotingSession.uint2str",
            "offset": [3282, 3301],
            "op": "PUSH2",
            "path": "4",
            "value": "0xACD"
        },
        "2759": {
            "fn": "VotingSession.uint2str",
            "offset": [3282, 3301],
            "op": "SWAP1",
            "path": "4"
        },
        "2760": {
            "fn": "VotingSession.uint2str",
            "offset": [3282, 3284],
            "op": "DUP9",
            "path": "4"
        },
        "2761": {
            "fn": "VotingSession.uint2str",
            "offset": [3282, 3301],
            "op": "PUSH2",
            "path": "4",
            "value": "0x10B2"
        },
        "2764": {
            "fn": "VotingSession.uint2str",
            "jump": "i",
            "offset": [3282, 3301],
            "op": "JUMP",
            "path": "4"
        },
        "2765": {
            "fn": "VotingSession.uint2str",
            "offset": [3282, 3301],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2766": {
            "fn": "VotingSession.uint2str",
            "offset": [3271, 3302],
            "op": "PUSH2",
            "path": "4",
            "value": "0xAD8"
        },
        "2769": {
            "fn": "VotingSession.uint2str",
            "offset": [3271, 3302],
            "op": "SWAP1",
            "path": "4"
        },
        "2770": {
            "fn": "VotingSession.uint2str",
            "offset": [3271, 3273],
            "op": "PUSH1",
            "path": "4",
            "value": "0x30"
        },
        "2772": {
            "fn": "VotingSession.uint2str",
            "offset": [3271, 3302],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1044"
        },
        "2775": {
            "fn": "VotingSession.uint2str",
            "jump": "i",
            "offset": [3271, 3302],
            "op": "JUMP",
            "path": "4"
        },
        "2776": {
            "fn": "VotingSession.uint2str",
            "offset": [3271, 3302],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2777": {
            "fn": "VotingSession.uint2str",
            "offset": [3257, 3303],
            "op": "SWAP1",
            "path": "4"
        },
        "2778": {
            "fn": "VotingSession.uint2str",
            "offset": [3257, 3303],
            "op": "POP",
            "path": "4"
        },
        "2779": {
            "fn": "VotingSession.uint2str",
            "offset": [3317, 3326],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "2781": {
            "fn": "VotingSession.uint2str",
            "offset": [3336, 3340],
            "op": "DUP2",
            "path": "4"
        },
        "2782": {
            "fn": "VotingSession.uint2str",
            "offset": [3329, 3341],
            "op": "PUSH1",
            "path": "4",
            "value": "0xF8"
        },
        "2784": {
            "fn": "VotingSession.uint2str",
            "offset": [3329, 3341],
            "op": "SHL",
            "path": "4"
        },
        "2785": {
            "fn": "VotingSession.uint2str",
            "offset": [3317, 3341],
            "op": "SWAP1",
            "path": "4"
        },
        "2786": {
            "fn": "VotingSession.uint2str",
            "offset": [3317, 3341],
            "op": "POP",
            "path": "4"
        },
        "2787": {
            "fn": "VotingSession.uint2str",
            "offset": [3365, 3367],
            "op": "DUP1",
            "path": "4",
            "statement": 25
        },
        "2788": {
            "fn": "VotingSession.uint2str",
            "offset": [3355, 3359],
            "op": "DUP5",
            "path": "4"
        },
        "2789": {
            "fn": "VotingSession.uint2str",
            "offset": [3360, 3361],
            "op": "DUP5",
            "path": "4"
        },
        "2790": {
            "fn": "VotingSession.uint2str",
            "offset": [3355, 3362],
            "op": "DUP2",
            "path": "4"
        },
        "2791": {
            "fn": "VotingSession.uint2str",
            "offset": [3355, 3362],
            "op": "MLOAD",
            "path": "4"
        },
        "2792": {
            "fn": "VotingSession.uint2str",
            "offset": [3355, 3362],
            "op": "DUP2",
            "path": "4"
        },
        "2793": {
            "fn": "VotingSession.uint2str",
            "offset": [3355, 3362],
            "op": "LT",
            "path": "4"
        },
        "2794": {
            "fn": "VotingSession.uint2str",
            "offset": [3355, 3362],
            "op": "PUSH2",
            "path": "4",
            "value": "0xAF5"
        },
        "2797": {
            "fn": "VotingSession.uint2str",
            "offset": [3355, 3362],
            "op": "JUMPI",
            "path": "4"
        },
        "2798": {
            "fn": "VotingSession.uint2str",
            "offset": [3355, 3362],
            "op": "PUSH2",
            "path": "4",
            "value": "0xAF5"
        },
        "2801": {
            "fn": "VotingSession.uint2str",
            "offset": [3355, 3362],
            "op": "PUSH2",
            "path": "4",
            "value": "0xE99"
        },
        "2804": {
            "fn": "VotingSession.uint2str",
            "jump": "i",
            "offset": [3355, 3362],
            "op": "JUMP",
            "path": "4"
        },
        "2805": {
            "fn": "VotingSession.uint2str",
            "offset": [3355, 3362],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2806": {
            "fn": "VotingSession.uint2str",
            "offset": [3355, 3362],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "2808": {
            "fn": "VotingSession.uint2str",
            "offset": [3355, 3362],
            "op": "ADD",
            "path": "4"
        },
        "2809": {
            "fn": "VotingSession.uint2str",
            "offset": [3355, 3362],
            "op": "ADD",
            "path": "4"
        },
        "2810": {
            "fn": "VotingSession.uint2str",
            "offset": [3355, 3367],
            "op": "SWAP1",
            "path": "4"
        },
        "2811": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "2813": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "2815": {
            "op": "PUSH1",
            "value": "0xF8"
        },
        "2817": {
            "op": "SHL"
        },
        "2818": {
            "op": "SUB"
        },
        "2819": {
            "fn": "VotingSession.uint2str",
            "offset": [3355, 3367],
            "op": "NOT",
            "path": "4"
        },
        "2820": {
            "fn": "VotingSession.uint2str",
            "offset": [3355, 3367],
            "op": "AND",
            "path": "4"
        },
        "2821": {
            "fn": "VotingSession.uint2str",
            "offset": [3355, 3367],
            "op": "SWAP1",
            "path": "4"
        },
        "2822": {
            "fn": "VotingSession.uint2str",
            "offset": [3355, 3367],
            "op": "DUP2",
            "path": "4"
        },
        "2823": {
            "fn": "VotingSession.uint2str",
            "offset": [3355, 3367],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "2825": {
            "fn": "VotingSession.uint2str",
            "offset": [3355, 3367],
            "op": "BYTE",
            "path": "4"
        },
        "2826": {
            "fn": "VotingSession.uint2str",
            "offset": [3355, 3367],
            "op": "SWAP1",
            "path": "4"
        },
        "2827": {
            "fn": "VotingSession.uint2str",
            "offset": [3355, 3367],
            "op": "MSTORE8",
            "path": "4"
        },
        "2828": {
            "op": "POP"
        },
        "2829": {
            "fn": "VotingSession.uint2str",
            "offset": [3381, 3389],
            "op": "PUSH2",
            "path": "4",
            "statement": 26,
            "value": "0xB17"
        },
        "2832": {
            "fn": "VotingSession.uint2str",
            "offset": [3387, 3389],
            "op": "PUSH1",
            "path": "4",
            "value": "0xA"
        },
        "2834": {
            "fn": "VotingSession.uint2str",
            "offset": [3381, 3389],
            "op": "DUP10",
            "path": "4"
        },
        "2835": {
            "fn": "VotingSession.uint2str",
            "offset": [3381, 3389],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1090"
        },
        "2838": {
            "fn": "VotingSession.uint2str",
            "jump": "i",
            "offset": [3381, 3389],
            "op": "JUMP",
            "path": "4"
        },
        "2839": {
            "fn": "VotingSession.uint2str",
            "offset": [3381, 3389],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2840": {
            "fn": "VotingSession.uint2str",
            "offset": [3381, 3389],
            "op": "SWAP8",
            "path": "4"
        },
        "2841": {
            "fn": "VotingSession.uint2str",
            "offset": [3381, 3389],
            "op": "POP",
            "path": "4"
        },
        "2842": {
            "fn": "VotingSession.uint2str",
            "offset": [3220, 3400],
            "op": "POP",
            "path": "4"
        },
        "2843": {
            "fn": "VotingSession.uint2str",
            "offset": [3220, 3400],
            "op": "POP",
            "path": "4"
        },
        "2844": {
            "fn": "VotingSession.uint2str",
            "offset": [3204, 3400],
            "op": "PUSH2",
            "path": "4",
            "value": "0xA98"
        },
        "2847": {
            "fn": "VotingSession.uint2str",
            "offset": [3204, 3400],
            "op": "JUMP",
            "path": "4"
        },
        "2848": {
            "fn": "VotingSession.uint2str",
            "offset": [3204, 3400],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2849": {
            "op": "POP"
        },
        "2850": {
            "fn": "VotingSession.uint2str",
            "offset": [3423, 3427],
            "op": "SWAP5",
            "path": "4",
            "statement": 27
        },
        "2851": {
            "fn": "VotingSession.uint2str",
            "offset": [2838, 3435],
            "op": "SWAP4",
            "path": "4"
        },
        "2852": {
            "op": "POP"
        },
        "2853": {
            "op": "POP"
        },
        "2854": {
            "op": "POP"
        },
        "2855": {
            "op": "POP"
        },
        "2856": {
            "fn": "VotingSession.uint2str",
            "jump": "o",
            "offset": [2838, 3435],
            "op": "JUMP",
            "path": "4"
        },
        "2857": {
            "fn": "VotingSession.append",
            "offset": [2584, 2832],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2858": {
            "fn": "VotingSession.append",
            "offset": [2754, 2767],
            "op": "PUSH1",
            "path": "4",
            "value": "0x60"
        },
        "2860": {
            "fn": "VotingSession.append",
            "offset": [2810, 2811],
            "op": "DUP6",
            "path": "4",
            "statement": 28
        },
        "2861": {
            "fn": "VotingSession.append",
            "offset": [2813, 2814],
            "op": "DUP6",
            "path": "4"
        },
        "2862": {
            "fn": "VotingSession.append",
            "offset": [2816, 2817],
            "op": "DUP6",
            "path": "4"
        },
        "2863": {
            "fn": "VotingSession.append",
            "offset": [2819, 2820],
            "op": "DUP6",
            "path": "4"
        },
        "2864": {
            "fn": "VotingSession.append",
            "offset": [2822, 2823],
            "op": "DUP6",
            "path": "4"
        },
        "2865": {
            "fn": "VotingSession.append",
            "offset": [2793, 2824],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "2867": {
            "fn": "VotingSession.append",
            "offset": [2793, 2824],
            "op": "MLOAD",
            "path": "4"
        },
        "2868": {
            "fn": "VotingSession.append",
            "offset": [2793, 2824],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "2870": {
            "fn": "VotingSession.append",
            "offset": [2793, 2824],
            "op": "ADD",
            "path": "4"
        },
        "2871": {
            "fn": "VotingSession.append",
            "offset": [2793, 2824],
            "op": "PUSH2",
            "path": "4",
            "value": "0xB44"
        },
        "2874": {
            "fn": "VotingSession.append",
            "offset": [2793, 2824],
            "op": "SWAP6",
            "path": "4"
        },
        "2875": {
            "fn": "VotingSession.append",
            "offset": [2793, 2824],
            "op": "SWAP5",
            "path": "4"
        },
        "2876": {
            "fn": "VotingSession.append",
            "offset": [2793, 2824],
            "op": "SWAP4",
            "path": "4"
        },
        "2877": {
            "fn": "VotingSession.append",
            "offset": [2793, 2824],
            "op": "SWAP3",
            "path": "4"
        },
        "2878": {
            "fn": "VotingSession.append",
            "offset": [2793, 2824],
            "op": "SWAP2",
            "path": "4"
        },
        "2879": {
            "fn": "VotingSession.append",
            "offset": [2793, 2824],
            "op": "SWAP1",
            "path": "4"
        },
        "2880": {
            "fn": "VotingSession.append",
            "offset": [2793, 2824],
            "op": "PUSH2",
            "path": "4",
            "value": "0x10E8"
        },
        "2883": {
            "fn": "VotingSession.append",
            "jump": "i",
            "offset": [2793, 2824],
            "op": "JUMP",
            "path": "4"
        },
        "2884": {
            "fn": "VotingSession.append",
            "offset": [2793, 2824],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2885": {
            "fn": "VotingSession.append",
            "offset": [2793, 2824],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "2887": {
            "fn": "VotingSession.append",
            "offset": [2793, 2824],
            "op": "MLOAD",
            "path": "4"
        },
        "2888": {
            "fn": "VotingSession.append",
            "offset": [2793, 2824],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "2890": {
            "fn": "VotingSession.append",
            "offset": [2793, 2824],
            "op": "DUP2",
            "path": "4"
        },
        "2891": {
            "fn": "VotingSession.append",
            "offset": [2793, 2824],
            "op": "DUP4",
            "path": "4"
        },
        "2892": {
            "fn": "VotingSession.append",
            "offset": [2793, 2824],
            "op": "SUB",
            "path": "4"
        },
        "2893": {
            "fn": "VotingSession.append",
            "offset": [2793, 2824],
            "op": "SUB",
            "path": "4"
        },
        "2894": {
            "fn": "VotingSession.append",
            "offset": [2793, 2824],
            "op": "DUP2",
            "path": "4"
        },
        "2895": {
            "fn": "VotingSession.append",
            "offset": [2793, 2824],
            "op": "MSTORE",
            "path": "4"
        },
        "2896": {
            "fn": "VotingSession.append",
            "offset": [2793, 2824],
            "op": "SWAP1",
            "path": "4"
        },
        "2897": {
            "fn": "VotingSession.append",
            "offset": [2793, 2824],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "2899": {
            "fn": "VotingSession.append",
            "offset": [2793, 2824],
            "op": "MSTORE",
            "path": "4"
        },
        "2900": {
            "fn": "VotingSession.append",
            "offset": [2779, 2825],
            "op": "SWAP1",
            "path": "4"
        },
        "2901": {
            "fn": "VotingSession.append",
            "offset": [2779, 2825],
            "op": "POP",
            "path": "4"
        },
        "2902": {
            "fn": "VotingSession.append",
            "offset": [2584, 2832],
            "op": "SWAP6",
            "path": "4"
        },
        "2903": {
            "fn": "VotingSession.append",
            "offset": [2584, 2832],
            "op": "SWAP5",
            "path": "4"
        },
        "2904": {
            "fn": "VotingSession.append",
            "offset": [2584, 2832],
            "op": "POP",
            "path": "4"
        },
        "2905": {
            "fn": "VotingSession.append",
            "offset": [2584, 2832],
            "op": "POP",
            "path": "4"
        },
        "2906": {
            "fn": "VotingSession.append",
            "offset": [2584, 2832],
            "op": "POP",
            "path": "4"
        },
        "2907": {
            "fn": "VotingSession.append",
            "offset": [2584, 2832],
            "op": "POP",
            "path": "4"
        },
        "2908": {
            "fn": "VotingSession.append",
            "offset": [2584, 2832],
            "op": "POP",
            "path": "4"
        },
        "2909": {
            "fn": "VotingSession.append",
            "jump": "o",
            "offset": [2584, 2832],
            "op": "JUMP",
            "path": "4"
        },
        "2910": {
            "fn": "Ownable._setOwner",
            "offset": [2041, 2210],
            "op": "JUMPDEST",
            "path": "0"
        },
        "2911": {
            "fn": "Ownable._setOwner",
            "offset": [2096, 2112],
            "op": "PUSH1",
            "path": "0",
            "value": "0x0"
        },
        "2913": {
            "fn": "Ownable._setOwner",
            "offset": [2115, 2121],
            "op": "DUP1",
            "path": "0"
        },
        "2914": {
            "fn": "Ownable._setOwner",
            "offset": [2115, 2121],
            "op": "SLOAD",
            "path": "0"
        },
        "2915": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "2917": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "2919": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "2921": {
            "op": "SHL"
        },
        "2922": {
            "op": "SUB"
        },
        "2923": {
            "fn": "Ownable._setOwner",
            "offset": [2131, 2148],
            "op": "DUP4",
            "path": "0",
            "statement": 29
        },
        "2924": {
            "fn": "Ownable._setOwner",
            "offset": [2131, 2148],
            "op": "DUP2",
            "path": "0"
        },
        "2925": {
            "fn": "Ownable._setOwner",
            "offset": [2131, 2148],
            "op": "AND",
            "path": "0"
        },
        "2926": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "2928": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "2930": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "2932": {
            "op": "SHL"
        },
        "2933": {
            "op": "SUB"
        },
        "2934": {
            "op": "NOT"
        },
        "2935": {
            "fn": "Ownable._setOwner",
            "offset": [2131, 2148],
            "op": "DUP4",
            "path": "0"
        },
        "2936": {
            "fn": "Ownable._setOwner",
            "offset": [2131, 2148],
            "op": "AND",
            "path": "0"
        },
        "2937": {
            "fn": "Ownable._setOwner",
            "offset": [2131, 2148],
            "op": "DUP2",
            "path": "0"
        },
        "2938": {
            "fn": "Ownable._setOwner",
            "offset": [2131, 2148],
            "op": "OR",
            "path": "0"
        },
        "2939": {
            "fn": "Ownable._setOwner",
            "offset": [2131, 2148],
            "op": "DUP5",
            "path": "0"
        },
        "2940": {
            "fn": "Ownable._setOwner",
            "offset": [2131, 2148],
            "op": "SSTORE",
            "path": "0"
        },
        "2941": {
            "fn": "Ownable._setOwner",
            "offset": [2163, 2203],
            "op": "PUSH1",
            "path": "0",
            "statement": 30,
            "value": "0x40"
        },
        "2943": {
            "fn": "Ownable._setOwner",
            "offset": [2163, 2203],
            "op": "MLOAD",
            "path": "0"
        },
        "2944": {
            "fn": "Ownable._setOwner",
            "offset": [2115, 2121],
            "op": "SWAP2",
            "path": "0"
        },
        "2945": {
            "fn": "Ownable._setOwner",
            "offset": [2115, 2121],
            "op": "SWAP1",
            "path": "0"
        },
        "2946": {
            "fn": "Ownable._setOwner",
            "offset": [2115, 2121],
            "op": "SWAP3",
            "path": "0"
        },
        "2947": {
            "fn": "Ownable._setOwner",
            "offset": [2115, 2121],
            "op": "AND",
            "path": "0"
        },
        "2948": {
            "fn": "Ownable._setOwner",
            "offset": [2115, 2121],
            "op": "SWAP3",
            "path": "0"
        },
        "2949": {
            "fn": "Ownable._setOwner",
            "offset": [2115, 2121],
            "op": "DUP4",
            "path": "0"
        },
        "2950": {
            "fn": "Ownable._setOwner",
            "offset": [2115, 2121],
            "op": "SWAP2",
            "path": "0"
        },
        "2951": {
            "fn": "Ownable._setOwner",
            "offset": [2163, 2203],
            "op": "PUSH32",
            "path": "0",
            "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
        },
        "2984": {
            "fn": "Ownable._setOwner",
            "offset": [2163, 2203],
            "op": "SWAP2",
            "path": "0"
        },
        "2985": {
            "fn": "Ownable._setOwner",
            "offset": [2096, 2112],
            "op": "SWAP1",
            "path": "0"
        },
        "2986": {
            "fn": "Ownable._setOwner",
            "offset": [2163, 2203],
            "op": "LOG3",
            "path": "0"
        },
        "2987": {
            "fn": "Ownable._setOwner",
            "offset": [2086, 2210],
            "op": "POP",
            "path": "0"
        },
        "2988": {
            "fn": "Ownable._setOwner",
            "offset": [2041, 2210],
            "op": "POP",
            "path": "0"
        },
        "2989": {
            "fn": "Ownable._setOwner",
            "jump": "o",
            "offset": [2041, 2210],
            "op": "JUMP",
            "path": "0"
        },
        "2990": {
            "op": "JUMPDEST"
        },
        "2991": {
            "op": "DUP3"
        },
        "2992": {
            "op": "DUP1"
        },
        "2993": {
            "op": "SLOAD"
        },
        "2994": {
            "op": "PUSH2",
            "value": "0xBBA"
        },
        "2997": {
            "op": "SWAP1"
        },
        "2998": {
            "op": "PUSH2",
            "value": "0xEAF"
        },
        "3001": {
            "jump": "i",
            "op": "JUMP"
        },
        "3002": {
            "op": "JUMPDEST"
        },
        "3003": {
            "op": "SWAP1"
        },
        "3004": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "3006": {
            "op": "MSTORE"
        },
        "3007": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "3009": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "3011": {
            "op": "KECCAK256"
        },
        "3012": {
            "op": "SWAP1"
        },
        "3013": {
            "op": "PUSH1",
            "value": "0x1F"
        },
        "3015": {
            "op": "ADD"
        },
        "3016": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "3018": {
            "op": "SWAP1"
        },
        "3019": {
            "op": "DIV"
        },
        "3020": {
            "op": "DUP2"
        },
        "3021": {
            "op": "ADD"
        },
        "3022": {
            "op": "SWAP3"
        },
        "3023": {
            "op": "DUP3"
        },
        "3024": {
            "op": "PUSH2",
            "value": "0xBDC"
        },
        "3027": {
            "op": "JUMPI"
        },
        "3028": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "3030": {
            "op": "DUP6"
        },
        "3031": {
            "op": "SSTORE"
        },
        "3032": {
            "op": "PUSH2",
            "value": "0xC22"
        },
        "3035": {
            "op": "JUMP"
        },
        "3036": {
            "op": "JUMPDEST"
        },
        "3037": {
            "op": "DUP3"
        },
        "3038": {
            "op": "PUSH1",
            "value": "0x1F"
        },
        "3040": {
            "op": "LT"
        },
        "3041": {
            "op": "PUSH2",
            "value": "0xBF5"
        },
        "3044": {
            "op": "JUMPI"
        },
        "3045": {
            "op": "DUP1"
        },
        "3046": {
            "op": "MLOAD"
        },
        "3047": {
            "op": "PUSH1",
            "value": "0xFF"
        },
        "3049": {
            "op": "NOT"
        },
        "3050": {
            "op": "AND"
        },
        "3051": {
            "op": "DUP4"
        },
        "3052": {
            "op": "DUP1"
        },
        "3053": {
            "op": "ADD"
        },
        "3054": {
            "op": "OR"
        },
        "3055": {
            "op": "DUP6"
        },
        "3056": {
            "op": "SSTORE"
        },
        "3057": {
            "op": "PUSH2",
            "value": "0xC22"
        },
        "3060": {
            "op": "JUMP"
        },
        "3061": {
            "op": "JUMPDEST"
        },
        "3062": {
            "op": "DUP3"
        },
        "3063": {
            "op": "DUP1"
        },
        "3064": {
            "op": "ADD"
        },
        "3065": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "3067": {
            "op": "ADD"
        },
        "3068": {
            "op": "DUP6"
        },
        "3069": {
            "op": "SSTORE"
        },
        "3070": {
            "op": "DUP3"
        },
        "3071": {
            "op": "ISZERO"
        },
        "3072": {
            "op": "PUSH2",
            "value": "0xC22"
        },
        "3075": {
            "op": "JUMPI"
        },
        "3076": {
            "op": "SWAP2"
        },
        "3077": {
            "op": "DUP3"
        },
        "3078": {
            "op": "ADD"
        },
        "3079": {
            "op": "JUMPDEST"
        },
        "3080": {
            "op": "DUP3"
        },
        "3081": {
            "op": "DUP2"
        },
        "3082": {
            "op": "GT"
        },
        "3083": {
            "op": "ISZERO"
        },
        "3084": {
            "op": "PUSH2",
            "value": "0xC22"
        },
        "3087": {
            "op": "JUMPI"
        },
        "3088": {
            "op": "DUP3"
        },
        "3089": {
            "op": "MLOAD"
        },
        "3090": {
            "op": "DUP3"
        },
        "3091": {
            "op": "SSTORE"
        },
        "3092": {
            "op": "SWAP2"
        },
        "3093": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "3095": {
            "op": "ADD"
        },
        "3096": {
            "op": "SWAP2"
        },
        "3097": {
            "op": "SWAP1"
        },
        "3098": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "3100": {
            "op": "ADD"
        },
        "3101": {
            "op": "SWAP1"
        },
        "3102": {
            "op": "PUSH2",
            "value": "0xC07"
        },
        "3105": {
            "op": "JUMP"
        },
        "3106": {
            "op": "JUMPDEST"
        },
        "3107": {
            "op": "POP"
        },
        "3108": {
            "op": "PUSH2",
            "value": "0xC2E"
        },
        "3111": {
            "op": "SWAP3"
        },
        "3112": {
            "op": "SWAP2"
        },
        "3113": {
            "op": "POP"
        },
        "3114": {
            "op": "PUSH2",
            "value": "0xC32"
        },
        "3117": {
            "jump": "i",
            "op": "JUMP"
        },
        "3118": {
            "op": "JUMPDEST"
        },
        "3119": {
            "op": "POP"
        },
        "3120": {
            "op": "SWAP1"
        },
        "3121": {
            "jump": "o",
            "op": "JUMP"
        },
        "3122": {
            "op": "JUMPDEST"
        },
        "3123": {
            "op": "JUMPDEST"
        },
        "3124": {
            "op": "DUP1"
        },
        "3125": {
            "op": "DUP3"
        },
        "3126": {
            "op": "GT"
        },
        "3127": {
            "op": "ISZERO"
        },
        "3128": {
            "op": "PUSH2",
            "value": "0xC2E"
        },
        "3131": {
            "op": "JUMPI"
        },
        "3132": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "3134": {
            "op": "DUP2"
        },
        "3135": {
            "op": "SSTORE"
        },
        "3136": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "3138": {
            "op": "ADD"
        },
        "3139": {
            "op": "PUSH2",
            "value": "0xC33"
        },
        "3142": {
            "op": "JUMP"
        },
        "3143": {
            "op": "JUMPDEST"
        },
        "3144": {
            "op": "PUSH4",
            "value": "0x4E487B71"
        },
        "3149": {
            "op": "PUSH1",
            "value": "0xE0"
        },
        "3151": {
            "op": "SHL"
        },
        "3152": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "3154": {
            "op": "MSTORE"
        },
        "3155": {
            "op": "PUSH1",
            "value": "0x41"
        },
        "3157": {
            "op": "PUSH1",
            "value": "0x4"
        },
        "3159": {
            "op": "MSTORE"
        },
        "3160": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "3162": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "3164": {
            "op": "REVERT"
        },
        "3165": {
            "op": "JUMPDEST"
        },
        "3166": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "3168": {
            "op": "DUP3"
        },
        "3169": {
            "op": "PUSH1",
            "value": "0x1F"
        },
        "3171": {
            "op": "DUP4"
        },
        "3172": {
            "op": "ADD"
        },
        "3173": {
            "op": "SLT"
        },
        "3174": {
            "op": "PUSH2",
            "value": "0xC6E"
        },
        "3177": {
            "op": "JUMPI"
        },
        "3178": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "3180": {
            "op": "DUP1"
        },
        "3181": {
            "op": "REVERT"
        },
        "3182": {
            "op": "JUMPDEST"
        },
        "3183": {
            "op": "DUP2"
        },
        "3184": {
            "op": "CALLDATALOAD"
        },
        "3185": {
            "op": "PUSH8",
            "value": "0xFFFFFFFFFFFFFFFF"
        },
        "3194": {
            "op": "DUP1"
        },
        "3195": {
            "op": "DUP3"
        },
        "3196": {
            "op": "GT"
        },
        "3197": {
            "op": "ISZERO"
        },
        "3198": {
            "op": "PUSH2",
            "value": "0xC89"
        },
        "3201": {
            "op": "JUMPI"
        },
        "3202": {
            "op": "PUSH2",
            "value": "0xC89"
        },
        "3205": {
            "op": "PUSH2",
            "value": "0xC47"
        },
        "3208": {
            "jump": "i",
            "op": "JUMP"
        },
        "3209": {
            "op": "JUMPDEST"
        },
        "3210": {
            "op": "PUSH1",
            "value": "0x40"
        },
        "3212": {
            "op": "MLOAD"
        },
        "3213": {
            "op": "PUSH1",
            "value": "0x1F"
        },
        "3215": {
            "op": "DUP4"
        },
        "3216": {
            "op": "ADD"
        },
        "3217": {
            "op": "PUSH1",
            "value": "0x1F"
        },
        "3219": {
            "op": "NOT"
        },
        "3220": {
            "op": "SWAP1"
        },
        "3221": {
            "op": "DUP2"
        },
        "3222": {
            "op": "AND"
        },
        "3223": {
            "op": "PUSH1",
            "value": "0x3F"
        },
        "3225": {
            "op": "ADD"
        },
        "3226": {
            "op": "AND"
        },
        "3227": {
            "op": "DUP2"
        },
        "3228": {
            "op": "ADD"
        },
        "3229": {
            "op": "SWAP1"
        },
        "3230": {
            "op": "DUP3"
        },
        "3231": {
            "op": "DUP3"
        },
        "3232": {
            "op": "GT"
        },
        "3233": {
            "op": "DUP2"
        },
        "3234": {
            "op": "DUP4"
        },
        "3235": {
            "op": "LT"
        },
        "3236": {
            "op": "OR"
        },
        "3237": {
            "op": "ISZERO"
        },
        "3238": {
            "op": "PUSH2",
            "value": "0xCB1"
        },
        "3241": {
            "op": "JUMPI"
        },
        "3242": {
            "op": "PUSH2",
            "value": "0xCB1"
        },
        "3245": {
            "op": "PUSH2",
            "value": "0xC47"
        },
        "3248": {
            "jump": "i",
            "op": "JUMP"
        },
        "3249": {
            "op": "JUMPDEST"
        },
        "3250": {
            "op": "DUP2"
        },
        "3251": {
            "op": "PUSH1",
            "value": "0x40"
        },
        "3253": {
            "op": "MSTORE"
        },
        "3254": {
            "op": "DUP4"
        },
        "3255": {
            "op": "DUP2"
        },
        "3256": {
            "op": "MSTORE"
        },
        "3257": {
            "op": "DUP7"
        },
        "3258": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "3260": {
            "op": "DUP6"
        },
        "3261": {
            "op": "DUP9"
        },
        "3262": {
            "op": "ADD"
        },
        "3263": {
            "op": "ADD"
        },
        "3264": {
            "op": "GT"
        },
        "3265": {
            "op": "ISZERO"
        },
        "3266": {
            "op": "PUSH2",
            "value": "0xCCA"
        },
        "3269": {
            "op": "JUMPI"
        },
        "3270": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "3272": {
            "op": "DUP1"
        },
        "3273": {
            "op": "REVERT"
        },
        "3274": {
            "op": "JUMPDEST"
        },
        "3275": {
            "op": "DUP4"
        },
        "3276": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "3278": {
            "op": "DUP8"
        },
        "3279": {
            "op": "ADD"
        },
        "3280": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "3282": {
            "op": "DUP4"
        },
        "3283": {
            "op": "ADD"
        },
        "3284": {
            "op": "CALLDATACOPY"
        },
        "3285": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "3287": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "3289": {
            "op": "DUP6"
        },
        "3290": {
            "op": "DUP4"
        },
        "3291": {
            "op": "ADD"
        },
        "3292": {
            "op": "ADD"
        },
        "3293": {
            "op": "MSTORE"
        },
        "3294": {
            "op": "DUP1"
        },
        "3295": {
            "op": "SWAP5"
        },
        "3296": {
            "op": "POP"
        },
        "3297": {
            "op": "POP"
        },
        "3298": {
            "op": "POP"
        },
        "3299": {
            "op": "POP"
        },
        "3300": {
            "op": "POP"
        },
        "3301": {
            "op": "SWAP3"
        },
        "3302": {
            "op": "SWAP2"
        },
        "3303": {
            "op": "POP"
        },
        "3304": {
            "op": "POP"
        },
        "3305": {
            "jump": "o",
            "op": "JUMP"
        },
        "3306": {
            "op": "JUMPDEST"
        },
        "3307": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "3309": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "3311": {
            "op": "DUP3"
        },
        "3312": {
            "op": "DUP5"
        },
        "3313": {
            "op": "SUB"
        },
        "3314": {
            "op": "SLT"
        },
        "3315": {
            "op": "ISZERO"
        },
        "3316": {
            "op": "PUSH2",
            "value": "0xCFC"
        },
        "3319": {
            "op": "JUMPI"
        },
        "3320": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "3322": {
            "op": "DUP1"
        },
        "3323": {
            "op": "REVERT"
        },
        "3324": {
            "op": "JUMPDEST"
        },
        "3325": {
            "op": "DUP2"
        },
        "3326": {
            "op": "CALLDATALOAD"
        },
        "3327": {
            "op": "PUSH8",
            "value": "0xFFFFFFFFFFFFFFFF"
        },
        "3336": {
            "op": "DUP2"
        },
        "3337": {
            "op": "GT"
        },
        "3338": {
            "op": "ISZERO"
        },
        "3339": {
            "op": "PUSH2",
            "value": "0xD13"
        },
        "3342": {
            "op": "JUMPI"
        },
        "3343": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "3345": {
            "op": "DUP1"
        },
        "3346": {
            "op": "REVERT"
        },
        "3347": {
            "op": "JUMPDEST"
        },
        "3348": {
            "op": "PUSH2",
            "value": "0xD1F"
        },
        "3351": {
            "op": "DUP5"
        },
        "3352": {
            "op": "DUP3"
        },
        "3353": {
            "op": "DUP6"
        },
        "3354": {
            "op": "ADD"
        },
        "3355": {
            "op": "PUSH2",
            "value": "0xC5D"
        },
        "3358": {
            "jump": "i",
            "op": "JUMP"
        },
        "3359": {
            "op": "JUMPDEST"
        },
        "3360": {
            "op": "SWAP5"
        },
        "3361": {
            "op": "SWAP4"
        },
        "3362": {
            "op": "POP"
        },
        "3363": {
            "op": "POP"
        },
        "3364": {
            "op": "POP"
        },
        "3365": {
            "op": "POP"
        },
        "3366": {
            "jump": "o",
            "op": "JUMP"
        },
        "3367": {
            "op": "JUMPDEST"
        },
        "3368": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "3370": {
            "op": "JUMPDEST"
        },
        "3371": {
            "op": "DUP4"
        },
        "3372": {
            "op": "DUP2"
        },
        "3373": {
            "op": "LT"
        },
        "3374": {
            "op": "ISZERO"
        },
        "3375": {
            "op": "PUSH2",
            "value": "0xD42"
        },
        "3378": {
            "op": "JUMPI"
        },
        "3379": {
            "op": "DUP2"
        },
        "3380": {
            "op": "DUP2"
        },
        "3381": {
            "op": "ADD"
        },
        "3382": {
            "op": "MLOAD"
        },
        "3383": {
            "op": "DUP4"
        },
        "3384": {
            "op": "DUP3"
        },
        "3385": {
            "op": "ADD"
        },
        "3386": {
            "op": "MSTORE"
        },
        "3387": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "3389": {
            "op": "ADD"
        },
        "3390": {
            "op": "PUSH2",
            "value": "0xD2A"
        },
        "3393": {
            "op": "JUMP"
        },
        "3394": {
            "op": "JUMPDEST"
        },
        "3395": {
            "op": "DUP4"
        },
        "3396": {
            "op": "DUP2"
        },
        "3397": {
            "op": "GT"
        },
        "3398": {
            "op": "ISZERO"
        },
        "3399": {
            "op": "PUSH2",
            "value": "0xD51"
        },
        "3402": {
            "op": "JUMPI"
        },
        "3403": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "3405": {
            "op": "DUP5"
        },
        "3406": {
            "op": "DUP5"
        },
        "3407": {
            "op": "ADD"
        },
        "3408": {
            "op": "MSTORE"
        },
        "3409": {
            "op": "JUMPDEST"
        },
        "3410": {
            "op": "POP"
        },
        "3411": {
            "op": "POP"
        },
        "3412": {
            "op": "POP"
        },
        "3413": {
            "op": "POP"
        },
        "3414": {
            "jump": "o",
            "op": "JUMP"
        },
        "3415": {
            "op": "JUMPDEST"
        },
        "3416": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "3418": {
            "op": "DUP2"
        },
        "3419": {
            "op": "MLOAD"
        },
        "3420": {
            "op": "DUP1"
        },
        "3421": {
            "op": "DUP5"
        },
        "3422": {
            "op": "MSTORE"
        },
        "3423": {
            "op": "PUSH2",
            "value": "0xD6F"
        },
        "3426": {
            "op": "DUP2"
        },
        "3427": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "3429": {
            "op": "DUP7"
        },
        "3430": {
            "op": "ADD"
        },
        "3431": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "3433": {
            "op": "DUP7"
        },
        "3434": {
            "op": "ADD"
        },
        "3435": {
            "op": "PUSH2",
            "value": "0xD27"
        },
        "3438": {
            "jump": "i",
            "op": "JUMP"
        },
        "3439": {
            "op": "JUMPDEST"
        },
        "3440": {
            "op": "PUSH1",
            "value": "0x1F"
        },
        "3442": {
            "op": "ADD"
        },
        "3443": {
            "op": "PUSH1",
            "value": "0x1F"
        },
        "3445": {
            "op": "NOT"
        },
        "3446": {
            "op": "AND"
        },
        "3447": {
            "op": "SWAP3"
        },
        "3448": {
            "op": "SWAP1"
        },
        "3449": {
            "op": "SWAP3"
        },
        "3450": {
            "op": "ADD"
        },
        "3451": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "3453": {
            "op": "ADD"
        },
        "3454": {
            "op": "SWAP3"
        },
        "3455": {
            "op": "SWAP2"
        },
        "3456": {
            "op": "POP"
        },
        "3457": {
            "op": "POP"
        },
        "3458": {
            "jump": "o",
            "op": "JUMP"
        },
        "3459": {
            "op": "JUMPDEST"
        },
        "3460": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "3462": {
            "op": "DUP2"
        },
        "3463": {
            "op": "MSTORE"
        },
        "3464": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "3466": {
            "op": "PUSH2",
            "value": "0xD96"
        },
        "3469": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "3471": {
            "op": "DUP4"
        },
        "3472": {
            "op": "ADD"
        },
        "3473": {
            "op": "DUP5"
        },
        "3474": {
            "op": "PUSH2",
            "value": "0xD57"
        },
        "3477": {
            "jump": "i",
            "op": "JUMP"
        },
        "3478": {
            "op": "JUMPDEST"
        },
        "3479": {
            "op": "SWAP4"
        },
        "3480": {
            "op": "SWAP3"
        },
        "3481": {
            "op": "POP"
        },
        "3482": {
            "op": "POP"
        },
        "3483": {
            "op": "POP"
        },
        "3484": {
            "jump": "o",
            "op": "JUMP"
        },
        "3485": {
            "op": "JUMPDEST"
        },
        "3486": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "3488": {
            "op": "DUP1"
        },
        "3489": {
            "op": "PUSH1",
            "value": "0x40"
        },
        "3491": {
            "op": "DUP4"
        },
        "3492": {
            "op": "DUP6"
        },
        "3493": {
            "op": "SUB"
        },
        "3494": {
            "op": "SLT"
        },
        "3495": {
            "op": "ISZERO"
        },
        "3496": {
            "op": "PUSH2",
            "value": "0xDB0"
        },
        "3499": {
            "op": "JUMPI"
        },
        "3500": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "3502": {
            "op": "DUP1"
        },
        "3503": {
            "op": "REVERT"
        },
        "3504": {
            "op": "JUMPDEST"
        },
        "3505": {
            "op": "DUP3"
        },
        "3506": {
            "op": "CALLDATALOAD"
        },
        "3507": {
            "op": "PUSH8",
            "value": "0xFFFFFFFFFFFFFFFF"
        },
        "3516": {
            "op": "DUP2"
        },
        "3517": {
            "op": "GT"
        },
        "3518": {
            "op": "ISZERO"
        },
        "3519": {
            "op": "PUSH2",
            "value": "0xDC7"
        },
        "3522": {
            "op": "JUMPI"
        },
        "3523": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "3525": {
            "op": "DUP1"
        },
        "3526": {
            "op": "REVERT"
        },
        "3527": {
            "op": "JUMPDEST"
        },
        "3528": {
            "op": "PUSH2",
            "value": "0xDD3"
        },
        "3531": {
            "op": "DUP6"
        },
        "3532": {
            "op": "DUP3"
        },
        "3533": {
            "op": "DUP7"
        },
        "3534": {
            "op": "ADD"
        },
        "3535": {
            "op": "PUSH2",
            "value": "0xC5D"
        },
        "3538": {
            "jump": "i",
            "op": "JUMP"
        },
        "3539": {
            "op": "JUMPDEST"
        },
        "3540": {
            "op": "SWAP3"
        },
        "3541": {
            "op": "POP"
        },
        "3542": {
            "op": "POP"
        },
        "3543": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "3545": {
            "op": "DUP4"
        },
        "3546": {
            "op": "ADD"
        },
        "3547": {
            "op": "CALLDATALOAD"
        },
        "3548": {
            "op": "PUSH1",
            "value": "0xFF"
        },
        "3550": {
            "op": "DUP2"
        },
        "3551": {
            "op": "AND"
        },
        "3552": {
            "op": "DUP2"
        },
        "3553": {
            "op": "EQ"
        },
        "3554": {
            "op": "PUSH2",
            "value": "0xDEA"
        },
        "3557": {
            "op": "JUMPI"
        },
        "3558": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "3560": {
            "op": "DUP1"
        },
        "3561": {
            "op": "REVERT"
        },
        "3562": {
            "op": "JUMPDEST"
        },
        "3563": {
            "op": "DUP1"
        },
        "3564": {
            "op": "SWAP2"
        },
        "3565": {
            "op": "POP"
        },
        "3566": {
            "op": "POP"
        },
        "3567": {
            "op": "SWAP3"
        },
        "3568": {
            "op": "POP"
        },
        "3569": {
            "op": "SWAP3"
        },
        "3570": {
            "op": "SWAP1"
        },
        "3571": {
            "op": "POP"
        },
        "3572": {
            "jump": "o",
            "op": "JUMP"
        },
        "3573": {
            "op": "JUMPDEST"
        },
        "3574": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "3576": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "3578": {
            "op": "DUP3"
        },
        "3579": {
            "op": "DUP5"
        },
        "3580": {
            "op": "SUB"
        },
        "3581": {
            "op": "SLT"
        },
        "3582": {
            "op": "ISZERO"
        },
        "3583": {
            "op": "PUSH2",
            "value": "0xE07"
        },
        "3586": {
            "op": "JUMPI"
        },
        "3587": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "3589": {
            "op": "DUP1"
        },
        "3590": {
            "op": "REVERT"
        },
        "3591": {
            "op": "JUMPDEST"
        },
        "3592": {
            "op": "DUP2"
        },
        "3593": {
            "op": "CALLDATALOAD"
        },
        "3594": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "3596": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "3598": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "3600": {
            "op": "SHL"
        },
        "3601": {
            "op": "SUB"
        },
        "3602": {
            "op": "DUP2"
        },
        "3603": {
            "op": "AND"
        },
        "3604": {
            "op": "DUP2"
        },
        "3605": {
            "op": "EQ"
        },
        "3606": {
            "op": "PUSH2",
            "value": "0xD96"
        },
        "3609": {
            "op": "JUMPI"
        },
        "3610": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "3612": {
            "op": "DUP1"
        },
        "3613": {
            "op": "REVERT"
        },
        "3614": {
            "op": "JUMPDEST"
        },
        "3615": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "3617": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "3619": {
            "op": "DUP1"
        },
        "3620": {
            "op": "DUP4"
        },
        "3621": {
            "op": "ADD"
        },
        "3622": {
            "op": "DUP2"
        },
        "3623": {
            "op": "DUP5"
        },
        "3624": {
            "op": "MSTORE"
        },
        "3625": {
            "op": "DUP1"
        },
        "3626": {
            "op": "DUP6"
        },
        "3627": {
            "op": "MLOAD"
        },
        "3628": {
            "op": "DUP1"
        },
        "3629": {
            "op": "DUP4"
        },
        "3630": {
            "op": "MSTORE"
        },
        "3631": {
            "op": "PUSH1",
            "value": "0x40"
        },
        "3633": {
            "op": "DUP7"
        },
        "3634": {
            "op": "ADD"
        },
        "3635": {
            "op": "SWAP2"
        },
        "3636": {
            "op": "POP"
        },
        "3637": {
            "op": "PUSH1",
            "value": "0x40"
        },
        "3639": {
            "op": "DUP2"
        },
        "3640": {
            "op": "PUSH1",
            "value": "0x5"
        },
        "3642": {
            "op": "SHL"
        },
        "3643": {
            "op": "DUP8"
        },
        "3644": {
            "op": "ADD"
        },
        "3645": {
            "op": "ADD"
        },
        "3646": {
            "op": "SWAP3"
        },
        "3647": {
            "op": "POP"
        },
        "3648": {
            "op": "DUP4"
        },
        "3649": {
            "op": "DUP8"
        },
        "3650": {
            "op": "ADD"
        },
        "3651": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "3653": {
            "op": "JUMPDEST"
        },
        "3654": {
            "op": "DUP3"
        },
        "3655": {
            "op": "DUP2"
        },
        "3656": {
            "op": "LT"
        },
        "3657": {
            "op": "ISZERO"
        },
        "3658": {
            "op": "PUSH2",
            "value": "0xE73"
        },
        "3661": {
            "op": "JUMPI"
        },
        "3662": {
            "op": "PUSH1",
            "value": "0x3F"
        },
        "3664": {
            "op": "NOT"
        },
        "3665": {
            "op": "DUP9"
        },
        "3666": {
            "op": "DUP7"
        },
        "3667": {
            "op": "SUB"
        },
        "3668": {
            "op": "ADD"
        },
        "3669": {
            "op": "DUP5"
        },
        "3670": {
            "op": "MSTORE"
        },
        "3671": {
            "op": "PUSH2",
            "value": "0xE61"
        },
        "3674": {
            "op": "DUP6"
        },
        "3675": {
            "op": "DUP4"
        },
        "3676": {
            "op": "MLOAD"
        },
        "3677": {
            "op": "PUSH2",
            "value": "0xD57"
        },
        "3680": {
            "jump": "i",
            "op": "JUMP"
        },
        "3681": {
            "op": "JUMPDEST"
        },
        "3682": {
            "op": "SWAP5"
        },
        "3683": {
            "op": "POP"
        },
        "3684": {
            "op": "SWAP3"
        },
        "3685": {
            "op": "DUP6"
        },
        "3686": {
            "op": "ADD"
        },
        "3687": {
            "op": "SWAP3"
        },
        "3688": {
            "op": "SWAP1"
        },
        "3689": {
            "op": "DUP6"
        },
        "3690": {
            "op": "ADD"
        },
        "3691": {
            "op": "SWAP1"
        },
        "3692": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "3694": {
            "op": "ADD"
        },
        "3695": {
            "op": "PUSH2",
            "value": "0xE45"
        },
        "3698": {
            "op": "JUMP"
        },
        "3699": {
            "op": "JUMPDEST"
        },
        "3700": {
            "op": "POP"
        },
        "3701": {
            "op": "SWAP3"
        },
        "3702": {
            "op": "SWAP8"
        },
        "3703": {
            "op": "SWAP7"
        },
        "3704": {
            "op": "POP"
        },
        "3705": {
            "op": "POP"
        },
        "3706": {
            "op": "POP"
        },
        "3707": {
            "op": "POP"
        },
        "3708": {
            "op": "POP"
        },
        "3709": {
            "op": "POP"
        },
        "3710": {
            "op": "POP"
        },
        "3711": {
            "jump": "o",
            "op": "JUMP"
        },
        "3712": {
            "op": "JUMPDEST"
        },
        "3713": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "3715": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "3717": {
            "op": "DUP3"
        },
        "3718": {
            "op": "DUP5"
        },
        "3719": {
            "op": "SUB"
        },
        "3720": {
            "op": "SLT"
        },
        "3721": {
            "op": "ISZERO"
        },
        "3722": {
            "op": "PUSH2",
            "value": "0xE92"
        },
        "3725": {
            "op": "JUMPI"
        },
        "3726": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "3728": {
            "op": "DUP1"
        },
        "3729": {
            "op": "REVERT"
        },
        "3730": {
            "op": "JUMPDEST"
        },
        "3731": {
            "op": "POP"
        },
        "3732": {
            "op": "CALLDATALOAD"
        },
        "3733": {
            "op": "SWAP2"
        },
        "3734": {
            "op": "SWAP1"
        },
        "3735": {
            "op": "POP"
        },
        "3736": {
            "jump": "o",
            "op": "JUMP"
        },
        "3737": {
            "op": "JUMPDEST"
        },
        "3738": {
            "op": "PUSH4",
            "value": "0x4E487B71"
        },
        "3743": {
            "op": "PUSH1",
            "value": "0xE0"
        },
        "3745": {
            "op": "SHL"
        },
        "3746": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "3748": {
            "op": "MSTORE"
        },
        "3749": {
            "op": "PUSH1",
            "value": "0x32"
        },
        "3751": {
            "op": "PUSH1",
            "value": "0x4"
        },
        "3753": {
            "op": "MSTORE"
        },
        "3754": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "3756": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "3758": {
            "op": "REVERT"
        },
        "3759": {
            "op": "JUMPDEST"
        },
        "3760": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "3762": {
            "op": "DUP2"
        },
        "3763": {
            "op": "DUP2"
        },
        "3764": {
            "op": "SHR"
        },
        "3765": {
            "op": "SWAP1"
        },
        "3766": {
            "op": "DUP3"
        },
        "3767": {
            "op": "AND"
        },
        "3768": {
            "op": "DUP1"
        },
        "3769": {
            "op": "PUSH2",
            "value": "0xEC3"
        },
        "3772": {
            "op": "JUMPI"
        },
        "3773": {
            "op": "PUSH1",
            "value": "0x7F"
        },
        "3775": {
            "op": "DUP3"
        },
        "3776": {
            "op": "AND"
        },
        "3777": {
            "op": "SWAP2"
        },
        "3778": {
            "op": "POP"
        },
        "3779": {
            "op": "JUMPDEST"
        },
        "3780": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "3782": {
            "op": "DUP3"
        },
        "3783": {
            "op": "LT"
        },
        "3784": {
            "op": "DUP2"
        },
        "3785": {
            "op": "EQ"
        },
        "3786": {
            "op": "ISZERO"
        },
        "3787": {
            "op": "PUSH2",
            "value": "0x407"
        },
        "3790": {
            "op": "JUMPI"
        },
        "3791": {
            "op": "PUSH4",
            "value": "0x4E487B71"
        },
        "3796": {
            "op": "PUSH1",
            "value": "0xE0"
        },
        "3798": {
            "op": "SHL"
        },
        "3799": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "3801": {
            "op": "MSTORE"
        },
        "3802": {
            "op": "PUSH1",
            "value": "0x22"
        },
        "3804": {
            "op": "PUSH1",
            "value": "0x4"
        },
        "3806": {
            "op": "MSTORE"
        },
        "3807": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "3809": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "3811": {
            "op": "REVERT"
        },
        "3812": {
            "op": "JUMPDEST"
        },
        "3813": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "3815": {
            "op": "DUP1"
        },
        "3816": {
            "op": "DUP4"
        },
        "3817": {
            "op": "SLOAD"
        },
        "3818": {
            "op": "DUP2"
        },
        "3819": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "3821": {
            "op": "DUP3"
        },
        "3822": {
            "op": "DUP2"
        },
        "3823": {
            "op": "SHR"
        },
        "3824": {
            "op": "SWAP2"
        },
        "3825": {
            "op": "POP"
        },
        "3826": {
            "op": "DUP1"
        },
        "3827": {
            "op": "DUP4"
        },
        "3828": {
            "op": "AND"
        },
        "3829": {
            "op": "DUP1"
        },
        "3830": {
            "op": "PUSH2",
            "value": "0xF00"
        },
        "3833": {
            "op": "JUMPI"
        },
        "3834": {
            "op": "PUSH1",
            "value": "0x7F"
        },
        "3836": {
            "op": "DUP4"
        },
        "3837": {
            "op": "AND"
        },
        "3838": {
            "op": "SWAP3"
        },
        "3839": {
            "op": "POP"
        },
        "3840": {
            "op": "JUMPDEST"
        },
        "3841": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "3843": {
            "op": "DUP1"
        },
        "3844": {
            "op": "DUP5"
        },
        "3845": {
            "op": "LT"
        },
        "3846": {
            "op": "DUP3"
        },
        "3847": {
            "op": "EQ"
        },
        "3848": {
            "op": "ISZERO"
        },
        "3849": {
            "op": "PUSH2",
            "value": "0xF20"
        },
        "3852": {
            "op": "JUMPI"
        },
        "3853": {
            "op": "PUSH4",
            "value": "0x4E487B71"
        },
        "3858": {
            "op": "PUSH1",
            "value": "0xE0"
        },
        "3860": {
            "op": "SHL"
        },
        "3861": {
            "op": "DUP7"
        },
        "3862": {
            "op": "MSTORE"
        },
        "3863": {
            "op": "PUSH1",
            "value": "0x22"
        },
        "3865": {
            "op": "PUSH1",
            "value": "0x4"
        },
        "3867": {
            "op": "MSTORE"
        },
        "3868": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "3870": {
            "op": "DUP7"
        },
        "3871": {
            "op": "REVERT"
        },
        "3872": {
            "op": "JUMPDEST"
        },
        "3873": {
            "op": "DUP2"
        },
        "3874": {
            "op": "DUP1"
        },
        "3875": {
            "op": "ISZERO"
        },
        "3876": {
            "op": "PUSH2",
            "value": "0xF34"
        },
        "3879": {
            "op": "JUMPI"
        },
        "3880": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "3882": {
            "op": "DUP2"
        },
        "3883": {
            "op": "EQ"
        },
        "3884": {
            "op": "PUSH2",
            "value": "0xF45"
        },
        "3887": {
            "op": "JUMPI"
        },
        "3888": {
            "op": "PUSH2",
            "value": "0xF72"
        },
        "3891": {
            "op": "JUMP"
        },
        "3892": {
            "op": "JUMPDEST"
        },
        "3893": {
            "op": "PUSH1",
            "value": "0xFF"
        },
        "3895": {
            "op": "NOT"
        },
        "3896": {
            "op": "DUP7"
        },
        "3897": {
            "op": "AND"
        },
        "3898": {
            "op": "DUP10"
        },
        "3899": {
            "op": "MSTORE"
        },
        "3900": {
            "op": "DUP5"
        },
        "3901": {
            "op": "DUP10"
        },
        "3902": {
            "op": "ADD"
        },
        "3903": {
            "op": "SWAP7"
        },
        "3904": {
            "op": "POP"
        },
        "3905": {
            "op": "PUSH2",
            "value": "0xF72"
        },
        "3908": {
            "op": "JUMP"
        },
        "3909": {
            "op": "JUMPDEST"
        },
        "3910": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "3912": {
            "op": "DUP11"
        },
        "3913": {
            "op": "DUP2"
        },
        "3914": {
            "op": "MSTORE"
        },
        "3915": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "3917": {
            "op": "SWAP1"
        },
        "3918": {
            "op": "KECCAK256"
        },
        "3919": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "3921": {
            "op": "JUMPDEST"
        },
        "3922": {
            "op": "DUP7"
        },
        "3923": {
            "op": "DUP2"
        },
        "3924": {
            "op": "LT"
        },
        "3925": {
            "op": "ISZERO"
        },
        "3926": {
            "op": "PUSH2",
            "value": "0xF6A"
        },
        "3929": {
            "op": "JUMPI"
        },
        "3930": {
            "op": "DUP2"
        },
        "3931": {
            "op": "SLOAD"
        },
        "3932": {
            "op": "DUP12"
        },
        "3933": {
            "op": "DUP3"
        },
        "3934": {
            "op": "ADD"
        },
        "3935": {
            "op": "MSTORE"
        },
        "3936": {
            "op": "SWAP1"
        },
        "3937": {
            "op": "DUP6"
        },
        "3938": {
            "op": "ADD"
        },
        "3939": {
            "op": "SWAP1"
        },
        "3940": {
            "op": "DUP4"
        },
        "3941": {
            "op": "ADD"
        },
        "3942": {
            "op": "PUSH2",
            "value": "0xF51"
        },
        "3945": {
            "op": "JUMP"
        },
        "3946": {
            "op": "JUMPDEST"
        },
        "3947": {
            "op": "POP"
        },
        "3948": {
            "op": "POP"
        },
        "3949": {
            "op": "DUP5"
        },
        "3950": {
            "op": "DUP10"
        },
        "3951": {
            "op": "ADD"
        },
        "3952": {
            "op": "SWAP7"
        },
        "3953": {
            "op": "POP"
        },
        "3954": {
            "op": "JUMPDEST"
        },
        "3955": {
            "op": "POP"
        },
        "3956": {
            "op": "SWAP5"
        },
        "3957": {
            "op": "SWAP9"
        },
        "3958": {
            "op": "SWAP8"
        },
        "3959": {
            "op": "POP"
        },
        "3960": {
            "op": "POP"
        },
        "3961": {
            "op": "POP"
        },
        "3962": {
            "op": "POP"
        },
        "3963": {
            "op": "POP"
        },
        "3964": {
            "op": "POP"
        },
        "3965": {
            "op": "POP"
        },
        "3966": {
            "op": "POP"
        },
        "3967": {
            "jump": "o",
            "op": "JUMP"
        },
        "3968": {
            "op": "JUMPDEST"
        },
        "3969": {
            "op": "PUSH4",
            "value": "0x4E487B71"
        },
        "3974": {
            "op": "PUSH1",
            "value": "0xE0"
        },
        "3976": {
            "op": "SHL"
        },
        "3977": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "3979": {
            "op": "MSTORE"
        },
        "3980": {
            "op": "PUSH1",
            "value": "0x11"
        },
        "3982": {
            "op": "PUSH1",
            "value": "0x4"
        },
        "3984": {
            "op": "MSTORE"
        },
        "3985": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "3987": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "3989": {
            "op": "REVERT"
        },
        "3990": {
            "op": "JUMPDEST"
        },
        "3991": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "3993": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "3995": {
            "op": "NOT"
        },
        "3996": {
            "op": "DUP3"
        },
        "3997": {
            "op": "EQ"
        },
        "3998": {
            "op": "ISZERO"
        },
        "3999": {
            "op": "PUSH2",
            "value": "0xFAA"
        },
        "4002": {
            "op": "JUMPI"
        },
        "4003": {
            "op": "PUSH2",
            "value": "0xFAA"
        },
        "4006": {
            "op": "PUSH2",
            "value": "0xF80"
        },
        "4009": {
            "jump": "i",
            "op": "JUMP"
        },
        "4010": {
            "op": "JUMPDEST"
        },
        "4011": {
            "op": "POP"
        },
        "4012": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4014": {
            "op": "ADD"
        },
        "4015": {
            "op": "SWAP1"
        },
        "4016": {
            "jump": "o",
            "op": "JUMP"
        },
        "4017": {
            "op": "JUMPDEST"
        },
        "4018": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "4020": {
            "op": "DUP1"
        },
        "4021": {
            "op": "DUP3"
        },
        "4022": {
            "op": "MSTORE"
        },
        "4023": {
            "op": "DUP2"
        },
        "4024": {
            "op": "DUP2"
        },
        "4025": {
            "op": "ADD"
        },
        "4026": {
            "op": "MSTORE"
        },
        "4027": {
            "op": "PUSH32",
            "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
        },
        "4060": {
            "op": "PUSH1",
            "value": "0x40"
        },
        "4062": {
            "op": "DUP3"
        },
        "4063": {
            "op": "ADD"
        },
        "4064": {
            "op": "MSTORE"
        },
        "4065": {
            "op": "PUSH1",
            "value": "0x60"
        },
        "4067": {
            "op": "ADD"
        },
        "4068": {
            "op": "SWAP1"
        },
        "4069": {
            "jump": "o",
            "op": "JUMP"
        },
        "4070": {
            "op": "JUMPDEST"
        },
        "4071": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "4073": {
            "op": "DUP1"
        },
        "4074": {
            "op": "DUP3"
        },
        "4075": {
            "op": "MSTORE"
        },
        "4076": {
            "op": "PUSH1",
            "value": "0x22"
        },
        "4078": {
            "op": "SWAP1"
        },
        "4079": {
            "op": "DUP3"
        },
        "4080": {
            "op": "ADD"
        },
        "4081": {
            "op": "MSTORE"
        },
        "4082": {
            "op": "PUSH32",
            "value": "0x5468697320766F74696E672073657373696F6E20616C726561647920656E6465"
        },
        "4115": {
            "op": "PUSH1",
            "value": "0x40"
        },
        "4117": {
            "op": "DUP3"
        },
        "4118": {
            "op": "ADD"
        },
        "4119": {
            "op": "MSTORE"
        },
        "4120": {
            "op": "PUSH2",
            "value": "0x3217"
        },
        "4123": {
            "op": "PUSH1",
            "value": "0xF1"
        },
        "4125": {
            "op": "SHL"
        },
        "4126": {
            "op": "PUSH1",
            "value": "0x60"
        },
        "4128": {
            "op": "DUP3"
        },
        "4129": {
            "op": "ADD"
        },
        "4130": {
            "op": "MSTORE"
        },
        "4131": {
            "op": "PUSH1",
            "value": "0x80"
        },
        "4133": {
            "op": "ADD"
        },
        "4134": {
            "op": "SWAP1"
        },
        "4135": {
            "jump": "o",
            "op": "JUMP"
        },
        "4136": {
            "op": "JUMPDEST"
        },
        "4137": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "4139": {
            "op": "DUP3"
        },
        "4140": {
            "op": "MLOAD"
        },
        "4141": {
            "op": "PUSH2",
            "value": "0x103A"
        },
        "4144": {
            "op": "DUP2"
        },
        "4145": {
            "op": "DUP5"
        },
        "4146": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "4148": {
            "op": "DUP8"
        },
        "4149": {
            "op": "ADD"
        },
        "4150": {
            "op": "PUSH2",
            "value": "0xD27"
        },
        "4153": {
            "jump": "i",
            "op": "JUMP"
        },
        "4154": {
            "op": "JUMPDEST"
        },
        "4155": {
            "op": "SWAP2"
        },
        "4156": {
            "op": "SWAP1"
        },
        "4157": {
            "op": "SWAP2"
        },
        "4158": {
            "op": "ADD"
        },
        "4159": {
            "op": "SWAP3"
        },
        "4160": {
            "op": "SWAP2"
        },
        "4161": {
            "op": "POP"
        },
        "4162": {
            "op": "POP"
        },
        "4163": {
            "jump": "o",
            "op": "JUMP"
        },
        "4164": {
            "op": "JUMPDEST"
        },
        "4165": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "4167": {
            "op": "PUSH1",
            "value": "0xFF"
        },
        "4169": {
            "op": "DUP3"
        },
        "4170": {
            "op": "AND"
        },
        "4171": {
            "op": "PUSH1",
            "value": "0xFF"
        },
        "4173": {
            "op": "DUP5"
        },
        "4174": {
            "op": "AND"
        },
        "4175": {
            "op": "DUP1"
        },
        "4176": {
            "op": "PUSH1",
            "value": "0xFF"
        },
        "4178": {
            "op": "SUB"
        },
        "4179": {
            "op": "DUP3"
        },
        "4180": {
            "op": "GT"
        },
        "4181": {
            "op": "ISZERO"
        },
        "4182": {
            "op": "PUSH2",
            "value": "0x1061"
        },
        "4185": {
            "op": "JUMPI"
        },
        "4186": {
            "op": "PUSH2",
            "value": "0x1061"
        },
        "4189": {
            "op": "PUSH2",
            "value": "0xF80"
        },
        "4192": {
            "jump": "i",
            "op": "JUMP"
        },
        "4193": {
            "op": "JUMPDEST"
        },
        "4194": {
            "op": "ADD"
        },
        "4195": {
            "op": "SWAP4"
        },
        "4196": {
            "op": "SWAP3"
        },
        "4197": {
            "op": "POP"
        },
        "4198": {
            "op": "POP"
        },
        "4199": {
            "op": "POP"
        },
        "4200": {
            "jump": "o",
            "op": "JUMP"
        },
        "4201": {
            "op": "JUMPDEST"
        },
        "4202": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "4204": {
            "op": "PUSH3",
            "value": "0xFFFFFF"
        },
        "4208": {
            "op": "DUP1"
        },
        "4209": {
            "op": "DUP4"
        },
        "4210": {
            "op": "AND"
        },
        "4211": {
            "op": "DUP2"
        },
        "4212": {
            "op": "DUP6"
        },
        "4213": {
            "op": "AND"
        },
        "4214": {
            "op": "DUP1"
        },
        "4215": {
            "op": "DUP4"
        },
        "4216": {
            "op": "SUB"
        },
        "4217": {
            "op": "DUP3"
        },
        "4218": {
            "op": "GT"
        },
        "4219": {
            "op": "ISZERO"
        },
        "4220": {
            "op": "PUSH2",
            "value": "0x1087"
        },
        "4223": {
            "op": "JUMPI"
        },
        "4224": {
            "op": "PUSH2",
            "value": "0x1087"
        },
        "4227": {
            "op": "PUSH2",
            "value": "0xF80"
        },
        "4230": {
            "jump": "i",
            "op": "JUMP"
        },
        "4231": {
            "op": "JUMPDEST"
        },
        "4232": {
            "op": "ADD"
        },
        "4233": {
            "op": "SWAP5"
        },
        "4234": {
            "op": "SWAP4"
        },
        "4235": {
            "op": "POP"
        },
        "4236": {
            "op": "POP"
        },
        "4237": {
            "op": "POP"
        },
        "4238": {
            "op": "POP"
        },
        "4239": {
            "jump": "o",
            "op": "JUMP"
        },
        "4240": {
            "op": "JUMPDEST"
        },
        "4241": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "4243": {
            "op": "DUP3"
        },
        "4244": {
            "op": "PUSH2",
            "value": "0x10AD"
        },
        "4247": {
            "op": "JUMPI"
        },
        "4248": {
            "op": "PUSH4",
            "value": "0x4E487B71"
        },
        "4253": {
            "op": "PUSH1",
            "value": "0xE0"
        },
        "4255": {
            "op": "SHL"
        },
        "4256": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "4258": {
            "op": "MSTORE"
        },
        "4259": {
            "op": "PUSH1",
            "value": "0x12"
        },
        "4261": {
            "op": "PUSH1",
            "value": "0x4"
        },
        "4263": {
            "op": "MSTORE"
        },
        "4264": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "4266": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "4268": {
            "op": "REVERT"
        },
        "4269": {
            "op": "JUMPDEST"
        },
        "4270": {
            "op": "POP"
        },
        "4271": {
            "op": "DIV"
        },
        "4272": {
            "op": "SWAP1"
        },
        "4273": {
            "jump": "o",
            "op": "JUMP"
        },
        "4274": {
            "op": "JUMPDEST"
        },
        "4275": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "4277": {
            "op": "DUP3"
        },
        "4278": {
            "op": "DUP3"
        },
        "4279": {
            "op": "LT"
        },
        "4280": {
            "op": "ISZERO"
        },
        "4281": {
            "op": "PUSH2",
            "value": "0x10C4"
        },
        "4284": {
            "op": "JUMPI"
        },
        "4285": {
            "op": "PUSH2",
            "value": "0x10C4"
        },
        "4288": {
            "op": "PUSH2",
            "value": "0xF80"
        },
        "4291": {
            "jump": "i",
            "op": "JUMP"
        },
        "4292": {
            "op": "JUMPDEST"
        },
        "4293": {
            "op": "POP"
        },
        "4294": {
            "op": "SUB"
        },
        "4295": {
            "op": "SWAP1"
        },
        "4296": {
            "jump": "o",
            "op": "JUMP"
        },
        "4297": {
            "op": "JUMPDEST"
        },
        "4298": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "4300": {
            "op": "DUP2"
        },
        "4301": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "4303": {
            "op": "NOT"
        },
        "4304": {
            "op": "DIV"
        },
        "4305": {
            "op": "DUP4"
        },
        "4306": {
            "op": "GT"
        },
        "4307": {
            "op": "DUP3"
        },
        "4308": {
            "op": "ISZERO"
        },
        "4309": {
            "op": "ISZERO"
        },
        "4310": {
            "op": "AND"
        },
        "4311": {
            "op": "ISZERO"
        },
        "4312": {
            "op": "PUSH2",
            "value": "0x10E3"
        },
        "4315": {
            "op": "JUMPI"
        },
        "4316": {
            "op": "PUSH2",
            "value": "0x10E3"
        },
        "4319": {
            "op": "PUSH2",
            "value": "0xF80"
        },
        "4322": {
            "jump": "i",
            "op": "JUMP"
        },
        "4323": {
            "op": "JUMPDEST"
        },
        "4324": {
            "op": "POP"
        },
        "4325": {
            "op": "MUL"
        },
        "4326": {
            "op": "SWAP1"
        },
        "4327": {
            "jump": "o",
            "op": "JUMP"
        },
        "4328": {
            "op": "JUMPDEST"
        },
        "4329": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "4331": {
            "op": "DUP7"
        },
        "4332": {
            "op": "MLOAD"
        },
        "4333": {
            "op": "PUSH2",
            "value": "0x10FA"
        },
        "4336": {
            "op": "DUP2"
        },
        "4337": {
            "op": "DUP5"
        },
        "4338": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "4340": {
            "op": "DUP12"
        },
        "4341": {
            "op": "ADD"
        },
        "4342": {
            "op": "PUSH2",
            "value": "0xD27"
        },
        "4345": {
            "jump": "i",
            "op": "JUMP"
        },
        "4346": {
            "op": "JUMPDEST"
        },
        "4347": {
            "op": "DUP7"
        },
        "4348": {
            "op": "MLOAD"
        },
        "4349": {
            "op": "SWAP1"
        },
        "4350": {
            "op": "DUP4"
        },
        "4351": {
            "op": "ADD"
        },
        "4352": {
            "op": "SWAP1"
        },
        "4353": {
            "op": "PUSH2",
            "value": "0x110E"
        },
        "4356": {
            "op": "DUP2"
        },
        "4357": {
            "op": "DUP4"
        },
        "4358": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "4360": {
            "op": "DUP12"
        },
        "4361": {
            "op": "ADD"
        },
        "4362": {
            "op": "PUSH2",
            "value": "0xD27"
        },
        "4365": {
            "jump": "i",
            "op": "JUMP"
        },
        "4366": {
            "op": "JUMPDEST"
        },
        "4367": {
            "op": "DUP7"
        },
        "4368": {
            "op": "MLOAD"
        },
        "4369": {
            "op": "SWAP2"
        },
        "4370": {
            "op": "ADD"
        },
        "4371": {
            "op": "SWAP1"
        },
        "4372": {
            "op": "PUSH2",
            "value": "0x1121"
        },
        "4375": {
            "op": "DUP2"
        },
        "4376": {
            "op": "DUP4"
        },
        "4377": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "4379": {
            "op": "DUP11"
        },
        "4380": {
            "op": "ADD"
        },
        "4381": {
            "op": "PUSH2",
            "value": "0xD27"
        },
        "4384": {
            "jump": "i",
            "op": "JUMP"
        },
        "4385": {
            "op": "JUMPDEST"
        },
        "4386": {
            "op": "DUP6"
        },
        "4387": {
            "op": "MLOAD"
        },
        "4388": {
            "op": "SWAP2"
        },
        "4389": {
            "op": "ADD"
        },
        "4390": {
            "op": "SWAP1"
        },
        "4391": {
            "op": "PUSH2",
            "value": "0x1134"
        },
        "4394": {
            "op": "DUP2"
        },
        "4395": {
            "op": "DUP4"
        },
        "4396": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "4398": {
            "op": "DUP10"
        },
        "4399": {
            "op": "ADD"
        },
        "4400": {
            "op": "PUSH2",
            "value": "0xD27"
        },
        "4403": {
            "jump": "i",
            "op": "JUMP"
        },
        "4404": {
            "op": "JUMPDEST"
        },
        "4405": {
            "op": "DUP5"
        },
        "4406": {
            "op": "MLOAD"
        },
        "4407": {
            "op": "SWAP2"
        },
        "4408": {
            "op": "ADD"
        },
        "4409": {
            "op": "SWAP1"
        },
        "4410": {
            "op": "PUSH2",
            "value": "0x1147"
        },
        "4413": {
            "op": "DUP2"
        },
        "4414": {
            "op": "DUP4"
        },
        "4415": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "4417": {
            "op": "DUP9"
        },
        "4418": {
            "op": "ADD"
        },
        "4419": {
            "op": "PUSH2",
            "value": "0xD27"
        },
        "4422": {
            "jump": "i",
            "op": "JUMP"
        },
        "4423": {
            "op": "JUMPDEST"
        },
        "4424": {
            "op": "ADD"
        },
        "4425": {
            "op": "SWAP8"
        },
        "4426": {
            "op": "SWAP7"
        },
        "4427": {
            "op": "POP"
        },
        "4428": {
            "op": "POP"
        },
        "4429": {
            "op": "POP"
        },
        "4430": {
            "op": "POP"
        },
        "4431": {
            "op": "POP"
        },
        "4432": {
            "op": "POP"
        },
        "4433": {
            "op": "POP"
        },
        "4434": {
            "jump": "o",
            "op": "JUMP"
        }
    },
    "sha1": "ff9f174a727a0b4ebc10a2279095acefdd3c7587",
    "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\nimport \"./VotingHub.sol\";\n\ncontract VotingSession is Ownable {\n    string public symbol;\n    uint256 public start;\n    uint256 public end;\n\n    uint8 public numOfVotesPerUser;\n    mapping(address => uint8) public votesPerUser;\n\n    string[] public choices;\n    // more efficient than array, when looking if it contains certain keys\n    mapping(string => bool) public choicesMap;\n    mapping(string => uint24) public votesPerChoice;\n\n    constructor(\n        string memory _symbol,\n        uint256 _start,\n        uint256 _end,\n        uint8 _numOfVotesPerUser\n    ) {\n        require(\n            _numOfVotesPerUser > 0,\n            \"Number of votes per user must be greater than 0.\"\n        );\n\n        symbol = _symbol;\n        start = _start;\n        end = _end;\n        numOfVotesPerUser = _numOfVotesPerUser;\n    }\n\n    function getNumOfVotesForUser() public view returns (uint8) {\n        return votesPerUser[msg.sender];\n    }\n\n    function vote(string memory choice, uint8 numberOfVotes) public {\n        require(block.timestamp < end, \"This voting session already ended.\");\n        require(\n            block.timestamp >= start,\n            \"This voting session did not start yet.\"\n        );\n        require(choicesMap[choice], \"Invalid choice.\");\n        require(\n            votesPerUser[msg.sender] + numberOfVotes <= numOfVotesPerUser,\n            \"Exceeded number of votes per user.\"\n        );\n\n        votesPerUser[msg.sender] += numberOfVotes;\n        votesPerChoice[choice] += numberOfVotes;\n    }\n\n    function addChoice(string memory choice) public onlyOwner {\n        require(block.timestamp < end, \"This voting session already ended.\");\n        require(\n            block.timestamp < start,\n            \"This voting session already started.\"\n        );\n        require(!choicesMap[choice], \"This choice already exists.\");\n\n        choices.push(choice);\n        choicesMap[choice] = true;\n    }\n\n    function getAllChoices() public view returns (string[] memory) {\n        return choices;\n    }\n\n    function getResults() public view returns (string memory) {\n        string memory results = \"\";\n        for (uint256 i = 0; i < choices.length; i++) {\n            results = append(\n                results,\n                choices[i],\n                \" => \",\n                uint2str(votesPerChoice[choices[i]]),\n                \"\\n\"\n            );\n        }\n\n        return results;\n    }\n\n    function append(\n        string memory a,\n        string memory b,\n        string memory c,\n        string memory d,\n        string memory e\n    ) internal pure returns (string memory) {\n        return string(abi.encodePacked(a, b, c, d, e));\n    }\n\n    function uint2str(uint256 _i)\n        internal\n        pure\n        returns (string memory _uintAsString)\n    {\n        if (_i == 0) {\n            return \"0\";\n        }\n        uint256 j = _i;\n        uint256 len;\n        while (j != 0) {\n            len++;\n            j /= 10;\n        }\n        bytes memory bstr = new bytes(len);\n        uint256 k = len;\n        while (_i != 0) {\n            k = k - 1;\n            uint8 temp = (48 + uint8(_i - (_i / 10) * 10));\n            bytes1 b1 = bytes1(temp);\n            bstr[k] = b1;\n            _i /= 10;\n        }\n        return string(bstr);\n    }\n}\n",
    "sourceMap": "195:3242:4:-:0;;;605:382;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:0;665:10:2;867:9:0;:23::i;:::-;786:1:4;765:18;:22;;;744:117;;;;-1:-1:-1;;;744:117:4;;1811:2:5;744:117:4;;;1793:21:5;1850:2;1830:18;;;1823:30;1889:34;1869:18;;;1862:62;-1:-1:-1;;;1940:18:5;;;1933:46;1996:19;;744:117:4;;;;;;;;872:16;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;898:5:4;:14;;;;922:3;:10;942:17;:38;;-1:-1:-1;;942:38:4;;;;;;;;;;;-1:-1:-1;195:3242:4;;2041:169:0;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;195:3242:4:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;195:3242:4;;;-1:-1:-1;195:3242:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:5;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:160;223:13;;276:4;265:16;;255:27;;245:55;;296:1;293;286:12;245:55;146:160;;;:::o;311:1293::-;416:6;424;432;440;493:3;481:9;472:7;468:23;464:33;461:53;;;510:1;507;500:12;461:53;537:16;;-1:-1:-1;;;;;602:14:5;;;599:34;;;629:1;626;619:12;599:34;667:6;656:9;652:22;642:32;;712:7;705:4;701:2;697:13;693:27;683:55;;734:1;731;724:12;683:55;763:2;757:9;785:2;781;778:10;775:36;;;791:18;;:::i;:::-;866:2;860:9;834:2;920:13;;-1:-1:-1;;916:22:5;;;940:2;912:31;908:40;896:53;;;964:18;;;984:22;;;961:46;958:72;;;1010:18;;:::i;:::-;1050:10;1046:2;1039:22;1085:2;1077:6;1070:18;1107:4;1097:14;;1148:7;1143:2;1138;1134;1130:11;1126:20;1123:33;1120:53;;;1169:1;1166;1159:12;1120:53;1191:1;1182:10;;1201:129;1215:2;1212:1;1209:9;1201:129;;;1303:10;;;1299:19;;1293:26;1272:14;;;1268:23;;1261:59;1226:10;;;;1201:129;;;1348:2;1345:1;1342:9;1339:80;;;1407:1;1402:2;1397;1389:6;1385:15;1381:24;1374:35;1339:80;1438:6;1428:16;;;;;1484:2;1473:9;1469:18;1463:25;1453:35;;;;1528:2;1517:9;1513:18;1507:25;1497:35;;1551:47;1594:2;1583:9;1579:18;1551:47;:::i;:::-;1541:57;;311:1293;;;;;;;:::o;2026:380::-;2105:1;2101:12;;;;2148;;;2169:61;;2223:4;2215:6;2211:17;2201:27;;2169:61;2276:2;2268:6;2265:14;2245:18;2242:38;2239:161;;;2322:10;2317:3;2313:20;2310:1;2303:31;2357:4;2354:1;2347:15;2385:4;2382:1;2375:15;2239:161;;2026:380;;;:::o;:::-;195:3242:4;;;;;;",
    "sourcePath": "contracts/VotingSession.sol",
    "type": "contract"
}
